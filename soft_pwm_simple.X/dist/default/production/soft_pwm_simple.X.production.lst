

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Feb 14 23:42:06 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000E                     	;# 
    27  000E                     	;# 
    28  000F                     	;# 
    29  0010                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0015                     	;# 
    33  0015                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001F                     	;# 
    40  0081                     	;# 
    41  0085                     	;# 
    42  0086                     	;# 
    43  008C                     	;# 
    44  008E                     	;# 
    45  0092                     	;# 
    46  0098                     	;# 
    47  0099                     	;# 
    48  009A                     	;# 
    49  009B                     	;# 
    50  009C                     	;# 
    51  009D                     	;# 
    52  009F                     	;# 
    53                           
    54                           	psect	idataCOMMON
    55  009A                     __pidataCOMMON:	
    56                           
    57                           ;initializer for _pwm0
    58  009A  340A               	retlw	10
    59  009B  3400               	retlw	0
    60                           
    61                           	psect	idataBANK0
    62  0094                     __pidataBANK0:	
    63                           
    64                           ;initializer for _pwm1
    65  0094  3419               	retlw	25
    66  0095  3400               	retlw	0
    67                           
    68                           ;initializer for _pwm2
    69  0096  3441               	retlw	65
    70  0097  3400               	retlw	0
    71                           
    72                           ;initializer for _pwm3
    73  0098  3463               	retlw	99
    74  0099  3400               	retlw	0
    75  000B                     _INTCON	set	11
    76  000B                     _INTCONbits	set	11
    77  0006                     _PORTB	set	6
    78  0001                     _TMR0	set	1
    79  0081                     _OPTION_REGbits	set	129
    80  0086                     _TRISB	set	134
    81                           
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  0011                     start_initialization:	
    86  0011                     __initialization:	
    87                           
    88                           ; Clear objects allocated to COMMON
    89  0011  01F4               	clrf	__pbssCOMMON& (0+127)
    90  0012  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
    91  0013  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
    92                           
    93                           ; Initialize objects allocated to BANK0
    94  0014  2094               	fcall	__pidataBANK0	;fetch initializer
    95  0015  00A0               	movwf	__pdataBANK0& (0+127)
    96  0016  2095               	fcall	__pidataBANK0+1	;fetch initializer
    97  0017  00A1               	movwf	(__pdataBANK0+1)& (0+127)
    98  0018  2096               	fcall	__pidataBANK0+2	;fetch initializer
    99  0019  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   100  001A  2097               	fcall	__pidataBANK0+3	;fetch initializer
   101  001B  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   102  001C  2098               	fcall	__pidataBANK0+4	;fetch initializer
   103  001D  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   104  001E  2099               	fcall	__pidataBANK0+5	;fetch initializer
   105  001F  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   106                           
   107                           ; Initialize objects allocated to COMMON
   108  0020  209A               	fcall	__pidataCOMMON	;fetch initializer
   109  0021  00F7               	movwf	__pdataCOMMON& (0+127)
   110  0022  209B               	fcall	__pidataCOMMON+1	;fetch initializer
   111  0023  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   112  0024                     end_of_initialization:	
   113                           ;End of C runtime variable initialization code
   114                           
   115  0024                     __end_of__initialization:	
   116  0024  0183               	clrf	3
   117  0025  2882               	ljmp	_main	;jump to C main() function
   118                           
   119                           	psect	bssCOMMON
   120  0074                     __pbssCOMMON:	
   121  0074                     _cont:	
   122  0074                     	ds	2
   123  0076                     _sGPIO:	
   124  0076                     	ds	1
   125                           
   126                           	psect	dataCOMMON
   127  0077                     __pdataCOMMON:	
   128  0077                     _pwm0:	
   129  0077                     	ds	2
   130                           
   131                           	psect	dataBANK0
   132  0020                     __pdataBANK0:	
   133  0020                     _pwm1:	
   134  0020                     	ds	2
   135  0022                     _pwm2:	
   136  0022                     	ds	2
   137  0024                     _pwm3:	
   138  0024                     	ds	2
   139                           
   140                           	psect	cstackCOMMON
   141  0070                     __pcstackCOMMON:	
   142  0070                     ?_ISR:	
   143  0070                     ??_ISR:	
   144                           ; 0 bytes @ 0x0
   145                           
   146                           
   147                           ; 0 bytes @ 0x0
   148  0070                     	ds	4
   149  0074                     ??_main:	
   150                           
   151                           	psect	cstackBANK0
   152  0026                     __pcstackBANK0:	
   153                           ; 0 bytes @ 0x4
   154                           
   155  0026                     ?_main:	
   156  0026                     main@argc:	
   157                           ; 2 bytes @ 0x0
   158                           
   159                           
   160                           ; 2 bytes @ 0x0
   161  0026                     	ds	2
   162  0028                     main@argv:	
   163                           
   164                           ; 2 bytes @ 0x2
   165  0028                     	ds	2
   166                           
   167                           	psect	maintext
   168  0082                     __pmaintext:	
   169 ;;
   170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   171 ;;
   172 ;; *************** function _main *****************
   173 ;; Defined at:
   174 ;;		line 97 in file "soft_pwm_simple_main.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;  argc            2    0[BANK0 ] int 
   177 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  2    0[BANK0 ] int 
   182 ;; Registers used:
   183 ;;		wreg, status,2
   184 ;; Tracked objects:
   185 ;;		On entry : 17F/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   189 ;;      Params:         0       4       0       0
   190 ;;      Locals:         0       0       0       0
   191 ;;      Temps:          0       0       0       0
   192 ;;      Totals:         0       4       0       0
   193 ;;Total ram usage:        4 bytes
   194 ;; Hardware stack levels required when called:    1
   195 ;; This function calls:
   196 ;;		Nothing
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           
   203                           ;psect for function _main
   204  0082                     _main:	
   205                           
   206                           ;soft_pwm_simple_main.c: 98: TRISB = 0;
   207                           
   208                           ;incstack = 0
   209                           ; Regs used in _main: [wreg+status,2]
   210  0082  1683               	bsf	3,5	;RP0=1, select bank1
   211  0083  1303               	bcf	3,6	;RP1=0, select bank1
   212  0084  0186               	clrf	6	;volatile
   213                           
   214                           ;soft_pwm_simple_main.c: 99: PORTB = 0;
   215  0085  1283               	bcf	3,5	;RP0=0, select bank0
   216  0086  1303               	bcf	3,6	;RP1=0, select bank0
   217  0087  0186               	clrf	6	;volatile
   218                           
   219                           ;soft_pwm_simple_main.c: 102: INTCON = 0xA0;
   220  0088  30A0               	movlw	160
   221  0089  008B               	movwf	11	;volatile
   222                           
   223                           ;soft_pwm_simple_main.c: 103: OPTION_REGbits.T0CS = 0;
   224  008A  1683               	bsf	3,5	;RP0=1, select bank1
   225  008B  1303               	bcf	3,6	;RP1=0, select bank1
   226  008C  1281               	bcf	1,5	;volatile
   227                           
   228                           ;soft_pwm_simple_main.c: 104: INTCONbits.GIE = 1;
   229  008D  178B               	bsf	11,7	;volatile
   230                           
   231                           ;soft_pwm_simple_main.c: 105: INTCONbits.T0IE = 1;
   232  008E  168B               	bsf	11,5	;volatile
   233                           
   234                           ;soft_pwm_simple_main.c: 110: TMR0 = 254;
   235  008F  30FE               	movlw	254
   236  0090  1283               	bcf	3,5	;RP0=0, select bank0
   237  0091  1303               	bcf	3,6	;RP1=0, select bank0
   238  0092  0081               	movwf	1	;volatile
   239  0093                     l40:	
   240                           ;soft_pwm_simple_main.c: 111: while (1);
   241                           
   242  0093  2893               	goto	l40
   243  0094                     __end_of_main:	
   244                           ;soft_pwm_simple_main.c: 113: return (0);
   245                           ;	Return value of _main is never used
   246                           
   247                           
   248                           	psect	text1
   249  0026                     __ptext1:	
   250 ;; *************** function _ISR *****************
   251 ;; Defined at:
   252 ;;		line 59 in file "soft_pwm_simple_main.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;		None               void
   259 ;; Registers used:
   260 ;;		wreg, status,2
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   266 ;;      Params:         0       0       0       0
   267 ;;      Locals:         0       0       0       0
   268 ;;      Temps:          4       0       0       0
   269 ;;      Totals:         4       0       0       0
   270 ;;Total ram usage:        4 bytes
   271 ;; Hardware stack levels used:    1
   272 ;; This function calls:
   273 ;;		Nothing
   274 ;; This function is called by:
   275 ;;		Interrupt level 1
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           
   280                           ;psect for function _ISR
   281  0026                     _ISR:	
   282                           
   283                           ;soft_pwm_simple_main.c: 62: if (cont > 99)
   284  0026  3000               	movlw	0
   285  0027  0275               	subwf	_cont+1,w
   286  0028  3064               	movlw	100
   287  0029  1903               	skipnz
   288  002A  0274               	subwf	_cont,w
   289  002B  1C03               	skipc
   290  002C  2830               	goto	i1l548
   291                           
   292                           ;soft_pwm_simple_main.c: 63: cont = 0;
   293  002D  01F4               	clrf	_cont
   294  002E  01F5               	clrf	_cont+1
   295  002F  2836               	goto	i1l28
   296  0030                     i1l548:	
   297                           
   298                           ;soft_pwm_simple_main.c: 64: else
   299                           ;soft_pwm_simple_main.c: 65: cont++;
   300  0030  3001               	movlw	1
   301  0031  07F4               	addwf	_cont,f
   302  0032  1803               	skipnc
   303  0033  0AF5               	incf	_cont+1,f
   304  0034  3000               	movlw	0
   305  0035  07F5               	addwf	_cont+1,f
   306  0036                     i1l28:	
   307                           
   308                           ;soft_pwm_simple_main.c: 67: if ( cont > 0 && cont < pwm0 )
   309  0036  0875               	movf	_cont+1,w
   310  0037  0474               	iorwf	_cont,w
   311  0038  1903               	skipnz
   312  0039  2844               	goto	i1l29
   313  003A  0878               	movf	_pwm0+1,w
   314  003B  0275               	subwf	_cont+1,w
   315  003C  1D03               	skipz
   316  003D  2840               	goto	u12_25
   317  003E  0877               	movf	_pwm0,w
   318  003F  0274               	subwf	_cont,w
   319  0040                     u12_25:	
   320  0040  1803               	skipnc
   321  0041  2844               	goto	i1l29
   322                           
   323                           ;soft_pwm_simple_main.c: 68: sGPIO.GP0 = 1;
   324  0042  1476               	bsf	_sGPIO,0
   325  0043  2845               	goto	i1l554
   326  0044                     i1l29:	
   327                           
   328                           ;soft_pwm_simple_main.c: 69: else
   329                           ;soft_pwm_simple_main.c: 70: sGPIO.GP0 = 0;
   330  0044  1076               	bcf	_sGPIO,0
   331  0045                     i1l554:	
   332                           
   333                           ;soft_pwm_simple_main.c: 73: if ( cont > 0 && cont < pwm1 )
   334  0045  0875               	movf	_cont+1,w
   335  0046  0474               	iorwf	_cont,w
   336  0047  1903               	skipnz
   337  0048  2853               	goto	i1l31
   338  0049  0821               	movf	_pwm1+1,w
   339  004A  0275               	subwf	_cont+1,w
   340  004B  1D03               	skipz
   341  004C  284F               	goto	u14_25
   342  004D  0820               	movf	_pwm1,w
   343  004E  0274               	subwf	_cont,w
   344  004F                     u14_25:	
   345  004F  1803               	skipnc
   346  0050  2853               	goto	i1l31
   347                           
   348                           ;soft_pwm_simple_main.c: 74: sGPIO.GP1 = 1;
   349  0051  14F6               	bsf	_sGPIO,1
   350  0052  2854               	goto	i1l560
   351  0053                     i1l31:	
   352                           
   353                           ;soft_pwm_simple_main.c: 75: else
   354                           ;soft_pwm_simple_main.c: 76: sGPIO.GP1 = 0;
   355  0053  10F6               	bcf	_sGPIO,1
   356  0054                     i1l560:	
   357                           
   358                           ;soft_pwm_simple_main.c: 79: if ( cont > 0 && cont < pwm2 )
   359  0054  0875               	movf	_cont+1,w
   360  0055  0474               	iorwf	_cont,w
   361  0056  1903               	skipnz
   362  0057  2862               	goto	i1l33
   363  0058  0823               	movf	_pwm2+1,w
   364  0059  0275               	subwf	_cont+1,w
   365  005A  1D03               	skipz
   366  005B  285E               	goto	u16_25
   367  005C  0822               	movf	_pwm2,w
   368  005D  0274               	subwf	_cont,w
   369  005E                     u16_25:	
   370  005E  1803               	skipnc
   371  005F  2862               	goto	i1l33
   372                           
   373                           ;soft_pwm_simple_main.c: 80: sGPIO.GP2 = 1;
   374  0060  1576               	bsf	_sGPIO,2
   375  0061  2863               	goto	i1l566
   376  0062                     i1l33:	
   377                           
   378                           ;soft_pwm_simple_main.c: 81: else
   379                           ;soft_pwm_simple_main.c: 82: sGPIO.GP2 = 0;
   380  0062  1176               	bcf	_sGPIO,2
   381  0063                     i1l566:	
   382                           
   383                           ;soft_pwm_simple_main.c: 85: if ( cont > 0 && cont < pwm3 )
   384  0063  0875               	movf	_cont+1,w
   385  0064  0474               	iorwf	_cont,w
   386  0065  1903               	skipnz
   387  0066  2871               	goto	i1l35
   388  0067  0825               	movf	_pwm3+1,w
   389  0068  0275               	subwf	_cont+1,w
   390  0069  1D03               	skipz
   391  006A  286D               	goto	u18_25
   392  006B  0824               	movf	_pwm3,w
   393  006C  0274               	subwf	_cont,w
   394  006D                     u18_25:	
   395  006D  1803               	skipnc
   396  006E  2871               	goto	i1l35
   397                           
   398                           ;soft_pwm_simple_main.c: 86: sGPIO.GP3 = 1;
   399  006F  15F6               	bsf	_sGPIO,3
   400  0070  2872               	goto	i1l572
   401  0071                     i1l35:	
   402                           
   403                           ;soft_pwm_simple_main.c: 87: else
   404                           ;soft_pwm_simple_main.c: 88: sGPIO.GP3 = 0;
   405  0071  11F6               	bcf	_sGPIO,3
   406  0072                     i1l572:	
   407                           
   408                           ;soft_pwm_simple_main.c: 90: PORTB = sGPIO.Port;
   409  0072  0876               	movf	_sGPIO,w
   410  0073  0086               	movwf	6	;volatile
   411                           
   412                           ;soft_pwm_simple_main.c: 92: INTCONbits.T0IF = 0;
   413  0074  110B               	bcf	11,2	;volatile
   414                           
   415                           ;soft_pwm_simple_main.c: 93: TMR0 = 254;
   416  0075  30FE               	movlw	254
   417  0076  0081               	movwf	1	;volatile
   418  0077  0873               	movf	??_ISR+3,w
   419  0078  00FF               	movwf	127
   420  0079  0872               	movf	??_ISR+2,w
   421  007A  008A               	movwf	10
   422  007B  0871               	movf	??_ISR+1,w
   423  007C  0084               	movwf	4
   424  007D  0E70               	swapf	??_ISR^(0+-128),w
   425  007E  0083               	movwf	3
   426  007F  0EFE               	swapf	126,f
   427  0080  0E7E               	swapf	126,w
   428  0081  0009               	retfie
   429  0082                     __end_of_ISR:	
   430  007E                     btemp	set	126	;btemp
   431  007E                     wtemp	set	126
   432  007E                     wtemp0	set	126
   433  0080                     wtemp1	set	128
   434  0082                     wtemp2	set	130
   435  0084                     wtemp3	set	132
   436  0086                     wtemp4	set	134
   437  0088                     wtemp5	set	136
   438  007F                     wtemp6	set	127
   439  007E                     ttemp	set	126
   440  007E                     ttemp0	set	126
   441  0081                     ttemp1	set	129
   442  0084                     ttemp2	set	132
   443  0087                     ttemp3	set	135
   444  007F                     ttemp4	set	127
   445  007E                     ltemp	set	126
   446  007E                     ltemp0	set	126
   447  0082                     ltemp1	set	130
   448  0086                     ltemp2	set	134
   449  0080                     ltemp3	set	128
   450                           
   451                           	psect	intentry
   452  0004                     __pintentry:	
   453                           ;incstack = 0
   454                           ; Regs used in _ISR: [wreg+status,2]
   455                           
   456  0004                     interrupt_function:	
   457  007E                     saved_w	set	btemp
   458  0004  00FE               	movwf	btemp
   459  0005  0E03               	swapf	3,w
   460  0006  00F0               	movwf	??_ISR
   461  0007  0804               	movf	4,w
   462  0008  00F1               	movwf	??_ISR+1
   463  0009  080A               	movf	10,w
   464  000A  00F2               	movwf	??_ISR+2
   465  000B  1283               	bcf	3,5	;RP0=0, select bank0
   466  000C  1303               	bcf	3,6	;RP1=0, select bank0
   467  000D  087F               	movf	btemp+1,w
   468  000E  00F3               	movwf	??_ISR+3
   469  000F  2826               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       9
    BANK0            80      4      10
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4       A       3       12.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      13      10        0.0%
ABS                  0      0      13       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Feb 14 23:42:06 2016

            __CFG_CP$OFF 0000                       l40 0093              __CFG_LVP$ON 0000  
           __CFG_CPD$OFF 0000                      _ISR 0026                      fsr0 0004  
           __CFG_FOSC$XT 0000                     ?_ISR 0070             __CFG_WDTE$ON 0000  
                   i1l31 0053                     i1l33 0062                     i1l35 0071  
                   i1l28 0036                     i1l29 0044                     _TMR0 0001  
                   _cont 0074                     _main 0082                     _pwm0 0077  
                   _pwm1 0020                     _pwm2 0022                     _pwm3 0024  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0010                     ttemp 007E                     wtemp 007E  
          __CFG_MCLRE$ON 0000                    ??_ISR 0070                    ?_main 0026  
                  i1l560 0054                    i1l554 0045                    i1l572 0072  
                  i1l548 0030                    i1l566 0063                    u12_25 0040  
                  u14_25 004F                    u16_25 005E                    u18_25 006D  
                  _PORTB 0006                    _TRISB 0086                    _sGPIO 0076  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0011             __end_of_main 0094                   ??_main 0074  
                 _INTCON 000B           __CFG_PWRTE$OFF 0000             __pdataCOMMON 0077  
                 saved_w 007E  __end_of__initialization 0024           __pcstackCOMMON 0070  
           __pidataBANK0 0094           _OPTION_REGbits 0081               __pmaintext 0082  
             __pintentry 0004                  __ptext1 0026             __size_of_ISR 005C  
   end_of_initialization 0024            __pidataCOMMON 009A      start_initialization 0011  
            __end_of_ISR 0082              __pdataBANK0 0020              __pbssCOMMON 0074  
              ___latbits 0000            __pcstackBANK0 0026        interrupt_function 0004  
          __size_of_main 0012                 main@argc 0026                 main@argv 0028  
             _INTCONbits 000B                 intlevel1 0000  
