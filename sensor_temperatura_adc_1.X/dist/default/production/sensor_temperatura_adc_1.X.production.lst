

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Sep 24 02:03:03 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	smallconst
    55  000800                     __psmallconst:
    56                           	opt stack 0
    57  000800  00                 	db	0
    58  000801                     _dpowers:
    59                           	opt stack 0
    60  000801  0001               	dw	1
    61  000803  0000               	dw	0
    62  000805  000A               	dw	10
    63  000807  0000               	dw	0
    64  000809  0064               	dw	100
    65  00080B  0000               	dw	0
    66  00080D  03E8               	dw	1000
    67  00080F  0000               	dw	0
    68  000811  2710               	dw	10000
    69  000813  0000               	dw	0
    70  000815  86A0               	dw	34464
    71  000817  0001               	dw	1
    72  000819  4240               	dw	16960
    73  00081B  000F               	dw	15
    74  00081D  9680               	dw	38528
    75  00081F  0098               	dw	152
    76  000821  E100               	dw	57600
    77  000823  05F5               	dw	1525
    78  000825  CA00               	dw	51712
    79  000827  3B9A               	dw	15258
    80  000829                     __end_of_dpowers:
    81                           	opt stack 0
    82  000829                     __npowers_:
    83                           	opt stack 0
    84  000829  00                 	db	0
    85  00082A  80                 	db	128
    86  00082B  3F                 	db	63
    87  00082C  CD                 	db	205
    88  00082D  CC                 	db	204
    89  00082E  3D                 	db	61
    90  00082F  D7                 	db	215
    91  000830  23                 	db	35
    92  000831  3C                 	db	60
    93  000832  12                 	db	18
    94  000833  83                 	db	131
    95  000834  3A                 	db	58
    96  000835  B7                 	db	183
    97  000836  D1                 	db	209
    98  000837  38                 	db	56
    99  000838  C6                 	db	198
   100  000839  27                 	db	39
   101  00083A  37                 	db	55
   102  00083B  38                 	db	56
   103  00083C  86                 	db	134
   104  00083D  35                 	db	53
   105  00083E  C0                 	db	192
   106  00083F  D6                 	db	214
   107  000840  33                 	db	51
   108  000841  CC                 	db	204
   109  000842  2B                 	db	43
   110  000843  32                 	db	50
   111  000844  70                 	db	112
   112  000845  89                 	db	137
   113  000846  30                 	db	48
   114  000847  E7                 	db	231
   115  000848  DB                 	db	219
   116  000849  2E                 	db	46
   117  00084A  E5                 	db	229
   118  00084B  3C                 	db	60
   119  00084C  1E                 	db	30
   120  00084D  42                 	db	66
   121  00084E  A2                 	db	162
   122  00084F  0D                 	db	13
   123  000850                     __end_of__npowers_:
   124                           	opt stack 0
   125  000850                     __powers_:
   126                           	opt stack 0
   127  000850  00                 	db	0
   128  000851  80                 	db	128
   129  000852  3F                 	db	63
   130  000853  00                 	db	0
   131  000854  20                 	db	32
   132  000855  41                 	db	65
   133  000856  00                 	db	0
   134  000857  C8                 	db	200
   135  000858  42                 	db	66
   136  000859  00                 	db	0
   137  00085A  7A                 	db	122
   138  00085B  44                 	db	68
   139  00085C  40                 	db	64
   140  00085D  1C                 	db	28
   141  00085E  46                 	db	70
   142  00085F  50                 	db	80
   143  000860  C3                 	db	195
   144  000861  47                 	db	71
   145  000862  24                 	db	36
   146  000863  74                 	db	116
   147  000864  49                 	db	73
   148  000865  97                 	db	151
   149  000866  18                 	db	24
   150  000867  4B                 	db	75
   151  000868  BC                 	db	188
   152  000869  BE                 	db	190
   153  00086A  4C                 	db	76
   154  00086B  6B                 	db	107
   155  00086C  6E                 	db	110
   156  00086D  4E                 	db	78
   157  00086E  03                 	db	3
   158  00086F  15                 	db	21
   159  000870  50                 	db	80
   160  000871  79                 	db	121
   161  000872  AD                 	db	173
   162  000873  60                 	db	96
   163  000874  F3                 	db	243
   164  000875  49                 	db	73
   165  000876  71                 	db	113
   166  000877                     __end_of__powers_:
   167                           	opt stack 0
   168  0000                     _ADCON0	set	4034
   169  0000                     _ADCON0bits	set	4034
   170  0000                     _ADCON1	set	4033
   171  0000                     _ADCON2	set	4032
   172  0000                     _ADRESH	set	4036
   173  0000                     _ADRESL	set	4035
   174  0000                     _CMCONbits	set	4020
   175  0000                     _INTCONbits	set	4082
   176  0000                     _LATBbits	set	3978
   177  0000                     _PIE1bits	set	3997
   178  0000                     _PIR1bits	set	3998
   179  0000                     _PORTB	set	3969
   180  0000                     _TRISAbits	set	3986
   181  0000                     _TRISB	set	3987
   182  0000                     _TRISBbits	set	3987
   183  000877                     __stringdata:
   184                           	opt stack 0
   185  000877                     STR_1:
   186  000877  54                 	db	84	;'T'
   187  000878  65                 	db	101	;'e'
   188  000879  6D                 	db	109	;'m'
   189  00087A  70                 	db	112	;'p'
   190  00087B  3A                 	db	58	;':'
   191  00087C  20                 	db	32
   192  00087D  00                 	db	0
   193  00087E                     STR_3:
   194  00087E  25                 	db	37
   195  00087F  32                 	db	50	;'2'
   196  000880  2E                 	db	46
   197  000881  31                 	db	49	;'1'
   198  000882  66                 	db	102	;'f'
   199  000883  00                 	db	0
   200  000884                     STR_2:
   201  000884  43                 	db	67	;'C'
   202  000885  00                 	db	0
   203  000886                     __end_of__stringdata:
   204                           	opt stack 0
   205                           
   206                           ; #config settings
   207  000886  00                 	db	0	; dummy byte at the end
   208  0000                     
   209                           	psect	cinit
   210  002A3A                     __pcinit:
   211                           	opt stack 0
   212  002A3A                     start_initialization:
   213                           	opt stack 0
   214  002A3A                     __initialization:
   215                           	opt stack 0
   216  002A3A                     end_of_initialization:
   217                           	opt stack 0
   218  002A3A                     __end_of__initialization:
   219                           	opt stack 0
   220  002A3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   221  002A3C  6EF8               	movwf	tblptru,c
   222  002A3E  0100               	movlb	0
   223  002A40  EF92  F00D         	goto	_main	;jump to C main() function
   224                           tblptru	equ	0xFF8
   225                           
   226                           	psect	cstackBANK0
   227  000060                     __pcstackBANK0:
   228                           	opt stack 0
   229  000060                     _sprintf$1608:
   230                           	opt stack 0
   231                           
   232                           ; 3 bytes @ 0x0
   233  000060                     	ds	3
   234  000063                     _sprintf$339:
   235                           	opt stack 0
   236                           
   237                           ; 4 bytes @ 0x3
   238  000063                     	ds	4
   239  000067                     sprintf@ap:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x7
   243  000067                     	ds	2
   244  000069                     sprintf@vd:
   245                           	opt stack 0
   246                           
   247                           ; 4 bytes @ 0x9
   248  000069                     	ds	4
   249  00006D                     sprintf@vd_341:
   250                           	opt stack 0
   251                           
   252                           ; 4 bytes @ 0xD
   253  00006D                     	ds	4
   254  000071                     sprintf@_val:
   255                           	opt stack 0
   256                           
   257                           ; 5 bytes @ 0x11
   258  000071                     	ds	5
   259  000076                     sprintf@integ:
   260                           	opt stack 0
   261                           
   262                           ; 3 bytes @ 0x16
   263  000076                     	ds	3
   264  000079                     sprintf@flag:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x19
   268  000079                     	ds	2
   269  00007B                     sprintf@width:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x1B
   273  00007B                     	ds	2
   274  00007D                     sprintf@exp:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x1D
   278  00007D                     	ds	2
   279  00007F                     sprintf@fval:
   280                           	opt stack 0
   281                           
   282                           ; 3 bytes @ 0x1F
   283  00007F                     	ds	3
   284  000082                     sprintf@prec:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x22
   288  000082                     	ds	2
   289  000084                     sprintf@c:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x24
   293  000084                     	ds	1
   294  000085                     main@max:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x25
   298  000085                     	ds	2
   299  000087                     main@buffer:
   300                           	opt stack 0
   301                           
   302                           ; 6 bytes @ 0x27
   303  000087                     	ds	6
   304  00008D                     _main$1604:
   305                           	opt stack 0
   306                           
   307                           ; 3 bytes @ 0x2D
   308  00008D                     	ds	3
   309  000090                     main@temp:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x30
   313  000090                     	ds	3
   314  000093                     main@result:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x33
   318  000093                     	ds	2
   319                           tblptru	equ	0xFF8
   320                           
   321                           	psect	cstackCOMRAM
   322  000001                     __pcstackCOMRAM:
   323                           	opt stack 0
   324  000001                     ??_SetDDRamAddr:
   325  000001                     ??_isdigit:
   326  000001                     ??_Delay10KTCYx:
   327  000001                     ?_ReadADC:
   328                           	opt stack 0
   329  000001                     ?___awmod:
   330                           	opt stack 0
   331  000001                     ?___ftpack:
   332                           	opt stack 0
   333  000001                     ?___ftneg:
   334                           	opt stack 0
   335  000001                     ?__tdiv_to_l_:
   336                           	opt stack 0
   337  000001                     ?__div_to_l_:
   338                           	opt stack 0
   339  000001                     ?___lldiv:
   340                           	opt stack 0
   341  000001                     ?___llmod:
   342                           	opt stack 0
   343  000001                     OpenADC@config2:
   344                           	opt stack 0
   345  000001                     WriteCmdXLCD@cmd:
   346                           	opt stack 0
   347  000001                     WriteDataXLCD@data:
   348                           	opt stack 0
   349  000001                     Delay10TCYx@unit:
   350                           	opt stack 0
   351  000001                     Delay1KTCYx@unit:
   352                           	opt stack 0
   353  000001                     Delay_ms@ms:
   354                           	opt stack 0
   355  000001                     ___awmod@dividend:
   356                           	opt stack 0
   357  000001                     __div_to_l_@f1:
   358                           	opt stack 0
   359  000001                     ___ftpack@arg:
   360                           	opt stack 0
   361  000001                     __tdiv_to_l_@f1:
   362                           	opt stack 0
   363  000001                     ___ftge@ff1:
   364                           	opt stack 0
   365  000001                     ___ftneg@f1:
   366                           	opt stack 0
   367  000001                     ___lldiv@dividend:
   368                           	opt stack 0
   369  000001                     ___llmod@dividend:
   370                           	opt stack 0
   371                           
   372                           ; 4 bytes @ 0x0
   373  000001                     	ds	1
   374  000002                     OpenADC@portconfig:
   375                           	opt stack 0
   376  000002                     Delay10KTCYx@unit:
   377                           	opt stack 0
   378  000002                     _isdigit$1286:
   379                           	opt stack 0
   380  000002                     putrsXLCD@buffer:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x1
   384  000002                     	ds	1
   385  000003                     ??_Delay_ms:
   386  000003                     ??_OpenADC:
   387  000003                     isdigit@c:
   388                           	opt stack 0
   389  000003                     ___awmod@divisor:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x2
   393  000003                     	ds	1
   394  000004                     SetDDRamAddr@DDaddr:
   395                           	opt stack 0
   396  000004                     ___ftpack@exp:
   397                           	opt stack 0
   398  000004                     Delay_ms@i:
   399                           	opt stack 0
   400  000004                     __div_to_l_@f2:
   401                           	opt stack 0
   402  000004                     __tdiv_to_l_@f2:
   403                           	opt stack 0
   404  000004                     ___ftge@ff2:
   405                           	opt stack 0
   406                           
   407                           ; 3 bytes @ 0x3
   408  000004                     	ds	1
   409  000005                     ??___awmod:
   410  000005                     OpenADC@config:
   411                           	opt stack 0
   412  000005                     OpenXLCD@lcdtype:
   413                           	opt stack 0
   414  000005                     ___ftpack@sign:
   415                           	opt stack 0
   416  000005                     ___lldiv@divisor:
   417                           	opt stack 0
   418  000005                     ___llmod@divisor:
   419                           	opt stack 0
   420                           
   421                           ; 4 bytes @ 0x4
   422  000005                     	ds	1
   423  000006                     ??___ftpack:
   424  000006                     ___awmod@counter:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x5
   428  000006                     	ds	1
   429  000007                     ??__tdiv_to_l_:
   430  000007                     ??__div_to_l_:
   431  000007                     ??___ftge:
   432  000007                     ___awmod@sign:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x6
   436  000007                     	ds	1
   437  000008                     ?___awdiv:
   438                           	opt stack 0
   439  000008                     ___awdiv@dividend:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x7
   443  000008                     	ds	1
   444  000009                     ??___lldiv:
   445  000009                     ??___llmod:
   446  000009                     ?___ftadd:
   447                           	opt stack 0
   448  000009                     ?___lltoft:
   449                           	opt stack 0
   450  000009                     ?___lwtoft:
   451                           	opt stack 0
   452  000009                     ___lwtoft@c:
   453                           	opt stack 0
   454  000009                     ___ftadd@f1:
   455                           	opt stack 0
   456  000009                     ___lltoft@c:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x8
   460  000009                     	ds	1
   461  00000A                     ___llmod@counter:
   462                           	opt stack 0
   463  00000A                     ___awdiv@divisor:
   464                           	opt stack 0
   465  00000A                     __tdiv_to_l_@quot:
   466                           	opt stack 0
   467  00000A                     ___lldiv@quotient:
   468                           	opt stack 0
   469                           
   470                           ; 4 bytes @ 0x9
   471  00000A                     	ds	1
   472  00000B                     __div_to_l_@quot:
   473                           	opt stack 0
   474                           
   475                           ; 4 bytes @ 0xA
   476  00000B                     	ds	1
   477  00000C                     ??___awdiv:
   478  00000C                     ??___lwtoft:
   479  00000C                     ___ftadd@f2:
   480                           	opt stack 0
   481                           
   482                           ; 3 bytes @ 0xB
   483  00000C                     	ds	1
   484  00000D                     ??___lltoft:
   485  00000D                     ___awdiv@counter:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0xC
   489  00000D                     	ds	1
   490  00000E                     ___awdiv@sign:
   491                           	opt stack 0
   492  00000E                     __tdiv_to_l_@cntr:
   493                           	opt stack 0
   494  00000E                     ___lldiv@counter:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0xD
   498  00000E                     	ds	1
   499  00000F                     ??___ftadd:
   500  00000F                     __div_to_l_@cntr:
   501                           	opt stack 0
   502  00000F                     __tdiv_to_l_@exp1:
   503                           	opt stack 0
   504  00000F                     ___awdiv@quotient:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0xE
   508  00000F                     	ds	1
   509  000010                     __div_to_l_@exp1:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0xF
   513  000010                     	ds	1
   514  000011                     ?___wmul:
   515                           	opt stack 0
   516  000011                     ___lltoft@exp:
   517                           	opt stack 0
   518  000011                     ___wmul@multiplier:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x10
   522  000011                     	ds	1
   523  000012                     ___ftadd@sign:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x11
   527  000012                     	ds	1
   528  000013                     ___ftadd@exp2:
   529                           	opt stack 0
   530  000013                     ___wmul@multiplicand:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x12
   534  000013                     	ds	1
   535  000014                     ___ftadd@exp1:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x13
   539  000014                     	ds	1
   540  000015                     ?___ftsub:
   541                           	opt stack 0
   542  000015                     ___wmul@product:
   543                           	opt stack 0
   544  000015                     ___ftsub@f1:
   545                           	opt stack 0
   546                           
   547                           ; 3 bytes @ 0x14
   548  000015                     	ds	2
   549  000017                     ?___fttol:
   550                           	opt stack 0
   551  000017                     ___fttol@f1:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x16
   555  000017                     	ds	1
   556  000018                     ___ftsub@f2:
   557                           	opt stack 0
   558                           
   559                           ; 3 bytes @ 0x17
   560  000018                     	ds	3
   561  00001B                     ??___fttol:
   562  00001B                     ___asftsub@f1p:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x1A
   566  00001B                     	ds	2
   567  00001D                     ___asftsub@f2:
   568                           	opt stack 0
   569                           
   570                           ; 3 bytes @ 0x1C
   571  00001D                     	ds	3
   572  000020                     ___fttol@sign1:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x1F
   576  000020                     	ds	1
   577  000021                     ___fttol@lval:
   578                           	opt stack 0
   579                           
   580                           ; 4 bytes @ 0x20
   581  000021                     	ds	4
   582  000025                     ___fttol@exp1:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x24
   586  000025                     	ds	1
   587  000026                     ?___ftmul:
   588                           	opt stack 0
   589  000026                     ___ftmul@f1:
   590                           	opt stack 0
   591                           
   592                           ; 3 bytes @ 0x25
   593  000026                     	ds	3
   594  000029                     ___ftmul@f2:
   595                           	opt stack 0
   596                           
   597                           ; 3 bytes @ 0x28
   598  000029                     	ds	3
   599  00002C                     ??___ftmul:
   600                           
   601                           ; 0 bytes @ 0x2B
   602  00002C                     	ds	3
   603  00002F                     ___ftmul@exp:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x2E
   607  00002F                     	ds	1
   608  000030                     ___ftmul@f3_as_product:
   609                           	opt stack 0
   610                           
   611                           ; 3 bytes @ 0x2F
   612  000030                     	ds	3
   613  000033                     ___ftmul@cntr:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x32
   617  000033                     	ds	1
   618  000034                     ___ftmul@sign:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x33
   622  000034                     	ds	1
   623  000035                     ?___ftdiv:
   624                           	opt stack 0
   625  000035                     ?_fround:
   626                           	opt stack 0
   627  000035                     ?_scale:
   628                           	opt stack 0
   629  000035                     ___asftmul@f1p:
   630                           	opt stack 0
   631  000035                     ___ftdiv@f1:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x34
   635  000035                     	ds	2
   636  000037                     ___asftmul@f2:
   637                           	opt stack 0
   638                           
   639                           ; 3 bytes @ 0x36
   640  000037                     	ds	1
   641  000038                     ___ftdiv@f2:
   642                           	opt stack 0
   643  000038                     _fround$1606:
   644                           	opt stack 0
   645  000038                     _scale$1607:
   646                           	opt stack 0
   647                           
   648                           ; 3 bytes @ 0x37
   649  000038                     	ds	2
   650  00003A                     
   651                           ; 0 bytes @ 0x39
   652  00003A                     	ds	1
   653  00003B                     ??___ftdiv:
   654  00003B                     scale@scl:
   655                           	opt stack 0
   656  00003B                     _fround$1605:
   657                           	opt stack 0
   658                           
   659                           ; 3 bytes @ 0x3A
   660  00003B                     	ds	3
   661  00003E                     fround@prec:
   662                           	opt stack 0
   663  00003E                     ___ftdiv@cntr:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x3D
   667  00003E                     	ds	1
   668  00003F                     ___asftadd@f1p:
   669                           	opt stack 0
   670  00003F                     ___ftdiv@f3:
   671                           	opt stack 0
   672                           
   673                           ; 3 bytes @ 0x3E
   674  00003F                     	ds	2
   675  000041                     ___asftadd@f2:
   676                           	opt stack 0
   677                           
   678                           ; 3 bytes @ 0x40
   679  000041                     	ds	1
   680  000042                     ___ftdiv@exp:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x41
   684  000042                     	ds	1
   685  000043                     ___ftdiv@sign:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x42
   689  000043                     	ds	1
   690  000044                     ?_sprintf:
   691                           	opt stack 0
   692  000044                     sprintf@sp:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x43
   696  000044                     	ds	2
   697  000046                     sprintf@f:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x45
   701  000046                     	ds	5
   702  00004B                     ??_sprintf:
   703                           
   704                           ; 0 bytes @ 0x4A
   705  00004B                     	ds	6
   706  000051                     ??_main:
   707                           
   708                           ; 0 bytes @ 0x50
   709  000051                     	ds	2
   710                           tblptru	equ	0xFF8
   711                           
   712 ;;
   713 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   714 ;;
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 64 in file "sensor_temp01_main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  buffer          6   39[BANK0 ] unsigned char [6]
   722 ;;  temp            3   48[BANK0 ] float 
   723 ;;  result          2   51[BANK0 ] unsigned int 
   724 ;;  max             2   37[BANK0 ] unsigned int 
   725 ;; Return value:  Size  Location     Type
   726 ;;		None               void
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   734 ;;      Params:         0       0       0       0       0       0       0       0       0
   735 ;;      Locals:         0      16       0       0       0       0       0       0       0
   736 ;;      Temps:          2       0       0       0       0       0       0       0       0
   737 ;;      Totals:         2      16       0       0       0       0       0       0       0
   738 ;;Total ram usage:       18 bytes
   739 ;; Hardware stack levels required when called:    5
   740 ;; This function calls:
   741 ;;		_BusyADC
   742 ;;		_BusyXLCD
   743 ;;		_ConvertADC
   744 ;;		_Delay10TCYx
   745 ;;		_Delay_ms
   746 ;;		_OpenADC
   747 ;;		_OpenXLCD
   748 ;;		_ReadADC
   749 ;;		_SetDDRamAddr
   750 ;;		_WriteCmdXLCD
   751 ;;		___ftdiv
   752 ;;		___ftmul
   753 ;;		___lwtoft
   754 ;;		_putrsXLCD
   755 ;;		_setupMCU
   756 ;;		_sprintf
   757 ;; This function is called by:
   758 ;;		Startup code after reset
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text0
   763  001B24                     __ptext0:
   764                           	opt stack 0
   765  001B24                     _main:
   766                           	opt stack 26
   767                           
   768                           ;sensor_temp01_main.c: 65: setupMCU();
   769                           
   770                           ;incstack = 0
   771  001B24  ECEB  F014         	call	_setupMCU	;wreg free
   772                           
   773                           ;sensor_temp01_main.c: 67: unsigned int result = 0;
   774  001B28  0E00               	movlw	0
   775  001B2A  0100               	movlb	0	; () banked
   776  001B2C  0100               	movlb	0	; () banked
   777  001B2E  6F94               	movwf	(main@result+1)& (0+255),b
   778  001B30  0E00               	movlw	0
   779  001B32  0100               	movlb	0	; () banked
   780  001B34  6F93               	movwf	main@result& (0+255),b
   781                           
   782                           ; BSR set to: 0
   783                           ;sensor_temp01_main.c: 68: float temp = 0;
   784  001B36  0E00               	movlw	0
   785  001B38  0100               	movlb	0	; () banked
   786  001B3A  0100               	movlb	0	; () banked
   787  001B3C  6F90               	movwf	main@temp& (0+255),b
   788  001B3E  0E00               	movlw	0
   789  001B40  0100               	movlb	0	; () banked
   790  001B42  0100               	movlb	0	; () banked
   791  001B44  6F91               	movwf	(main@temp+1)& (0+255),b
   792  001B46  0E00               	movlw	0
   793  001B48  0100               	movlb	0	; () banked
   794  001B4A  0100               	movlb	0	; () banked
   795  001B4C  6F92               	movwf	(main@temp+2)& (0+255),b
   796                           
   797                           ; BSR set to: 0
   798                           ;sensor_temp01_main.c: 69: char buffer[6];
   799                           ;sensor_temp01_main.c: 70: unsigned int max = 99999;
   800  001B4E  0E86               	movlw	134
   801  001B50  0100               	movlb	0	; () banked
   802  001B52  0100               	movlb	0	; () banked
   803  001B54  6F86               	movwf	(main@max+1)& (0+255),b
   804  001B56  0E9F               	movlw	159
   805  001B58  0100               	movlb	0	; () banked
   806  001B5A  6F85               	movwf	main@max& (0+255),b
   807                           
   808                           ; BSR set to: 0
   809                           ;sensor_temp01_main.c: 72: Delay_ms(1000);
   810  001B5C  0E03               	movlw	3
   811  001B5E  6E02               	movwf	Delay_ms@ms+1,c
   812  001B60  0EE8               	movlw	232
   813  001B62  6E01               	movwf	Delay_ms@ms,c
   814  001B64  EC9A  F014         	call	_Delay_ms	;wreg free
   815                           
   816                           ;sensor_temp01_main.c: 85: OpenADC(0b11101111 &
   817                           ;sensor_temp01_main.c: 86: 0b11111111 &
   818                           ;sensor_temp01_main.c: 87: 0b11111101,
   819                           ;sensor_temp01_main.c: 88: 0b10000111 &
   820                           ;sensor_temp01_main.c: 89: 0b01111111 &
   821                           ;sensor_temp01_main.c: 90: 0b11111110 &
   822                           ;sensor_temp01_main.c: 91: 0b11111101,
   823                           ;sensor_temp01_main.c: 92: 14);
   824  001B68  6E51               	movwf	??_main& (0+255),c
   825  001B6A  0E04               	movlw	4
   826  001B6C  6E01               	movwf	OpenADC@config2,c
   827  001B6E  5051               	movf	??_main& (0+255),w,c
   828  001B70  6E52               	movwf	(??_main+1)& (0+255),c
   829  001B72  0E0E               	movlw	14
   830  001B74  6E02               	movwf	OpenADC@portconfig,c
   831  001B76  5052               	movf	(??_main+1)& (0+255),w,c
   832  001B78  0EED               	movlw	237
   833  001B7A  EC0A  F013         	call	_OpenADC
   834                           
   835                           ;sensor_temp01_main.c: 94: Delay10TCYx(5);
   836  001B7E  0E05               	movlw	5
   837  001B80  EC0E  F015         	call	_Delay10TCYx
   838                           
   839                           ;sensor_temp01_main.c: 100: OpenXLCD(0b00101100 & 0b00111000);
   840  001B84  0E28               	movlw	40
   841  001B86  EC77  F011         	call	_OpenXLCD
   842  001B8A                     l4514:
   843  001B8A  EC4C  F014         	call	_BusyXLCD	;wreg free
   844  001B8E  0900               	iorlw	0
   845  001B90  A4D8               	btfss	status,2,c
   846  001B92  D7FB               	goto	l4514
   847                           
   848                           ;sensor_temp01_main.c: 105: WriteCmdXLCD(0x06);
   849  001B94  0E06               	movlw	6
   850  001B96  ECB5  F013         	call	_WriteCmdXLCD
   851                           
   852                           ;sensor_temp01_main.c: 107: WriteCmdXLCD(0x0C);
   853  001B9A  0E0C               	movlw	12
   854  001B9C  ECB5  F013         	call	_WriteCmdXLCD
   855                           
   856                           ;sensor_temp01_main.c: 108: _delay((unsigned long)((10)*(20000000/4000.0)));
   857  001BA0  0E41               	movlw	65
   858  001BA2  6E51               	movwf	??_main& (0+255),c
   859  001BA4  0EEE               	movlw	238
   860  001BA6                     u3217:
   861  001BA6  2EE8               	decfsz	wreg,f,c
   862  001BA8  D7FE               	goto	u3217
   863  001BAA  2E51               	decfsz	??_main& (0+255),f,c
   864  001BAC  D7FC               	goto	u3217
   865  001BAE  D000               	nop2	
   866                           
   867                           ;sensor_temp01_main.c: 111: SetDDRamAddr(0x00);
   868  001BB0  0E00               	movlw	0
   869  001BB2  EC68  F013         	call	_SetDDRamAddr
   870                           
   871                           ;sensor_temp01_main.c: 112: _delay((unsigned long)((200)*(20000000/4000000.0)));
   872  001BB6  0EFA               	movlw	250
   873  001BB8                     u3227:
   874  001BB8  F000               	nop	
   875  001BBA  2EE8               	decfsz	wreg,f,c
   876  001BBC  D7FD               	goto	u3227
   877                           
   878                           ;sensor_temp01_main.c: 113: putrsXLCD("Temp: ");
   879  001BBE  0E08               	movlw	high STR_1
   880  001BC0  6E03               	movwf	putrsXLCD@buffer+1,c
   881  001BC2  0E77               	movlw	low STR_1
   882  001BC4  6E02               	movwf	putrsXLCD@buffer,c
   883  001BC6  EC3A  F013         	call	_putrsXLCD	;wreg free
   884                           
   885                           ;sensor_temp01_main.c: 114: _delay((unsigned long)((200)*(20000000/4000000.0)));
   886  001BCA  0EFA               	movlw	250
   887  001BCC                     u3237:
   888  001BCC  F000               	nop	
   889  001BCE  2EE8               	decfsz	wreg,f,c
   890  001BD0  D7FD               	goto	u3237
   891                           
   892                           ;sensor_temp01_main.c: 115: SetDDRamAddr(0x0D);
   893  001BD2  0E0D               	movlw	13
   894  001BD4  EC68  F013         	call	_SetDDRamAddr
   895                           
   896                           ;sensor_temp01_main.c: 116: putrsXLCD("C");
   897  001BD8  0E08               	movlw	high STR_2
   898  001BDA  6E03               	movwf	putrsXLCD@buffer+1,c
   899  001BDC  0E84               	movlw	low STR_2
   900  001BDE  6E02               	movwf	putrsXLCD@buffer,c
   901  001BE0  EC3A  F013         	call	_putrsXLCD	;wreg free
   902  001BE4                     l4530:
   903                           
   904                           ;sensor_temp01_main.c: 119: {
   905                           ;sensor_temp01_main.c: 121: ConvertADC();
   906  001BE4  EC2B  F015         	call	_ConvertADC	;wreg free
   907  001BE8                     l4532:
   908  001BE8  EC17  F015         	call	_BusyADC	;wreg free
   909  001BEC  0900               	iorlw	0
   910  001BEE  A4D8               	btfss	status,2,c
   911  001BF0  D7FB               	goto	l4532
   912                           
   913                           ;sensor_temp01_main.c: 126: result = ReadADC();
   914  001BF2  EC22  F015         	call	_ReadADC	;wreg free
   915  001BF6  C001  F093         	movff	?_ReadADC,main@result
   916  001BFA  C002  F094         	movff	?_ReadADC+1,main@result+1
   917                           
   918                           ;sensor_temp01_main.c: 127: temp = (5.0 * result / 1024.0) * 100;
   919  001BFE  0E00               	movlw	0
   920  001C00  6E38               	movwf	___ftdiv@f2,c
   921  001C02  0E80               	movlw	128
   922  001C04  6E39               	movwf	___ftdiv@f2+1,c
   923  001C06  0E44               	movlw	68
   924  001C08  6E3A               	movwf	___ftdiv@f2+2,c
   925  001C0A  0E00               	movlw	0
   926  001C0C  6E29               	movwf	___ftmul@f2,c
   927  001C0E  0EA0               	movlw	160
   928  001C10  6E2A               	movwf	___ftmul@f2+1,c
   929  001C12  0E40               	movlw	64
   930  001C14  6E2B               	movwf	___ftmul@f2+2,c
   931  001C16  C093  F009         	movff	main@result,___lwtoft@c
   932  001C1A  C094  F00A         	movff	main@result+1,___lwtoft@c+1
   933  001C1E  EC84  F014         	call	___lwtoft	;wreg free
   934  001C22  C009  F026         	movff	?___lwtoft,___ftmul@f1
   935  001C26  C00A  F027         	movff	?___lwtoft+1,___ftmul@f1+1
   936  001C2A  C00B  F028         	movff	?___lwtoft+2,___ftmul@f1+2
   937  001C2E  EC7E  F00F         	call	___ftmul	;wreg free
   938  001C32  C026  F035         	movff	?___ftmul,___ftdiv@f1
   939  001C36  C027  F036         	movff	?___ftmul+1,___ftdiv@f1+1
   940  001C3A  C028  F037         	movff	?___ftmul+2,___ftdiv@f1+2
   941  001C3E  ECF4  F00F         	call	___ftdiv	;wreg free
   942  001C42  C035  F08D         	movff	?___ftdiv,_main$1604
   943  001C46  C036  F08E         	movff	?___ftdiv+1,_main$1604+1
   944  001C4A  C037  F08F         	movff	?___ftdiv+2,_main$1604+2
   945                           
   946                           ;sensor_temp01_main.c: 127: temp = (5.0 * result / 1024.0) * 100;
   947  001C4E  C08D  F026         	movff	_main$1604,___ftmul@f1
   948  001C52  C08E  F027         	movff	_main$1604+1,___ftmul@f1+1
   949  001C56  C08F  F028         	movff	_main$1604+2,___ftmul@f1+2
   950  001C5A  0E00               	movlw	0
   951  001C5C  6E29               	movwf	___ftmul@f2,c
   952  001C5E  0EC8               	movlw	200
   953  001C60  6E2A               	movwf	___ftmul@f2+1,c
   954  001C62  0E42               	movlw	66
   955  001C64  6E2B               	movwf	___ftmul@f2+2,c
   956  001C66  EC7E  F00F         	call	___ftmul	;wreg free
   957  001C6A  C026  F090         	movff	?___ftmul,main@temp
   958  001C6E  C027  F091         	movff	?___ftmul+1,main@temp+1
   959  001C72  C028  F092         	movff	?___ftmul+2,main@temp+2
   960                           
   961                           ;sensor_temp01_main.c: 129: SetDDRamAddr(0x07);
   962  001C76  0E07               	movlw	7
   963  001C78  EC68  F013         	call	_SetDDRamAddr
   964                           
   965                           ;sensor_temp01_main.c: 130: sprintf(buffer, "%2.1f", temp);
   966  001C7C  0100               	movlb	0	; () banked
   967  001C7E  0E00               	movlw	high main@buffer
   968  001C80  6E45               	movwf	sprintf@sp+1,c
   969  001C82  0100               	movlb	0	; () banked
   970  001C84  0E87               	movlw	low main@buffer
   971  001C86  6E44               	movwf	sprintf@sp,c
   972  001C88  0E08               	movlw	high STR_3
   973  001C8A  6E47               	movwf	sprintf@f+1,c
   974  001C8C  0E7E               	movlw	low STR_3
   975  001C8E  6E46               	movwf	sprintf@f,c
   976  001C90  C090  F048         	movff	main@temp,?_sprintf+4
   977  001C94  C091  F049         	movff	main@temp+1,?_sprintf+5
   978  001C98  C092  F04A         	movff	main@temp+2,?_sprintf+6
   979  001C9C  EC44  F004         	call	_sprintf	;wreg free
   980                           
   981                           ;sensor_temp01_main.c: 131: putrsXLCD(buffer);
   982  001CA0  0100               	movlb	0	; () banked
   983  001CA2  0E00               	movlw	high main@buffer
   984  001CA4  6E03               	movwf	putrsXLCD@buffer+1,c
   985  001CA6  0100               	movlb	0	; () banked
   986  001CA8  0E87               	movlw	low main@buffer
   987  001CAA  6E02               	movwf	putrsXLCD@buffer,c
   988  001CAC  EC3A  F013         	call	_putrsXLCD	;wreg free
   989                           
   990                           ;sensor_temp01_main.c: 132: Delay_ms(300);
   991  001CB0  0E01               	movlw	1
   992  001CB2  6E02               	movwf	Delay_ms@ms+1,c
   993  001CB4  0E2C               	movlw	44
   994  001CB6  6E01               	movwf	Delay_ms@ms,c
   995  001CB8  EC9A  F014         	call	_Delay_ms	;wreg free
   996  001CBC  D793               	goto	l4530
   997  001CBE                     __end_of_main:
   998                           	opt stack 0
   999                           tblptru	equ	0xFF8
  1000                           wreg	equ	0xFE8
  1001                           status	equ	0xFD8
  1002                           
  1003 ;; *************** function _sprintf *****************
  1004 ;; Defined at:
  1005 ;;		line 492 in file "/opt/microchip/xc8/v1.30/sources/common/doprnt.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  sp              2   67[COMRAM] PTR unsigned char 
  1008 ;;		 -> main@buffer(6), 
  1009 ;;  f               2   69[COMRAM] PTR const unsigned char 
  1010 ;;		 -> STR_3(6), 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  vd              4    9[BANK0 ] unsigned long 
  1013 ;;  vd              4   13[BANK0 ] unsigned long 
  1014 ;;  _val            5   17[BANK0 ] struct .
  1015 ;;  fval            3   31[BANK0 ] struct .
  1016 ;;  integ           3   22[BANK0 ] struct .
  1017 ;;  ival            3    0        struct .
  1018 ;;  prec            2   34[BANK0 ] int 
  1019 ;;  exp             2   29[BANK0 ] int 
  1020 ;;  width           2   27[BANK0 ] int 
  1021 ;;  flag            2   25[BANK0 ] unsigned short 
  1022 ;;  ap              2    7[BANK0 ] PTR void [1]
  1023 ;;		 -> ?_sprintf(2), 
  1024 ;;  c               1   36[BANK0 ] char 
  1025 ;;  d               1    0        unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  2   67[COMRAM] int 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1035 ;;      Params:         7       0       0       0       0       0       0       0       0
  1036 ;;      Locals:         0      37       0       0       0       0       0       0       0
  1037 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1038 ;;      Totals:        13      37       0       0       0       0       0       0       0
  1039 ;;Total ram usage:       50 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    4
  1042 ;; This function calls:
  1043 ;;		___asftadd
  1044 ;;		___asftmul
  1045 ;;		___asftsub
  1046 ;;		___awdiv
  1047 ;;		___ftge
  1048 ;;		___ftmul
  1049 ;;		___ftneg
  1050 ;;		___fttol
  1051 ;;		___lldiv
  1052 ;;		___llmod
  1053 ;;		___lltoft
  1054 ;;		___wmul
  1055 ;;		__div_to_l_
  1056 ;;		__tdiv_to_l_
  1057 ;;		_fround
  1058 ;;		_isdigit
  1059 ;;		_scale
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text1
  1066  000888                     __ptext1:
  1067                           	opt stack 0
  1068  000888                     _sprintf:
  1069                           	opt stack 26
  1070                           
  1071                           ;doprnt.c: 494: va_list ap;
  1072                           ;doprnt.c: 499: signed char c;
  1073                           ;doprnt.c: 501: int width;
  1074                           ;doprnt.c: 504: int prec;
  1075                           ;doprnt.c: 508: unsigned short flag;
  1076                           ;doprnt.c: 515: char d;
  1077                           ;doprnt.c: 516: double fval, integ;
  1078                           ;doprnt.c: 517: int exp;
  1079                           ;doprnt.c: 518: double ival;
  1080                           ;doprnt.c: 519: union {
  1081                           ;doprnt.c: 520: unsigned long _val;
  1082                           ;doprnt.c: 521: struct {
  1083                           ;doprnt.c: 522: const char * _cp;
  1084                           ;doprnt.c: 523: unsigned _len;
  1085                           ;doprnt.c: 524: } _str;
  1086                           ;doprnt.c: 525: } _val;
  1087                           ;doprnt.c: 542: *ap = __va_start();
  1088                           
  1089                           ;incstack = 0
  1090  000888  0E00               	movlw	high (?_sprintf+4)
  1091  00088A  0100               	movlb	0	; () banked
  1092  00088C  0100               	movlb	0	; () banked
  1093  00088E  6F68               	movwf	(sprintf@ap+1)& (0+255),b
  1094  000890  0E48               	movlw	low (?_sprintf+4)
  1095  000892  0100               	movlb	0	; () banked
  1096  000894  0100               	movlb	0	; () banked
  1097  000896  6F67               	movwf	sprintf@ap& (0+255),b
  1098                           
  1099                           ;doprnt.c: 545: while(c = *f++) {
  1100  000898  EF9B  F009         	goto	l4492
  1101  00089C                     l4234:
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;doprnt.c: 547: if(c != '%')
  1105  00089C  0100               	movlb	0	; () banked
  1106  00089E  0100               	movlb	0	; () banked
  1107  0008A0  5184               	movf	sprintf@c& (0+255),w,b
  1108  0008A2  0A25               	xorlw	37
  1109  0008A4  B4D8               	btfsc	status,2,c
  1110  0008A6  D009               	goto	l4240
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;doprnt.c: 549: {
  1114                           ;doprnt.c: 550: ((*sp++ = (c)));
  1115  0008A8  C044  FFD9         	movff	sprintf@sp,fsr2l
  1116  0008AC  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  1117  0008B0  0100               	movlb	0	; () banked
  1118  0008B2  C084  FFDF         	movff	sprintf@c,indf2
  1119  0008B6  EF99  F009         	goto	L1
  1120  0008BA                     l4240:
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;doprnt.c: 552: }
  1124                           ;doprnt.c: 555: width = 0;
  1125  0008BA  0E00               	movlw	0
  1126  0008BC  0100               	movlb	0	; () banked
  1127  0008BE  0100               	movlb	0	; () banked
  1128  0008C0  6F7C               	movwf	(sprintf@width+1)& (0+255),b
  1129  0008C2  0E00               	movlw	0
  1130  0008C4  0100               	movlb	0	; () banked
  1131  0008C6  6F7B               	movwf	sprintf@width& (0+255),b
  1132                           
  1133                           ;doprnt.c: 557: flag = 0;
  1134  0008C8  0E00               	movlw	0
  1135  0008CA  0100               	movlb	0	; () banked
  1136  0008CC  0100               	movlb	0	; () banked
  1137  0008CE  6F7A               	movwf	(sprintf@flag+1)& (0+255),b
  1138  0008D0  0E00               	movlw	0
  1139  0008D2  0100               	movlb	0	; () banked
  1140  0008D4  6F79               	movwf	sprintf@flag& (0+255),b
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1144  0008D6  C046  FFF6         	movff	sprintf@f,tblptrl
  1145  0008DA  C047  FFF7         	movff	sprintf@f+1,tblptrh
  1146  0008DE  0008               	tblrd		*
  1147  0008E0  50F5               	movf	tablat,w,c
  1148  0008E2  ECB0  F014         	call	_isdigit
  1149  0008E6  A0D8               	btfss	status,0,c
  1150  0008E8  D039               	goto	l4254
  1151                           
  1152                           ;doprnt.c: 607: width = 0;
  1153  0008EA  0E00               	movlw	0
  1154  0008EC  0100               	movlb	0	; () banked
  1155  0008EE  0100               	movlb	0	; () banked
  1156  0008F0  6F7C               	movwf	(sprintf@width+1)& (0+255),b
  1157  0008F2  0E00               	movlw	0
  1158  0008F4  0100               	movlb	0	; () banked
  1159  0008F6  6F7B               	movwf	sprintf@width& (0+255),b
  1160  0008F8                     l4246:
  1161                           
  1162                           ;doprnt.c: 609: width *= 10;
  1163  0008F8  C07B  F011         	movff	sprintf@width,___wmul@multiplier
  1164  0008FC  C07C  F012         	movff	sprintf@width+1,___wmul@multiplier+1
  1165  000900  0E00               	movlw	0
  1166  000902  6E14               	movwf	___wmul@multiplicand+1,c
  1167  000904  0E0A               	movlw	10
  1168  000906  6E13               	movwf	___wmul@multiplicand,c
  1169  000908  EC2F  F014         	call	___wmul	;wreg free
  1170  00090C  C011  F07B         	movff	?___wmul,sprintf@width
  1171  000910  C012  F07C         	movff	?___wmul+1,sprintf@width+1
  1172                           
  1173                           ;doprnt.c: 610: width += *f++ - '0';
  1174  000914  0ED0               	movlw	208
  1175  000916  6E4B               	movwf	??_sprintf& (0+255),c
  1176  000918  0EFF               	movlw	255
  1177  00091A  6E4C               	movwf	(??_sprintf+1)& (0+255),c
  1178  00091C  C046  FFF6         	movff	sprintf@f,tblptrl
  1179  000920  C047  FFF7         	movff	sprintf@f+1,tblptrh
  1180  000924  0008               	tblrd		*
  1181  000926  50F5               	movf	tablat,w,c
  1182  000928  6E4D               	movwf	(??_sprintf+2)& (0+255),c
  1183  00092A  6A4E               	clrf	(??_sprintf+3)& (0+255),c
  1184  00092C  504B               	movf	??_sprintf,w,c
  1185  00092E  264D               	addwf	??_sprintf+2,f,c
  1186  000930  504C               	movf	??_sprintf+1,w,c
  1187  000932  224E               	addwfc	??_sprintf+3,f,c
  1188  000934  504D               	movf	??_sprintf+2,w,c
  1189  000936  0100               	movlb	0	; () banked
  1190  000938  0100               	movlb	0	; () banked
  1191  00093A  277B               	addwf	sprintf@width& (0+255),f,b
  1192  00093C  504E               	movf	??_sprintf+3,w,c
  1193  00093E  0100               	movlb	0	; () banked
  1194  000940  0100               	movlb	0	; () banked
  1195  000942  237C               	addwfc	(sprintf@width+1)& (0+255),f,b
  1196                           
  1197                           ; BSR set to: 0
  1198  000944  4A46               	infsnz	sprintf@f,f,c
  1199  000946  2A47               	incf	sprintf@f+1,f,c
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1203  000948  C046  FFF6         	movff	sprintf@f,tblptrl
  1204  00094C  C047  FFF7         	movff	sprintf@f+1,tblptrh
  1205  000950  0008               	tblrd		*
  1206  000952  50F5               	movf	tablat,w,c
  1207  000954  ECB0  F014         	call	_isdigit
  1208  000958  B0D8               	btfsc	status,0,c
  1209  00095A  D7CE               	goto	l4246
  1210  00095C                     l4254:
  1211                           
  1212                           ;doprnt.c: 617: }
  1213                           ;doprnt.c: 620: if(*f == '.') {
  1214  00095C  C046  FFF6         	movff	sprintf@f,tblptrl
  1215  000960  C047  FFF7         	movff	sprintf@f+1,tblptrh
  1216  000964  0008               	tblrd		*
  1217  000966  50F5               	movf	tablat,w,c
  1218  000968  0A2E               	xorlw	46
  1219  00096A  A4D8               	btfss	status,2,c
  1220  00096C  D036               	goto	l4266
  1221                           
  1222                           ;doprnt.c: 621: flag |= 0x4000;
  1223  00096E  0100               	movlb	0	; () banked
  1224  000970  0100               	movlb	0	; () banked
  1225  000972  8D7A               	bsf	(sprintf@flag+1)& (0+255),6,b
  1226                           
  1227                           ;doprnt.c: 622: f++;
  1228  000974  4A46               	infsnz	sprintf@f,f,c
  1229  000976  2A47               	incf	sprintf@f+1,f,c
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;doprnt.c: 629: {
  1233                           ;doprnt.c: 630: prec = 0;
  1234  000978  0E00               	movlw	0
  1235  00097A  0100               	movlb	0	; () banked
  1236  00097C  0100               	movlb	0	; () banked
  1237  00097E  6F83               	movwf	(sprintf@prec+1)& (0+255),b
  1238  000980  0E00               	movlw	0
  1239  000982  0100               	movlb	0	; () banked
  1240  000984  6F82               	movwf	sprintf@prec& (0+255),b
  1241                           
  1242                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1243  000986  D01E               	goto	l4264
  1244  000988                     l4260:
  1245                           
  1246                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1247  000988  C082  F011         	movff	sprintf@prec,___wmul@multiplier
  1248  00098C  C083  F012         	movff	sprintf@prec+1,___wmul@multiplier+1
  1249  000990  0E00               	movlw	0
  1250  000992  6E14               	movwf	___wmul@multiplicand+1,c
  1251  000994  0E0A               	movlw	10
  1252  000996  6E13               	movwf	___wmul@multiplicand,c
  1253  000998  EC2F  F014         	call	___wmul	;wreg free
  1254  00099C  C046  FFF6         	movff	sprintf@f,tblptrl
  1255  0009A0  C047  FFF7         	movff	sprintf@f+1,tblptrh
  1256  0009A4  0008               	tblrd		*
  1257  0009A6  50F5               	movf	tablat,w,c
  1258  0009A8  2611               	addwf	?___wmul,f,c
  1259  0009AA  0E00               	movlw	0
  1260  0009AC  2212               	addwfc	?___wmul+1,f,c
  1261  0009AE  0ED0               	movlw	208
  1262  0009B0  2411               	addwf	?___wmul,w,c
  1263  0009B2  0100               	movlb	0	; () banked
  1264  0009B4  0100               	movlb	0	; () banked
  1265  0009B6  6F82               	movwf	sprintf@prec& (0+255),b
  1266  0009B8  0EFF               	movlw	255
  1267  0009BA  2012               	addwfc	?___wmul+1,w,c
  1268  0009BC  0100               	movlb	0	; () banked
  1269  0009BE  6F83               	movwf	(sprintf@prec+1)& (0+255),b
  1270                           
  1271                           ; BSR set to: 0
  1272  0009C0  4A46               	infsnz	sprintf@f,f,c
  1273  0009C2  2A47               	incf	sprintf@f+1,f,c
  1274  0009C4                     l4264:
  1275                           
  1276                           ; BSR set to: 0
  1277  0009C4  C046  FFF6         	movff	sprintf@f,tblptrl
  1278  0009C8  C047  FFF7         	movff	sprintf@f+1,tblptrh
  1279  0009CC  0008               	tblrd		*
  1280  0009CE  50F5               	movf	tablat,w,c
  1281  0009D0  ECB0  F014         	call	_isdigit
  1282  0009D4  A0D8               	btfss	status,0,c
  1283  0009D6  D010               	goto	l4274
  1284  0009D8  D7D7               	goto	l4260
  1285  0009DA                     l4266:
  1286                           
  1287                           ;doprnt.c: 635: prec = 0;
  1288  0009DA  0E00               	movlw	0
  1289  0009DC  0100               	movlb	0	; () banked
  1290  0009DE  0100               	movlb	0	; () banked
  1291  0009E0  6F83               	movwf	(sprintf@prec+1)& (0+255),b
  1292  0009E2  0E00               	movlw	0
  1293  0009E4  0100               	movlb	0	; () banked
  1294  0009E6  6F82               	movwf	sprintf@prec& (0+255),b
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;doprnt.c: 637: flag |= 0x1000;
  1298  0009E8  0100               	movlb	0	; () banked
  1299  0009EA  0100               	movlb	0	; () banked
  1300  0009EC  897A               	bsf	(sprintf@flag+1)& (0+255),4,b
  1301  0009EE  D004               	goto	l4274
  1302  0009F0                     l4270:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;doprnt.c: 672: flag |= 0x400;
  1306  0009F0  0100               	movlb	0	; () banked
  1307  0009F2  0100               	movlb	0	; () banked
  1308  0009F4  857A               	bsf	(sprintf@flag+1)& (0+255),2,b
  1309                           
  1310                           ;doprnt.c: 673: break;
  1311  0009F6  D015               	goto	l4276
  1312  0009F8                     l4274:
  1313  0009F8  C046  FFF6         	movff	sprintf@f,tblptrl
  1314  0009FC  C047  FFF7         	movff	sprintf@f+1,tblptrh
  1315  000A00  4A46               	infsnz	sprintf@f,f,c
  1316  000A02  2A47               	incf	sprintf@f+1,f,c
  1317  000A04  0008               	tblrd		*
  1318  000A06  0100               	movlb	0	; () banked
  1319  000A08  CFF5 F084          	movff	tablat,sprintf@c
  1320  000A0C  0100               	movlb	0	; () banked
  1321  000A0E  5184               	movf	sprintf@c& (0+255),w,b
  1322                           
  1323                           ; Switch size 1, requested type "space"
  1324                           ; Number of cases is 2, Range of values is 0 to 102
  1325                           ; switch strategies available:
  1326                           ; Name         Instructions Cycles
  1327                           ; simple_byte            7     4 (average)
  1328                           ;	Chosen strategy is simple_byte
  1329  000A10  0A00               	xorlw	0	; case 0
  1330  000A12  B4D8               	btfsc	status,2,c
  1331  000A14  EFA9  F009         	goto	l4494
  1332  000A18  0A66               	xorlw	102	; case 102
  1333  000A1A  B4D8               	btfsc	status,2,c
  1334  000A1C  D7E9               	goto	l4270
  1335  000A1E  EF9B  F009         	goto	l4492
  1336  000A22                     l4276:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;doprnt.c: 834: if(flag & (0x700)) {
  1340  000A22  0E07               	movlw	7
  1341  000A24  0100               	movlb	0	; () banked
  1342  000A26  0100               	movlb	0	; () banked
  1343  000A28  157A               	andwf	(sprintf@flag+1)& (0+255),w,b
  1344  000A2A  B4D8               	btfsc	status,2,c
  1345  000A2C  D3A5               	goto	l4444
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;doprnt.c: 836: if(flag & 0x1000)
  1349  000A2E  0100               	movlb	0	; () banked
  1350  000A30  0100               	movlb	0	; () banked
  1351  000A32  A97A               	btfss	(sprintf@flag+1)& (0+255),4,b
  1352  000A34  D007               	goto	l4282
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;doprnt.c: 838: prec = 6;
  1356  000A36  0E00               	movlw	0
  1357  000A38  0100               	movlb	0	; () banked
  1358  000A3A  0100               	movlb	0	; () banked
  1359  000A3C  6F83               	movwf	(sprintf@prec+1)& (0+255),b
  1360  000A3E  0E06               	movlw	6
  1361  000A40  0100               	movlb	0	; () banked
  1362  000A42  6F82               	movwf	sprintf@prec& (0+255),b
  1363  000A44                     l4282:
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1367  000A44  C067  FFD9         	movff	sprintf@ap,fsr2l
  1368  000A48  C068  FFDA         	movff	sprintf@ap+1,fsr2h
  1369  000A4C  0100               	movlb	0	; () banked
  1370  000A4E  CFDE F07F          	movff	postinc2,sprintf@fval
  1371  000A52  0100               	movlb	0	; () banked
  1372  000A54  CFDE F080          	movff	postinc2,sprintf@fval+1
  1373  000A58  0100               	movlb	0	; () banked
  1374  000A5A  CFDD F081          	movff	postdec2,sprintf@fval+2
  1375                           
  1376                           ; BSR set to: 0
  1377  000A5E  0E03               	movlw	3
  1378  000A60  0100               	movlb	0	; () banked
  1379  000A62  0100               	movlb	0	; () banked
  1380  000A64  2767               	addwf	sprintf@ap& (0+255),f,b
  1381  000A66  0E00               	movlw	0
  1382  000A68  0100               	movlb	0	; () banked
  1383  000A6A  2368               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;doprnt.c: 840: if(fval < 0.0) {
  1387  000A6C  0100               	movlb	0	; () banked
  1388  000A6E  0100               	movlb	0	; () banked
  1389  000A70  5181               	movf	(sprintf@fval+2)& (0+255),w,b
  1390  000A72  0A80               	xorlw	128
  1391  000A74  0F80               	addlw	128
  1392  000A76  E107               	bnz	u2815
  1393  000A78  0E00               	movlw	0
  1394  000A7A  0100               	movlb	0	; () banked
  1395  000A7C  5D80               	subwf	(sprintf@fval+1)& (0+255),w,b
  1396  000A7E  E103               	bnz	u2815
  1397  000A80  0E00               	movlw	0
  1398  000A82  0100               	movlb	0	; () banked
  1399  000A84  5D7F               	subwf	sprintf@fval& (0+255),w,b
  1400  000A86                     u2815:
  1401  000A86  B0D8               	btfsc	status,0,c
  1402  000A88  D012               	goto	l4292
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;doprnt.c: 841: fval = -fval;
  1406  000A8A  C07F  F001         	movff	sprintf@fval,___ftneg@f1
  1407  000A8E  C080  F002         	movff	sprintf@fval+1,___ftneg@f1+1
  1408  000A92  C081  F003         	movff	sprintf@fval+2,___ftneg@f1+2
  1409  000A96  ECC5  F014         	call	___ftneg	;wreg free
  1410  000A9A  C001  F07F         	movff	?___ftneg,sprintf@fval
  1411  000A9E  C002  F080         	movff	?___ftneg+1,sprintf@fval+1
  1412  000AA2  C003  F081         	movff	?___ftneg+2,sprintf@fval+2
  1413                           
  1414                           ;doprnt.c: 842: flag |= 0x03;
  1415  000AA6  0E03               	movlw	3
  1416  000AA8  0100               	movlb	0	; () banked
  1417  000AAA  0100               	movlb	0	; () banked
  1418  000AAC  1379               	iorwf	sprintf@flag& (0+255),f,b
  1419  000AAE                     l4292:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;doprnt.c: 843: }
  1423                           ;doprnt.c: 844: exp = 0;
  1424  000AAE  0E00               	movlw	0
  1425  000AB0  0100               	movlb	0	; () banked
  1426  000AB2  0100               	movlb	0	; () banked
  1427  000AB4  6F7E               	movwf	(sprintf@exp+1)& (0+255),b
  1428  000AB6  0E00               	movlw	0
  1429  000AB8  0100               	movlb	0	; () banked
  1430  000ABA  6F7D               	movwf	sprintf@exp& (0+255),b
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;doprnt.c: 845: if( fval!=0) {
  1434  000ABC  0E7F               	movlw	127
  1435  000ABE  0100               	movlb	0	; () banked
  1436  000AC0  0100               	movlb	0	; () banked
  1437  000AC2  1581               	andwf	(sprintf@fval+2)& (0+255),w,b
  1438  000AC4  0100               	movlb	0	; () banked
  1439  000AC6  1180               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1440  000AC8  0100               	movlb	0	; () banked
  1441  000ACA  117F               	iorwf	sprintf@fval& (0+255),w,b
  1442  000ACC  B4D8               	btfsc	status,2,c
  1443  000ACE  D098               	goto	l4320
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1447  000AD0  0E82               	movlw	130
  1448  000AD2  6E4B               	movwf	??_sprintf& (0+255),c
  1449  000AD4  0EFF               	movlw	255
  1450  000AD6  6E4C               	movwf	(??_sprintf+1)& (0+255),c
  1451  000AD8  0100               	movlb	0	; () banked
  1452  000ADA  C07F  F04D         	movff	sprintf@fval,??_sprintf+2
  1453  000ADE  0100               	movlb	0	; () banked
  1454  000AE0  C080  F04E         	movff	sprintf@fval+1,??_sprintf+3
  1455  000AE4  0100               	movlb	0	; () banked
  1456  000AE6  C081  F04F         	movff	sprintf@fval+2,??_sprintf+4
  1457  000AEA  0100               	movlb	0	; () banked
  1458  000AEC  C082  F050         	movff	sprintf@fval+3,??_sprintf+5
  1459  000AF0  0E10               	movlw	16
  1460  000AF2  D005               	goto	u2830
  1461  000AF4                     u2835:
  1462  000AF4  90D8               	bcf	status,0,c
  1463  000AF6  3250               	rrcf	??_sprintf+5,f,c
  1464  000AF8  324F               	rrcf	??_sprintf+4,f,c
  1465  000AFA  324E               	rrcf	??_sprintf+3,f,c
  1466  000AFC  324D               	rrcf	??_sprintf+2,f,c
  1467  000AFE                     u2830:
  1468  000AFE  2EE8               	decfsz	wreg,f,c
  1469  000B00  D7F9               	goto	u2835
  1470  000B02  504D               	movf	??_sprintf+2,w,c
  1471  000B04  244B               	addwf	??_sprintf,w,c
  1472  000B06  0100               	movlb	0	; () banked
  1473  000B08  0100               	movlb	0	; () banked
  1474  000B0A  6F7D               	movwf	sprintf@exp& (0+255),b
  1475  000B0C  0100               	movlb	0	; () banked
  1476  000B0E  0E00               	movlw	0
  1477  000B10  204C               	addwfc	??_sprintf+1,w,c
  1478  000B12  6F7E               	movwf	(sprintf@exp+1)& (0+255),b
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;doprnt.c: 847: exp--;
  1482  000B14  0100               	movlb	0	; () banked
  1483  000B16  0100               	movlb	0	; () banked
  1484  000B18  077D               	decf	sprintf@exp& (0+255),f,b
  1485  000B1A  A0D8               	btfss	status,0,c
  1486  000B1C  077E               	decf	(sprintf@exp+1)& (0+255),f,b
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;doprnt.c: 848: exp *= 3;
  1490  000B1E  C07D  F011         	movff	sprintf@exp,___wmul@multiplier
  1491  000B22  C07E  F012         	movff	sprintf@exp+1,___wmul@multiplier+1
  1492  000B26  0E00               	movlw	0
  1493  000B28  6E14               	movwf	___wmul@multiplicand+1,c
  1494  000B2A  0E03               	movlw	3
  1495  000B2C  6E13               	movwf	___wmul@multiplicand,c
  1496  000B2E  EC2F  F014         	call	___wmul	;wreg free
  1497  000B32  C011  F07D         	movff	?___wmul,sprintf@exp
  1498  000B36  C012  F07E         	movff	?___wmul+1,sprintf@exp+1
  1499                           
  1500                           ;doprnt.c: 849: exp /= 10;
  1501  000B3A  C07D  F008         	movff	sprintf@exp,___awdiv@dividend
  1502  000B3E  C07E  F009         	movff	sprintf@exp+1,___awdiv@dividend+1
  1503  000B42  0E00               	movlw	0
  1504  000B44  6E0B               	movwf	___awdiv@divisor+1,c
  1505  000B46  0E0A               	movlw	10
  1506  000B48  6E0A               	movwf	___awdiv@divisor,c
  1507  000B4A  ECCB  F010         	call	___awdiv	;wreg free
  1508  000B4E  C008  F07D         	movff	?___awdiv,sprintf@exp
  1509  000B52  C009  F07E         	movff	?___awdiv+1,sprintf@exp+1
  1510                           
  1511                           ;doprnt.c: 850: if(exp < 0)
  1512  000B56  0100               	movlb	0	; () banked
  1513  000B58  0100               	movlb	0	; () banked
  1514  000B5A  517E               	movf	(sprintf@exp+1)& (0+255),w,b
  1515  000B5C  0A80               	xorlw	128
  1516  000B5E  6EF3               	movwf	prodl,c
  1517  000B60  0E80               	movlw	128
  1518  000B62  5CF3               	subwf	prodl,w,c
  1519  000B64  0E00               	movlw	0
  1520  000B66  B4D8               	btfsc	status,2,c
  1521  000B68  5D7D               	subwf	sprintf@exp& (0+255),w,b
  1522  000B6A  B0D8               	btfsc	status,0,c
  1523  000B6C  D005               	goto	l4308
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;doprnt.c: 851: exp--;
  1527  000B6E  0100               	movlb	0	; () banked
  1528  000B70  0100               	movlb	0	; () banked
  1529  000B72  077D               	decf	sprintf@exp& (0+255),f,b
  1530  000B74  A0D8               	btfss	status,0,c
  1531  000B76  077E               	decf	(sprintf@exp+1)& (0+255),f,b
  1532  000B78                     l4308:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;doprnt.c: 855: integ = scale(-exp);
  1536  000B78  0100               	movlb	0	; () banked
  1537  000B7A  0100               	movlb	0	; () banked
  1538  000B7C  517D               	movf	sprintf@exp& (0+255),w,b
  1539  000B7E  0800               	sublw	0
  1540  000B80  ECB0  F009         	call	_scale
  1541  000B84  C035  F076         	movff	?_scale,sprintf@integ
  1542  000B88  C036  F077         	movff	?_scale+1,sprintf@integ+1
  1543  000B8C  C037  F078         	movff	?_scale+2,sprintf@integ+2
  1544                           
  1545                           ;doprnt.c: 856: integ *= fval;
  1546  000B90  0100               	movlb	0	; () banked
  1547  000B92  0E00               	movlw	high sprintf@integ
  1548  000B94  6E36               	movwf	___asftmul@f1p+1,c
  1549  000B96  0100               	movlb	0	; () banked
  1550  000B98  0E76               	movlw	low sprintf@integ
  1551  000B9A  6E35               	movwf	___asftmul@f1p,c
  1552  000B9C  C07F  F037         	movff	sprintf@fval,___asftmul@f2
  1553  000BA0  C080  F038         	movff	sprintf@fval+1,___asftmul@f2+1
  1554  000BA4  C081  F039         	movff	sprintf@fval+2,___asftmul@f2+2
  1555  000BA8  ECF3  F013         	call	___asftmul	;wreg free
  1556                           
  1557                           ;doprnt.c: 857: if(integ < 1.0)
  1558  000BAC  C076  F001         	movff	sprintf@integ,___ftge@ff1
  1559  000BB0  C077  F002         	movff	sprintf@integ+1,___ftge@ff1+1
  1560  000BB4  C078  F003         	movff	sprintf@integ+2,___ftge@ff1+2
  1561  000BB8  0E00               	movlw	0
  1562  000BBA  6E04               	movwf	___ftge@ff2,c
  1563  000BBC  0E80               	movlw	128
  1564  000BBE  6E05               	movwf	___ftge@ff2+1,c
  1565  000BC0  0E3F               	movlw	63
  1566  000BC2  6E06               	movwf	___ftge@ff2+2,c
  1567  000BC4  EC18  F012         	call	___ftge	;wreg free
  1568  000BC8  B0D8               	btfsc	status,0,c
  1569  000BCA  D006               	goto	l4316
  1570                           
  1571                           ;doprnt.c: 858: exp--;
  1572  000BCC  0100               	movlb	0	; () banked
  1573  000BCE  0100               	movlb	0	; () banked
  1574  000BD0  077D               	decf	sprintf@exp& (0+255),f,b
  1575  000BD2  A0D8               	btfss	status,0,c
  1576  000BD4  077E               	decf	(sprintf@exp+1)& (0+255),f,b
  1577  000BD6  D014               	goto	l4320
  1578  000BD8                     l4316:
  1579                           
  1580                           ;doprnt.c: 859: else if(integ >= 10.0)
  1581  000BD8  C076  F001         	movff	sprintf@integ,___ftge@ff1
  1582  000BDC  C077  F002         	movff	sprintf@integ+1,___ftge@ff1+1
  1583  000BE0  C078  F003         	movff	sprintf@integ+2,___ftge@ff1+2
  1584  000BE4  0E00               	movlw	0
  1585  000BE6  6E04               	movwf	___ftge@ff2,c
  1586  000BE8  0E20               	movlw	32
  1587  000BEA  6E05               	movwf	___ftge@ff2+1,c
  1588  000BEC  0E41               	movlw	65
  1589  000BEE  6E06               	movwf	___ftge@ff2+2,c
  1590  000BF0  EC18  F012         	call	___ftge	;wreg free
  1591  000BF4  A0D8               	btfss	status,0,c
  1592  000BF6  D004               	goto	l4320
  1593                           
  1594                           ;doprnt.c: 860: exp++;
  1595  000BF8  0100               	movlb	0	; () banked
  1596  000BFA  0100               	movlb	0	; () banked
  1597  000BFC  4B7D               	infsnz	sprintf@exp& (0+255),f,b
  1598  000BFE  2B7E               	incf	(sprintf@exp+1)& (0+255),f,b
  1599  000C00                     l4320:
  1600                           
  1601                           ;doprnt.c: 861: }
  1602                           ;doprnt.c: 1121: if(prec <= 12)
  1603  000C00  0100               	movlb	0	; () banked
  1604  000C02  0100               	movlb	0	; () banked
  1605  000C04  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  1606  000C06  0A80               	xorlw	128
  1607  000C08  6EF3               	movwf	prodl,c
  1608  000C0A  0E80               	movlw	128
  1609  000C0C  5CF3               	subwf	prodl,w,c
  1610  000C0E  0E0D               	movlw	13
  1611  000C10  B4D8               	btfsc	status,2,c
  1612  000C12  5D82               	subwf	sprintf@prec& (0+255),w,b
  1613  000C14  B0D8               	btfsc	status,0,c
  1614  000C16  D013               	goto	l4324
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;doprnt.c: 1122: fval += fround(prec);
  1618  000C18  0100               	movlb	0	; () banked
  1619  000C1A  0E00               	movlw	high sprintf@fval
  1620  000C1C  6E40               	movwf	___asftadd@f1p+1,c
  1621  000C1E  0100               	movlb	0	; () banked
  1622  000C20  0E7F               	movlw	low sprintf@fval
  1623  000C22  6E3F               	movwf	___asftadd@f1p,c
  1624  000C24  0100               	movlb	0	; () banked
  1625  000C26  0100               	movlb	0	; () banked
  1626  000C28  5182               	movf	sprintf@prec& (0+255),w,b
  1627  000C2A  EC98  F00B         	call	_fround
  1628  000C2E  C035  F041         	movff	?_fround,___asftadd@f2
  1629  000C32  C036  F042         	movff	?_fround+1,___asftadd@f2+1
  1630  000C36  C037  F043         	movff	?_fround+2,___asftadd@f2+2
  1631  000C3A  EC11  F014         	call	___asftadd	;wreg free
  1632  000C3E                     l4324:
  1633                           
  1634                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1635  000C3E  0100               	movlb	0	; () banked
  1636  000C40  0100               	movlb	0	; () banked
  1637  000C42  517E               	movf	(sprintf@exp+1)& (0+255),w,b
  1638  000C44  0A80               	xorlw	128
  1639  000C46  6EF3               	movwf	prodl,c
  1640  000C48  0E80               	movlw	128
  1641  000C4A  5CF3               	subwf	prodl,w,c
  1642  000C4C  0E0A               	movlw	10
  1643  000C4E  B4D8               	btfsc	status,2,c
  1644  000C50  5D7D               	subwf	sprintf@exp& (0+255),w,b
  1645  000C52  B0D8               	btfsc	status,0,c
  1646  000C54  D02A               	goto	l4332
  1647                           
  1648                           ; BSR set to: 0
  1649  000C56  0E7F               	movlw	127
  1650  000C58  0100               	movlb	0	; () banked
  1651  000C5A  0100               	movlb	0	; () banked
  1652  000C5C  1581               	andwf	(sprintf@fval+2)& (0+255),w,b
  1653  000C5E  0100               	movlb	0	; () banked
  1654  000C60  1180               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1655  000C62  0100               	movlb	0	; () banked
  1656  000C64  117F               	iorwf	sprintf@fval& (0+255),w,b
  1657  000C66  B4D8               	btfsc	status,2,c
  1658  000C68  D070               	goto	l4348
  1659                           
  1660                           ; BSR set to: 0
  1661  000C6A  C07F  F017         	movff	sprintf@fval,___fttol@f1
  1662  000C6E  C080  F018         	movff	sprintf@fval+1,___fttol@f1+1
  1663  000C72  C081  F019         	movff	sprintf@fval+2,___fttol@f1+2
  1664  000C76  EC61  F010         	call	___fttol	;wreg free
  1665  000C7A  C017  F04B         	movff	?___fttol,??_sprintf
  1666  000C7E  C018  F04C         	movff	?___fttol+1,??_sprintf+1
  1667  000C82  C019  F04D         	movff	?___fttol+2,??_sprintf+2
  1668  000C86  C01A  F04E         	movff	?___fttol+3,??_sprintf+3
  1669  000C8A  504E               	movf	??_sprintf+3,w,c
  1670  000C8C  104B               	iorwf	??_sprintf,w,c
  1671  000C8E  104C               	iorwf	??_sprintf+1,w,c
  1672  000C90  104D               	iorwf	??_sprintf+2,w,c
  1673  000C92  A4D8               	btfss	status,2,c
  1674  000C94  D05A               	goto	l4348
  1675  000C96  0100               	movlb	0	; () banked
  1676  000C98  0100               	movlb	0	; () banked
  1677  000C9A  517E               	movf	(sprintf@exp+1)& (0+255),w,b
  1678  000C9C  0A80               	xorlw	128
  1679  000C9E  0F80               	addlw	-128
  1680  000CA0  0E02               	movlw	2
  1681  000CA2  B4D8               	btfsc	status,2,c
  1682  000CA4  5D7D               	subwf	sprintf@exp& (0+255),w,b
  1683  000CA6  A0D8               	btfss	status,0,c
  1684  000CA8  D050               	goto	l4348
  1685  000CAA                     l4332:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;doprnt.c: 1129: if(integ < 4.294967296){
  1689  000CAA  C076  F001         	movff	sprintf@integ,___ftge@ff1
  1690  000CAE  C077  F002         	movff	sprintf@integ+1,___ftge@ff1+1
  1691  000CB2  C078  F003         	movff	sprintf@integ+2,___ftge@ff1+2
  1692  000CB6  0E70               	movlw	112
  1693  000CB8  6E04               	movwf	___ftge@ff2,c
  1694  000CBA  0E89               	movlw	137
  1695  000CBC  6E05               	movwf	___ftge@ff2+1,c
  1696  000CBE  0E40               	movlw	64
  1697  000CC0  6E06               	movwf	___ftge@ff2+2,c
  1698  000CC2  EC18  F012         	call	___ftge	;wreg free
  1699  000CC6  B0D8               	btfsc	status,0,c
  1700  000CC8  D003               	goto	l4336
  1701                           
  1702                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1703  000CCA  0100               	movlb	0	; () banked
  1704  000CCC  0EF7               	movlw	247
  1705  000CCE  D002               	goto	L2
  1706  000CD0                     l4336:
  1707                           
  1708                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1709  000CD0  0100               	movlb	0	; () banked
  1710  000CD2  0EF8               	movlw	248
  1711  000CD4                     L2:
  1712  000CD4  0100               	movlb	0	; () banked
  1713  000CD6  277D               	addwf	sprintf@exp& (0+255),f,b
  1714  000CD8  0EFF               	movlw	255
  1715  000CDA  0100               	movlb	0	; () banked
  1716  000CDC  237E               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;doprnt.c: 1133: }
  1720                           ;doprnt.c: 1134: integ = scale(exp);
  1721                           
  1722                           ; BSR set to: 0
  1723  000CDE  0100               	movlb	0	; () banked
  1724  000CE0  0100               	movlb	0	; () banked
  1725  000CE2  517D               	movf	sprintf@exp& (0+255),w,b
  1726  000CE4  ECB0  F009         	call	_scale
  1727  000CE8  C035  F076         	movff	?_scale,sprintf@integ
  1728  000CEC  C036  F077         	movff	?_scale+1,sprintf@integ+1
  1729  000CF0  C037  F078         	movff	?_scale+2,sprintf@integ+2
  1730                           
  1731                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  1732  000CF4  C07F  F001         	movff	sprintf@fval,__tdiv_to_l_@f1
  1733  000CF8  C080  F002         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  1734  000CFC  C081  F003         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  1735  000D00  C076  F004         	movff	sprintf@integ,__tdiv_to_l_@f2
  1736  000D04  C077  F005         	movff	sprintf@integ+1,__tdiv_to_l_@f2+1
  1737  000D08  C078  F006         	movff	sprintf@integ+2,__tdiv_to_l_@f2+2
  1738  000D0C  ECFC  F00E         	call	__tdiv_to_l_	;wreg free
  1739  000D10  C001  F063         	movff	?__tdiv_to_l_,_sprintf$339
  1740  000D14  C002  F064         	movff	?__tdiv_to_l_+1,_sprintf$339+1
  1741  000D18  C003  F065         	movff	?__tdiv_to_l_+2,_sprintf$339+2
  1742  000D1C  C004  F066         	movff	?__tdiv_to_l_+3,_sprintf$339+3
  1743  000D20  C063  F071         	movff	_sprintf$339,sprintf@_val
  1744  000D24  C064  F072         	movff	_sprintf$339+1,sprintf@_val+1
  1745  000D28  C065  F073         	movff	_sprintf$339+2,sprintf@_val+2
  1746  000D2C  C066  F074         	movff	_sprintf$339+3,sprintf@_val+3
  1747                           
  1748                           ;doprnt.c: 1138: fval = 0.0;
  1749  000D30  0E00               	movlw	0
  1750  000D32  0100               	movlb	0	; () banked
  1751  000D34  0100               	movlb	0	; () banked
  1752  000D36  6F7F               	movwf	sprintf@fval& (0+255),b
  1753  000D38  0E00               	movlw	0
  1754  000D3A  0100               	movlb	0	; () banked
  1755  000D3C  0100               	movlb	0	; () banked
  1756  000D3E  6F80               	movwf	(sprintf@fval+1)& (0+255),b
  1757  000D40  0E00               	movlw	0
  1758  000D42  0100               	movlb	0	; () banked
  1759  000D44  0100               	movlb	0	; () banked
  1760  000D46  6F81               	movwf	(sprintf@fval+2)& (0+255),b
  1761                           
  1762                           ;doprnt.c: 1139: } else {
  1763  000D48  D02F               	goto	l4354
  1764  000D4A                     l4348:
  1765                           
  1766                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  1767  000D4A  C07F  F017         	movff	sprintf@fval,___fttol@f1
  1768  000D4E  C080  F018         	movff	sprintf@fval+1,___fttol@f1+1
  1769  000D52  C081  F019         	movff	sprintf@fval+2,___fttol@f1+2
  1770  000D56  EC61  F010         	call	___fttol	;wreg free
  1771  000D5A  C017  F071         	movff	?___fttol,sprintf@_val
  1772  000D5E  C018  F072         	movff	?___fttol+1,sprintf@_val+1
  1773  000D62  C019  F073         	movff	?___fttol+2,sprintf@_val+2
  1774  000D66  C01A  F074         	movff	?___fttol+3,sprintf@_val+3
  1775                           
  1776                           ;doprnt.c: 1141: fval -= (double)_val._val;
  1777  000D6A  0100               	movlb	0	; () banked
  1778  000D6C  0E00               	movlw	high sprintf@fval
  1779  000D6E  6E1C               	movwf	___asftsub@f1p+1,c
  1780  000D70  0100               	movlb	0	; () banked
  1781  000D72  0E7F               	movlw	low sprintf@fval
  1782  000D74  6E1B               	movwf	___asftsub@f1p,c
  1783  000D76  C071  F009         	movff	sprintf@_val,___lltoft@c
  1784  000D7A  C072  F00A         	movff	sprintf@_val+1,___lltoft@c+1
  1785  000D7E  C073  F00B         	movff	sprintf@_val+2,___lltoft@c+2
  1786  000D82  C074  F00C         	movff	sprintf@_val+3,___lltoft@c+3
  1787  000D86  ECD8  F012         	call	___lltoft	;wreg free
  1788  000D8A  C009  F01D         	movff	?___lltoft,___asftsub@f2
  1789  000D8E  C00A  F01E         	movff	?___lltoft+1,___asftsub@f2+1
  1790  000D92  C00B  F01F         	movff	?___lltoft+2,___asftsub@f2+2
  1791  000D96  ECD5  F013         	call	___asftsub	;wreg free
  1792                           
  1793                           ;doprnt.c: 1142: exp = 0;
  1794  000D9A  0E00               	movlw	0
  1795  000D9C  0100               	movlb	0	; () banked
  1796  000D9E  0100               	movlb	0	; () banked
  1797  000DA0  6F7E               	movwf	(sprintf@exp+1)& (0+255),b
  1798  000DA2  0E00               	movlw	0
  1799  000DA4  0100               	movlb	0	; () banked
  1800  000DA6  6F7D               	movwf	sprintf@exp& (0+255),b
  1801  000DA8                     l4354:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;doprnt.c: 1143: }
  1805                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1806  000DA8  6E4B               	movwf	??_sprintf& (0+255),c
  1807  000DAA  0E01               	movlw	1
  1808  000DAC  0100               	movlb	0	; () banked
  1809  000DAE  0100               	movlb	0	; () banked
  1810  000DB0  6F84               	movwf	sprintf@c& (0+255),b
  1811  000DB2  504B               	movf	??_sprintf& (0+255),w,c
  1812  000DB4                     
  1813                           ; BSR set to: 0
  1814  000DB4  0100               	movlb	0	; () banked
  1815  000DB6  0100               	movlb	0	; () banked
  1816  000DB8  5184               	movf	sprintf@c& (0+255),w,b
  1817  000DBA  0A0A               	xorlw	10
  1818  000DBC  B4D8               	btfsc	status,2,c
  1819  000DBE  D021               	goto	l4368
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  1823                           
  1824                           ; BSR set to: 0
  1825                           
  1826                           ; BSR set to: 0
  1827  000DC0  0100               	movlb	0	; () banked
  1828  000DC2  0100               	movlb	0	; () banked
  1829  000DC4  5184               	movf	sprintf@c& (0+255),w,b
  1830  000DC6  0D04               	mullw	4
  1831  000DC8  0E01               	movlw	low _dpowers
  1832  000DCA  24F3               	addwf	prodl,w,c
  1833  000DCC  6EF6               	movwf	tblptrl,c
  1834  000DCE  0E08               	movlw	high _dpowers
  1835  000DD0  20F4               	addwfc	prodh,w,c
  1836  000DD2  6EF7               	movwf	tblptrh,c
  1837  000DD4  0009               	tblrd		*+
  1838  000DD6  50F5               	movf	tablat,w,c
  1839  000DD8  0100               	movlb	0	; () banked
  1840  000DDA  0100               	movlb	0	; () banked
  1841  000DDC  5D71               	subwf	sprintf@_val& (0+255),w,b
  1842  000DDE  0009               	tblrd		*+
  1843  000DE0  50F5               	movf	tablat,w,c
  1844  000DE2  0100               	movlb	0	; () banked
  1845  000DE4  5972               	subwfb	(sprintf@_val+1)& (0+255),w,b
  1846  000DE6  0009               	tblrd		*+
  1847  000DE8  50F5               	movf	tablat,w,c
  1848  000DEA  0100               	movlb	0	; () banked
  1849  000DEC  5973               	subwfb	(sprintf@_val+2)& (0+255),w,b
  1850  000DEE  0009               	tblrd		*+
  1851  000DF0  50F5               	movf	tablat,w,c
  1852  000DF2  0100               	movlb	0	; () banked
  1853  000DF4  5974               	subwfb	(sprintf@_val+3)& (0+255),w,b
  1854  000DF6  A0D8               	btfss	status,0,c
  1855  000DF8  D004               	goto	l4368
  1856                           
  1857                           ; BSR set to: 0
  1858                           
  1859                           ; BSR set to: 0
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;doprnt.c: 1147: break;
  1863  000DFA  0100               	movlb	0	; () banked
  1864  000DFC  0100               	movlb	0	; () banked
  1865  000DFE  2B84               	incf	sprintf@c& (0+255),f,b
  1866  000E00  D7D9               	goto	L3
  1867  000E02                     l4368:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;doprnt.c: 1151: width -= prec + c + exp;
  1871  000E02  0100               	movlb	0	; () banked
  1872  000E04  C084  F04B         	movff	sprintf@c,??_sprintf
  1873  000E08  6A4C               	clrf	(??_sprintf+1)& (0+255),c
  1874  000E0A  BE4B               	btfsc	??_sprintf& (0+255),7,c
  1875  000E0C  064C               	decf	(??_sprintf+1)& (0+255),f,c
  1876  000E0E  0100               	movlb	0	; () banked
  1877  000E10  0100               	movlb	0	; () banked
  1878  000E12  5182               	movf	sprintf@prec& (0+255),w,b
  1879  000E14  264B               	addwf	??_sprintf,f,c
  1880  000E16  0100               	movlb	0	; () banked
  1881  000E18  0100               	movlb	0	; () banked
  1882  000E1A  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  1883  000E1C  224C               	addwfc	??_sprintf+1,f,c
  1884  000E1E  0100               	movlb	0	; () banked
  1885  000E20  0100               	movlb	0	; () banked
  1886  000E22  517D               	movf	sprintf@exp& (0+255),w,b
  1887  000E24  264B               	addwf	??_sprintf,f,c
  1888  000E26  0100               	movlb	0	; () banked
  1889  000E28  0100               	movlb	0	; () banked
  1890  000E2A  517E               	movf	(sprintf@exp+1)& (0+255),w,b
  1891  000E2C  224C               	addwfc	??_sprintf+1,f,c
  1892  000E2E  504B               	movf	??_sprintf,w,c
  1893  000E30  0100               	movlb	0	; () banked
  1894  000E32  0100               	movlb	0	; () banked
  1895  000E34  5F7B               	subwf	sprintf@width& (0+255),f,b
  1896  000E36  504C               	movf	??_sprintf+1,w,c
  1897  000E38  0100               	movlb	0	; () banked
  1898  000E3A  0100               	movlb	0	; () banked
  1899  000E3C  5B7C               	subwfb	(sprintf@width+1)& (0+255),f,b
  1900                           
  1901                           ;doprnt.c: 1152: if(
  1902                           ;doprnt.c: 1156: prec)
  1903  000E3E  0100               	movlb	0	; () banked
  1904  000E40  0100               	movlb	0	; () banked
  1905  000E42  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  1906  000E44  1182               	iorwf	sprintf@prec& (0+255),w,b
  1907  000E46  B4D8               	btfsc	status,2,c
  1908  000E48  D005               	goto	l4372
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;doprnt.c: 1157: width--;
  1912  000E4A  0100               	movlb	0	; () banked
  1913  000E4C  0100               	movlb	0	; () banked
  1914  000E4E  077B               	decf	sprintf@width& (0+255),f,b
  1915  000E50  A0D8               	btfss	status,0,c
  1916  000E52  077C               	decf	(sprintf@width+1)& (0+255),f,b
  1917  000E54                     l4372:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;doprnt.c: 1158: if(flag & 0x03)
  1921  000E54  0E03               	movlw	3
  1922  000E56  0100               	movlb	0	; () banked
  1923  000E58  0100               	movlb	0	; () banked
  1924  000E5A  1579               	andwf	sprintf@flag& (0+255),w,b
  1925  000E5C  6E4B               	movwf	??_sprintf& (0+255),c
  1926  000E5E  0E00               	movlw	0
  1927  000E60  0100               	movlb	0	; () banked
  1928  000E62  0100               	movlb	0	; () banked
  1929  000E64  157A               	andwf	(sprintf@flag+1)& (0+255),w,b
  1930  000E66  6E4C               	movwf	(??_sprintf+1)& (0+255),c
  1931  000E68  504C               	movf	??_sprintf+1,w,c
  1932  000E6A  104B               	iorwf	??_sprintf,w,c
  1933  000E6C  B4D8               	btfsc	status,2,c
  1934  000E6E  D00E               	goto	l4382
  1935  000E70  D008               	goto	L4
  1936  000E72                     l4376:
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;doprnt.c: 1190: ((*sp++ = (' ')));
  1940  000E72  C044  FFD9         	movff	sprintf@sp,fsr2l
  1941  000E76  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  1942  000E7A  0E20               	movlw	32
  1943  000E7C  6EDF               	movwf	indf2,c
  1944                           
  1945                           ; BSR set to: 0
  1946  000E7E  4A44               	infsnz	sprintf@sp,f,c
  1947  000E80  2A45               	incf	sprintf@sp+1,f,c
  1948  000E82                     L4:
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;doprnt.c: 1191: width--;
  1952  000E82  0100               	movlb	0	; () banked
  1953  000E84  0100               	movlb	0	; () banked
  1954  000E86  077B               	decf	sprintf@width& (0+255),f,b
  1955  000E88  A0D8               	btfss	status,0,c
  1956  000E8A  077C               	decf	(sprintf@width+1)& (0+255),f,b
  1957  000E8C                     l4382:
  1958                           
  1959                           ; BSR set to: 0
  1960  000E8C  0100               	movlb	0	; () banked
  1961  000E8E  0100               	movlb	0	; () banked
  1962  000E90  517C               	movf	(sprintf@width+1)& (0+255),w,b
  1963  000E92  0A80               	xorlw	128
  1964  000E94  6EF3               	movwf	prodl,c
  1965  000E96  0E80               	movlw	128
  1966  000E98  5CF3               	subwf	prodl,w,c
  1967  000E9A  0E01               	movlw	1
  1968  000E9C  B4D8               	btfsc	status,2,c
  1969  000E9E  5D7B               	subwf	sprintf@width& (0+255),w,b
  1970  000EA0  B0D8               	btfsc	status,0,c
  1971  000EA2  D7E7               	goto	l4376
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;doprnt.c: 1192: }
  1975                           ;doprnt.c: 1197: if(flag & 0x03)
  1976                           
  1977                           ; BSR set to: 0
  1978  000EA4  0E03               	movlw	3
  1979  000EA6  0100               	movlb	0	; () banked
  1980  000EA8  0100               	movlb	0	; () banked
  1981  000EAA  1579               	andwf	sprintf@flag& (0+255),w,b
  1982  000EAC  6E4B               	movwf	??_sprintf& (0+255),c
  1983  000EAE  0E00               	movlw	0
  1984  000EB0  0100               	movlb	0	; () banked
  1985  000EB2  0100               	movlb	0	; () banked
  1986  000EB4  157A               	andwf	(sprintf@flag+1)& (0+255),w,b
  1987  000EB6  6E4C               	movwf	(??_sprintf+1)& (0+255),c
  1988  000EB8  504C               	movf	??_sprintf+1,w,c
  1989  000EBA  104B               	iorwf	??_sprintf,w,c
  1990  000EBC  B4D8               	btfsc	status,2,c
  1991  000EBE  D053               	goto	l4398
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  1995  000EC0  C044  FFD9         	movff	sprintf@sp,fsr2l
  1996  000EC4  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  1997  000EC8  0E2D               	movlw	45
  1998  000ECA  D04A               	goto	L5
  1999  000ECC                     l4390:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;doprnt.c: 1209: {
  2003                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  2004  000ECC  C071  F001         	movff	sprintf@_val,___lldiv@dividend
  2005  000ED0  C072  F002         	movff	sprintf@_val+1,___lldiv@dividend+1
  2006  000ED4  C073  F003         	movff	sprintf@_val+2,___lldiv@dividend+2
  2007  000ED8  C074  F004         	movff	sprintf@_val+3,___lldiv@dividend+3
  2008  000EDC  0100               	movlb	0	; () banked
  2009  000EDE  0100               	movlb	0	; () banked
  2010  000EE0  5184               	movf	sprintf@c& (0+255),w,b
  2011  000EE2  0D04               	mullw	4
  2012  000EE4  0E01               	movlw	low _dpowers
  2013  000EE6  24F3               	addwf	prodl,w,c
  2014  000EE8  6EF6               	movwf	tblptrl,c
  2015  000EEA  0E08               	movlw	high _dpowers
  2016  000EEC  20F4               	addwfc	prodh,w,c
  2017  000EEE  6EF7               	movwf	tblptrh,c
  2018  000EF0  0009               	tblrd		*+
  2019  000EF2  CFF5 F005          	movff	tablat,___lldiv@divisor
  2020  000EF6  0009               	tblrd		*+
  2021  000EF8  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2022  000EFC  0009               	tblrd		*+
  2023  000EFE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2024  000F02  000A               	tblrd		*-
  2025  000F04  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2026  000F08  EC60  F012         	call	___lldiv	;wreg free
  2027  000F0C  C001  F069         	movff	?___lldiv,sprintf@vd
  2028  000F10  C002  F06A         	movff	?___lldiv+1,sprintf@vd+1
  2029  000F14  C003  F06B         	movff	?___lldiv+2,sprintf@vd+2
  2030  000F18  C004  F06C         	movff	?___lldiv+3,sprintf@vd+3
  2031                           
  2032                           ;doprnt.c: 1211: vd %= 10;
  2033  000F1C  C069  F001         	movff	sprintf@vd,___llmod@dividend
  2034  000F20  C06A  F002         	movff	sprintf@vd+1,___llmod@dividend+1
  2035  000F24  C06B  F003         	movff	sprintf@vd+2,___llmod@dividend+2
  2036  000F28  C06C  F004         	movff	sprintf@vd+3,___llmod@dividend+3
  2037  000F2C  0E0A               	movlw	10
  2038  000F2E  6E05               	movwf	___llmod@divisor,c
  2039  000F30  0E00               	movlw	0
  2040  000F32  6E06               	movwf	___llmod@divisor+1,c
  2041  000F34  0E00               	movlw	0
  2042  000F36  6E07               	movwf	___llmod@divisor+2,c
  2043  000F38  0E00               	movlw	0
  2044  000F3A  6E08               	movwf	___llmod@divisor+3,c
  2045  000F3C  ECA3  F012         	call	___llmod	;wreg free
  2046  000F40  C001  F069         	movff	?___llmod,sprintf@vd
  2047  000F44  C002  F06A         	movff	?___llmod+1,sprintf@vd+1
  2048  000F48  C003  F06B         	movff	?___llmod+2,sprintf@vd+2
  2049  000F4C  C004  F06C         	movff	?___llmod+3,sprintf@vd+3
  2050                           
  2051                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  2052  000F50  0100               	movlb	0	; () banked
  2053  000F52  0100               	movlb	0	; () banked
  2054  000F54  5169               	movf	sprintf@vd& (0+255),w,b
  2055  000F56  0F30               	addlw	48
  2056  000F58  C044  FFD9         	movff	sprintf@sp,fsr2l
  2057  000F5C  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  2058  000F60                     L5:
  2059  000F60  6EDF               	movwf	indf2,c
  2060                           
  2061                           ; BSR set to: 0
  2062  000F62  4A44               	infsnz	sprintf@sp,f,c
  2063  000F64  2A45               	incf	sprintf@sp+1,f,c
  2064  000F66                     l4398:
  2065                           
  2066                           ; BSR set to: 0
  2067  000F66  0100               	movlb	0	; () banked
  2068  000F68  0100               	movlb	0	; () banked
  2069  000F6A  0784               	decf	sprintf@c& (0+255),f,b
  2070  000F6C  0100               	movlb	0	; () banked
  2071  000F6E  2984               	incf	sprintf@c& (0+255),w,b
  2072  000F70  B4D8               	btfsc	status,2,c
  2073  000F72  D00E               	goto	l4406
  2074  000F74  D7AB               	goto	l4390
  2075  000F76                     l4400:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  2079  000F76  C044  FFD9         	movff	sprintf@sp,fsr2l
  2080  000F7A  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  2081  000F7E  0E30               	movlw	48
  2082  000F80  6EDF               	movwf	indf2,c
  2083                           
  2084                           ; BSR set to: 0
  2085  000F82  4A44               	infsnz	sprintf@sp,f,c
  2086  000F84  2A45               	incf	sprintf@sp+1,f,c
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;doprnt.c: 1218: exp--;
  2090  000F86  0100               	movlb	0	; () banked
  2091  000F88  0100               	movlb	0	; () banked
  2092  000F8A  077D               	decf	sprintf@exp& (0+255),f,b
  2093  000F8C  A0D8               	btfss	status,0,c
  2094  000F8E  077E               	decf	(sprintf@exp+1)& (0+255),f,b
  2095  000F90                     l4406:
  2096                           
  2097                           ; BSR set to: 0
  2098  000F90  0100               	movlb	0	; () banked
  2099  000F92  0100               	movlb	0	; () banked
  2100  000F94  517E               	movf	(sprintf@exp+1)& (0+255),w,b
  2101  000F96  0A80               	xorlw	128
  2102  000F98  6EF3               	movwf	prodl,c
  2103  000F9A  0E80               	movlw	128
  2104  000F9C  5CF3               	subwf	prodl,w,c
  2105  000F9E  0E01               	movlw	1
  2106  000FA0  B4D8               	btfsc	status,2,c
  2107  000FA2  5D7D               	subwf	sprintf@exp& (0+255),w,b
  2108  000FA4  B0D8               	btfsc	status,0,c
  2109  000FA6  D7E7               	goto	l4400
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;doprnt.c: 1219: }
  2113                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2114                           
  2115                           ; BSR set to: 0
  2116  000FA8  0100               	movlb	0	; () banked
  2117  000FAA  0100               	movlb	0	; () banked
  2118  000FAC  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  2119  000FAE  0A80               	xorlw	128
  2120  000FB0  0F80               	addlw	-128
  2121  000FB2  0E09               	movlw	9
  2122  000FB4  B4D8               	btfsc	status,2,c
  2123  000FB6  5D82               	subwf	sprintf@prec& (0+255),w,b
  2124  000FB8  A0D8               	btfss	status,0,c
  2125  000FBA  D007               	goto	l158
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2129  000FBC  6E4B               	movwf	??_sprintf& (0+255),c
  2130  000FBE  0E08               	movlw	8
  2131  000FC0  0100               	movlb	0	; () banked
  2132  000FC2  0100               	movlb	0	; () banked
  2133  000FC4  6F84               	movwf	sprintf@c& (0+255),b
  2134  000FC6  504B               	movf	??_sprintf& (0+255),w,c
  2135  000FC8  D002               	goto	l4412
  2136  000FCA                     l158:
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;doprnt.c: 1222: else
  2140                           ;doprnt.c: 1223: c = prec;
  2141  000FCA  C082  F084         	movff	sprintf@prec,sprintf@c
  2142  000FCE                     l4412:
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;doprnt.c: 1224: prec -= c;
  2146  000FCE  0100               	movlb	0	; () banked
  2147  000FD0  0100               	movlb	0	; () banked
  2148  000FD2  5184               	movf	sprintf@c& (0+255),w,b
  2149  000FD4  0100               	movlb	0	; () banked
  2150  000FD6  0100               	movlb	0	; () banked
  2151  000FD8  5F82               	subwf	sprintf@prec& (0+255),f,b
  2152  000FDA  0E00               	movlw	0
  2153  000FDC  0100               	movlb	0	; () banked
  2154  000FDE  BF84               	btfsc	sprintf@c& (0+255),7,b
  2155  000FE0  0EFF               	movlw	255
  2156  000FE2  0100               	movlb	0	; () banked
  2157  000FE4  0100               	movlb	0	; () banked
  2158  000FE6  5B83               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;doprnt.c: 1228: if(c)
  2162  000FE8  0100               	movlb	0	; () banked
  2163  000FEA  0100               	movlb	0	; () banked
  2164  000FEC  5184               	movf	sprintf@c& (0+255),w,b
  2165  000FEE  B4D8               	btfsc	status,2,c
  2166  000FF0  D008               	goto	l4420
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  2170  000FF2  C044  FFD9         	movff	sprintf@sp,fsr2l
  2171  000FF6  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  2172  000FFA  0E2E               	movlw	46
  2173  000FFC  6EDF               	movwf	indf2,c
  2174                           
  2175                           ; BSR set to: 0
  2176  000FFE  4A44               	infsnz	sprintf@sp,f,c
  2177  001000  2A45               	incf	sprintf@sp+1,f,c
  2178  001002                     l4420:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  2182  001002  0100               	movlb	0	; () banked
  2183  001004  0100               	movlb	0	; () banked
  2184  001006  5184               	movf	sprintf@c& (0+255),w,b
  2185  001008  ECB0  F009         	call	_scale
  2186  00100C  C035  F060         	movff	?_scale,_sprintf$1608
  2187  001010  C036  F061         	movff	?_scale+1,_sprintf$1608+1
  2188  001014  C037  F062         	movff	?_scale+2,_sprintf$1608+2
  2189                           
  2190                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  2191  001018  C07F  F029         	movff	sprintf@fval,___ftmul@f2
  2192  00101C  C080  F02A         	movff	sprintf@fval+1,___ftmul@f2+1
  2193  001020  C081  F02B         	movff	sprintf@fval+2,___ftmul@f2+2
  2194  001024  C060  F026         	movff	_sprintf$1608,___ftmul@f1
  2195  001028  C061  F027         	movff	_sprintf$1608+1,___ftmul@f1+1
  2196  00102C  C062  F028         	movff	_sprintf$1608+2,___ftmul@f1+2
  2197  001030  EC7E  F00F         	call	___ftmul	;wreg free
  2198  001034  C026  F017         	movff	?___ftmul,___fttol@f1
  2199  001038  C027  F018         	movff	?___ftmul+1,___fttol@f1+1
  2200  00103C  C028  F019         	movff	?___ftmul+2,___fttol@f1+2
  2201  001040  EC61  F010         	call	___fttol	;wreg free
  2202  001044  C017  F071         	movff	?___fttol,sprintf@_val
  2203  001048  C018  F072         	movff	?___fttol+1,sprintf@_val+1
  2204  00104C  C019  F073         	movff	?___fttol+2,sprintf@_val+2
  2205  001050  C01A  F074         	movff	?___fttol+3,sprintf@_val+3
  2206                           
  2207                           ;doprnt.c: 1237: while(c--) {
  2208  001054  D075               	goto	l4434
  2209  001056                     l4424:
  2210                           
  2211                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  2212  001056  C071  F001         	movff	sprintf@_val,___lldiv@dividend
  2213  00105A  C072  F002         	movff	sprintf@_val+1,___lldiv@dividend+1
  2214  00105E  C073  F003         	movff	sprintf@_val+2,___lldiv@dividend+2
  2215  001062  C074  F004         	movff	sprintf@_val+3,___lldiv@dividend+3
  2216  001066  0100               	movlb	0	; () banked
  2217  001068  0100               	movlb	0	; () banked
  2218  00106A  5184               	movf	sprintf@c& (0+255),w,b
  2219  00106C  0D04               	mullw	4
  2220  00106E  0E01               	movlw	low _dpowers
  2221  001070  24F3               	addwf	prodl,w,c
  2222  001072  6EF6               	movwf	tblptrl,c
  2223  001074  0E08               	movlw	high _dpowers
  2224  001076  20F4               	addwfc	prodh,w,c
  2225  001078  6EF7               	movwf	tblptrh,c
  2226  00107A  0009               	tblrd		*+
  2227  00107C  CFF5 F005          	movff	tablat,___lldiv@divisor
  2228  001080  0009               	tblrd		*+
  2229  001082  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2230  001086  0009               	tblrd		*+
  2231  001088  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2232  00108C  000A               	tblrd		*-
  2233  00108E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2234  001092  EC60  F012         	call	___lldiv	;wreg free
  2235  001096  C001  F06D         	movff	?___lldiv,sprintf@vd_341
  2236  00109A  C002  F06E         	movff	?___lldiv+1,sprintf@vd_341+1
  2237  00109E  C003  F06F         	movff	?___lldiv+2,sprintf@vd_341+2
  2238  0010A2  C004  F070         	movff	?___lldiv+3,sprintf@vd_341+3
  2239                           
  2240                           ;doprnt.c: 1239: vd %= 10;
  2241  0010A6  C06D  F001         	movff	sprintf@vd_341,___llmod@dividend
  2242  0010AA  C06E  F002         	movff	sprintf@vd_341+1,___llmod@dividend+1
  2243  0010AE  C06F  F003         	movff	sprintf@vd_341+2,___llmod@dividend+2
  2244  0010B2  C070  F004         	movff	sprintf@vd_341+3,___llmod@dividend+3
  2245  0010B6  0E0A               	movlw	10
  2246  0010B8  6E05               	movwf	___llmod@divisor,c
  2247  0010BA  0E00               	movlw	0
  2248  0010BC  6E06               	movwf	___llmod@divisor+1,c
  2249  0010BE  0E00               	movlw	0
  2250  0010C0  6E07               	movwf	___llmod@divisor+2,c
  2251  0010C2  0E00               	movlw	0
  2252  0010C4  6E08               	movwf	___llmod@divisor+3,c
  2253  0010C6  ECA3  F012         	call	___llmod	;wreg free
  2254  0010CA  C001  F06D         	movff	?___llmod,sprintf@vd_341
  2255  0010CE  C002  F06E         	movff	?___llmod+1,sprintf@vd_341+1
  2256  0010D2  C003  F06F         	movff	?___llmod+2,sprintf@vd_341+2
  2257  0010D6  C004  F070         	movff	?___llmod+3,sprintf@vd_341+3
  2258                           
  2259                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  2260  0010DA  0100               	movlb	0	; () banked
  2261  0010DC  0100               	movlb	0	; () banked
  2262  0010DE  516D               	movf	sprintf@vd_341& (0+255),w,b
  2263  0010E0  0F30               	addlw	48
  2264  0010E2  C044  FFD9         	movff	sprintf@sp,fsr2l
  2265  0010E6  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  2266  0010EA  6EDF               	movwf	indf2,c
  2267                           
  2268                           ; BSR set to: 0
  2269  0010EC  4A44               	infsnz	sprintf@sp,f,c
  2270  0010EE  2A45               	incf	sprintf@sp+1,f,c
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  2274  0010F0  C071  F001         	movff	sprintf@_val,___llmod@dividend
  2275  0010F4  C072  F002         	movff	sprintf@_val+1,___llmod@dividend+1
  2276  0010F8  C073  F003         	movff	sprintf@_val+2,___llmod@dividend+2
  2277  0010FC  C074  F004         	movff	sprintf@_val+3,___llmod@dividend+3
  2278  001100  0100               	movlb	0	; () banked
  2279  001102  0100               	movlb	0	; () banked
  2280  001104  5184               	movf	sprintf@c& (0+255),w,b
  2281  001106  0D04               	mullw	4
  2282  001108  0E01               	movlw	low _dpowers
  2283  00110A  24F3               	addwf	prodl,w,c
  2284  00110C  6EF6               	movwf	tblptrl,c
  2285  00110E  0E08               	movlw	high _dpowers
  2286  001110  20F4               	addwfc	prodh,w,c
  2287  001112  6EF7               	movwf	tblptrh,c
  2288  001114  0009               	tblrd		*+
  2289  001116  CFF5 F005          	movff	tablat,___llmod@divisor
  2290  00111A  0009               	tblrd		*+
  2291  00111C  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2292  001120  0009               	tblrd		*+
  2293  001122  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2294  001126  000A               	tblrd		*-
  2295  001128  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2296  00112C  ECA3  F012         	call	___llmod	;wreg free
  2297  001130  C001  F071         	movff	?___llmod,sprintf@_val
  2298  001134  C002  F072         	movff	?___llmod+1,sprintf@_val+1
  2299  001138  C003  F073         	movff	?___llmod+2,sprintf@_val+2
  2300  00113C  C004  F074         	movff	?___llmod+3,sprintf@_val+3
  2301  001140                     l4434:
  2302  001140  0100               	movlb	0	; () banked
  2303  001142  0100               	movlb	0	; () banked
  2304  001144  0784               	decf	sprintf@c& (0+255),f,b
  2305  001146  0100               	movlb	0	; () banked
  2306  001148  2984               	incf	sprintf@c& (0+255),w,b
  2307  00114A  B4D8               	btfsc	status,2,c
  2308  00114C  D00E               	goto	l4442
  2309  00114E  D783               	goto	l4424
  2310  001150                     l4436:
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  2314  001150  C044  FFD9         	movff	sprintf@sp,fsr2l
  2315  001154  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  2316  001158  0E30               	movlw	48
  2317  00115A  6EDF               	movwf	indf2,c
  2318                           
  2319                           ; BSR set to: 0
  2320  00115C  4A44               	infsnz	sprintf@sp,f,c
  2321  00115E  2A45               	incf	sprintf@sp+1,f,c
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;doprnt.c: 1246: prec--;
  2325  001160  0100               	movlb	0	; () banked
  2326  001162  0100               	movlb	0	; () banked
  2327  001164  0782               	decf	sprintf@prec& (0+255),f,b
  2328  001166  A0D8               	btfss	status,0,c
  2329  001168  0783               	decf	(sprintf@prec+1)& (0+255),f,b
  2330  00116A                     l4442:
  2331                           
  2332                           ; BSR set to: 0
  2333  00116A  0100               	movlb	0	; () banked
  2334  00116C  0100               	movlb	0	; () banked
  2335  00116E  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  2336  001170  1182               	iorwf	sprintf@prec& (0+255),w,b
  2337  001172  B4D8               	btfsc	status,2,c
  2338  001174  D0E0               	goto	l4492
  2339  001176  D7EC               	goto	l4436
  2340  001178                     l4444:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;doprnt.c: 1255: }
  2344                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  2345  001178  0100               	movlb	0	; () banked
  2346  00117A  0100               	movlb	0	; () banked
  2347  00117C  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  2348  00117E  1182               	iorwf	sprintf@prec& (0+255),w,b
  2349  001180  A4D8               	btfss	status,2,c
  2350  001182  D00C               	goto	l4450
  2351                           
  2352                           ; BSR set to: 0
  2353  001184  0100               	movlb	0	; () banked
  2354  001186  0100               	movlb	0	; () banked
  2355  001188  5174               	movf	(sprintf@_val+3)& (0+255),w,b
  2356  00118A  1171               	iorwf	sprintf@_val& (0+255),w,b
  2357  00118C  1172               	iorwf	(sprintf@_val+1)& (0+255),w,b
  2358  00118E  1173               	iorwf	(sprintf@_val+2)& (0+255),w,b
  2359  001190  A4D8               	btfss	status,2,c
  2360  001192  D004               	goto	l4450
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;doprnt.c: 1300: prec++;
  2364  001194  0100               	movlb	0	; () banked
  2365  001196  0100               	movlb	0	; () banked
  2366  001198  4B82               	infsnz	sprintf@prec& (0+255),f,b
  2367  00119A  2B83               	incf	(sprintf@prec+1)& (0+255),f,b
  2368  00119C                     l4450:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;doprnt.c: 1348: if(c < prec)
  2372  00119C  0E80               	movlw	128
  2373  00119E  0100               	movlb	0	; () banked
  2374  0011A0  0100               	movlb	0	; () banked
  2375  0011A2  BF84               	btfsc	sprintf@c& (0+255),7,b
  2376  0011A4  0E7F               	movlw	127
  2377  0011A6  6E4B               	movwf	??_sprintf& (0+255),c
  2378  0011A8  0100               	movlb	0	; () banked
  2379  0011AA  0100               	movlb	0	; () banked
  2380  0011AC  5182               	movf	sprintf@prec& (0+255),w,b
  2381  0011AE  0100               	movlb	0	; () banked
  2382  0011B0  0100               	movlb	0	; () banked
  2383  0011B2  5D84               	subwf	sprintf@c& (0+255),w,b
  2384  0011B4  0100               	movlb	0	; () banked
  2385  0011B6  0100               	movlb	0	; () banked
  2386  0011B8  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  2387  0011BA  0A80               	xorlw	128
  2388  0011BC  584B               	subwfb	??_sprintf& (0+255),w,c
  2389  0011BE  B0D8               	btfsc	status,0,c
  2390  0011C0  D003               	goto	l4454
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;doprnt.c: 1349: c = prec;
  2394  0011C2  C082  F084         	movff	sprintf@prec,sprintf@c
  2395  0011C6  D01E               	goto	l4458
  2396  0011C8                     l4454:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;doprnt.c: 1350: else if(prec < c)
  2400  0011C8  0100               	movlb	0	; () banked
  2401  0011CA  0100               	movlb	0	; () banked
  2402  0011CC  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  2403  0011CE  0A80               	xorlw	128
  2404  0011D0  6E4B               	movwf	??_sprintf& (0+255),c
  2405  0011D2  0100               	movlb	0	; () banked
  2406  0011D4  0100               	movlb	0	; () banked
  2407  0011D6  5184               	movf	sprintf@c& (0+255),w,b
  2408  0011D8  0100               	movlb	0	; () banked
  2409  0011DA  0100               	movlb	0	; () banked
  2410  0011DC  5D82               	subwf	sprintf@prec& (0+255),w,b
  2411  0011DE  0E80               	movlw	128
  2412  0011E0  0100               	movlb	0	; () banked
  2413  0011E2  0100               	movlb	0	; () banked
  2414  0011E4  BF84               	btfsc	sprintf@c& (0+255),7,b
  2415  0011E6  0E7F               	movlw	127
  2416  0011E8  584B               	subwfb	??_sprintf& (0+255),w,c
  2417  0011EA  B0D8               	btfsc	status,0,c
  2418  0011EC  D00B               	goto	l4458
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;doprnt.c: 1351: prec = c;
  2422  0011EE  0100               	movlb	0	; () banked
  2423  0011F0  0100               	movlb	0	; () banked
  2424  0011F2  5184               	movf	sprintf@c& (0+255),w,b
  2425  0011F4  0100               	movlb	0	; () banked
  2426  0011F6  0100               	movlb	0	; () banked
  2427  0011F8  6F82               	movwf	sprintf@prec& (0+255),b
  2428  0011FA  0100               	movlb	0	; () banked
  2429  0011FC  6B83               	clrf	(sprintf@prec+1)& (0+255),b
  2430  0011FE  0100               	movlb	0	; () banked
  2431  001200  BF82               	btfsc	sprintf@prec& (0+255),7,b
  2432  001202  0783               	decf	(sprintf@prec+1)& (0+255),f,b
  2433  001204                     l4458:
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2437  001204  0100               	movlb	0	; () banked
  2438  001206  0100               	movlb	0	; () banked
  2439  001208  517C               	movf	(sprintf@width+1)& (0+255),w,b
  2440  00120A  117B               	iorwf	sprintf@width& (0+255),w,b
  2441  00120C  B4D8               	btfsc	status,2,c
  2442  00120E  D013               	goto	l4464
  2443                           
  2444                           ; BSR set to: 0
  2445  001210  0E03               	movlw	3
  2446  001212  0100               	movlb	0	; () banked
  2447  001214  0100               	movlb	0	; () banked
  2448  001216  1579               	andwf	sprintf@flag& (0+255),w,b
  2449  001218  6E4B               	movwf	??_sprintf& (0+255),c
  2450  00121A  0E00               	movlw	0
  2451  00121C  0100               	movlb	0	; () banked
  2452  00121E  0100               	movlb	0	; () banked
  2453  001220  157A               	andwf	(sprintf@flag+1)& (0+255),w,b
  2454  001222  6E4C               	movwf	(??_sprintf+1)& (0+255),c
  2455  001224  504C               	movf	??_sprintf+1,w,c
  2456  001226  104B               	iorwf	??_sprintf,w,c
  2457  001228  B4D8               	btfsc	status,2,c
  2458  00122A  D005               	goto	l4464
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;doprnt.c: 1355: width--;
  2462  00122C  0100               	movlb	0	; () banked
  2463  00122E  0100               	movlb	0	; () banked
  2464  001230  077B               	decf	sprintf@width& (0+255),f,b
  2465  001232  A0D8               	btfss	status,0,c
  2466  001234  077C               	decf	(sprintf@width+1)& (0+255),f,b
  2467  001236                     l4464:
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;doprnt.c: 1357: if(flag & 0x4000) {
  2471  001236  0100               	movlb	0	; () banked
  2472  001238  0100               	movlb	0	; () banked
  2473  00123A  AD7A               	btfss	(sprintf@flag+1)& (0+255),6,b
  2474  00123C  D026               	goto	l4472
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;doprnt.c: 1358: if(width > prec)
  2478  00123E  0100               	movlb	0	; () banked
  2479  001240  0100               	movlb	0	; () banked
  2480  001242  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  2481  001244  0A80               	xorlw	128
  2482  001246  6E4B               	movwf	??_sprintf& (0+255),c
  2483  001248  0100               	movlb	0	; () banked
  2484  00124A  0100               	movlb	0	; () banked
  2485  00124C  517B               	movf	sprintf@width& (0+255),w,b
  2486  00124E  0100               	movlb	0	; () banked
  2487  001250  0100               	movlb	0	; () banked
  2488  001252  5D82               	subwf	sprintf@prec& (0+255),w,b
  2489  001254  0100               	movlb	0	; () banked
  2490  001256  0100               	movlb	0	; () banked
  2491  001258  517C               	movf	(sprintf@width+1)& (0+255),w,b
  2492  00125A  0A80               	xorlw	128
  2493  00125C  584B               	subwfb	??_sprintf& (0+255),w,c
  2494  00125E  B0D8               	btfsc	status,0,c
  2495  001260  D00D               	goto	l4470
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;doprnt.c: 1359: width -= prec;
  2499  001262  0100               	movlb	0	; () banked
  2500  001264  0100               	movlb	0	; () banked
  2501  001266  5182               	movf	sprintf@prec& (0+255),w,b
  2502  001268  0100               	movlb	0	; () banked
  2503  00126A  0100               	movlb	0	; () banked
  2504  00126C  5F7B               	subwf	sprintf@width& (0+255),f,b
  2505  00126E  0100               	movlb	0	; () banked
  2506  001270  0100               	movlb	0	; () banked
  2507  001272  5183               	movf	(sprintf@prec+1)& (0+255),w,b
  2508  001274  0100               	movlb	0	; () banked
  2509  001276  0100               	movlb	0	; () banked
  2510  001278  5B7C               	subwfb	(sprintf@width+1)& (0+255),f,b
  2511  00127A  D007               	goto	l4472
  2512  00127C                     l4470:
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;doprnt.c: 1360: else
  2516                           ;doprnt.c: 1361: width = 0;
  2517  00127C  0E00               	movlw	0
  2518  00127E  0100               	movlb	0	; () banked
  2519  001280  0100               	movlb	0	; () banked
  2520  001282  6F7C               	movwf	(sprintf@width+1)& (0+255),b
  2521  001284  0E00               	movlw	0
  2522  001286  0100               	movlb	0	; () banked
  2523  001288  6F7B               	movwf	sprintf@width& (0+255),b
  2524  00128A                     l4472:
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;doprnt.c: 1362: }
  2528                           ;doprnt.c: 1390: if(width > c)
  2529  00128A  0E80               	movlw	128
  2530  00128C  0100               	movlb	0	; () banked
  2531  00128E  0100               	movlb	0	; () banked
  2532  001290  BF84               	btfsc	sprintf@c& (0+255),7,b
  2533  001292  0E7F               	movlw	127
  2534  001294  6E4B               	movwf	??_sprintf& (0+255),c
  2535  001296  0100               	movlb	0	; () banked
  2536  001298  0100               	movlb	0	; () banked
  2537  00129A  517B               	movf	sprintf@width& (0+255),w,b
  2538  00129C  0100               	movlb	0	; () banked
  2539  00129E  0100               	movlb	0	; () banked
  2540  0012A0  5D84               	subwf	sprintf@c& (0+255),w,b
  2541  0012A2  0100               	movlb	0	; () banked
  2542  0012A4  0100               	movlb	0	; () banked
  2543  0012A6  517C               	movf	(sprintf@width+1)& (0+255),w,b
  2544  0012A8  0A80               	xorlw	128
  2545  0012AA  584B               	subwfb	??_sprintf& (0+255),w,c
  2546  0012AC  B0D8               	btfsc	status,0,c
  2547  0012AE  D00E               	goto	l4476
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;doprnt.c: 1391: width -= c;
  2551  0012B0  0100               	movlb	0	; () banked
  2552  0012B2  0100               	movlb	0	; () banked
  2553  0012B4  5184               	movf	sprintf@c& (0+255),w,b
  2554  0012B6  0100               	movlb	0	; () banked
  2555  0012B8  0100               	movlb	0	; () banked
  2556  0012BA  5F7B               	subwf	sprintf@width& (0+255),f,b
  2557  0012BC  0E00               	movlw	0
  2558  0012BE  0100               	movlb	0	; () banked
  2559  0012C0  BF84               	btfsc	sprintf@c& (0+255),7,b
  2560  0012C2  0EFF               	movlw	255
  2561  0012C4  0100               	movlb	0	; () banked
  2562  0012C6  0100               	movlb	0	; () banked
  2563  0012C8  5B7C               	subwfb	(sprintf@width+1)& (0+255),f,b
  2564  0012CA  D007               	goto	l4478
  2565  0012CC                     l4476:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;doprnt.c: 1392: else
  2569                           ;doprnt.c: 1393: width = 0;
  2570  0012CC  0E00               	movlw	0
  2571  0012CE  0100               	movlb	0	; () banked
  2572  0012D0  0100               	movlb	0	; () banked
  2573  0012D2  6F7C               	movwf	(sprintf@width+1)& (0+255),b
  2574  0012D4  0E00               	movlw	0
  2575  0012D6  0100               	movlb	0	; () banked
  2576  0012D8  6F7B               	movwf	sprintf@width& (0+255),b
  2577  0012DA                     l4478:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;doprnt.c: 1431: {
  2581                           ;doprnt.c: 1433: if(width
  2582                           ;doprnt.c: 1437: )
  2583  0012DA  0100               	movlb	0	; () banked
  2584  0012DC  0100               	movlb	0	; () banked
  2585  0012DE  517C               	movf	(sprintf@width+1)& (0+255),w,b
  2586  0012E0  117B               	iorwf	sprintf@width& (0+255),w,b
  2587  0012E2  B4D8               	btfsc	status,2,c
  2588  0012E4  D012               	goto	l4486
  2589  0012E6                     l4480:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2593  0012E6  C044  FFD9         	movff	sprintf@sp,fsr2l
  2594  0012EA  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  2595  0012EE  0E20               	movlw	32
  2596  0012F0  6EDF               	movwf	indf2,c
  2597                           
  2598                           ; BSR set to: 0
  2599  0012F2  4A44               	infsnz	sprintf@sp,f,c
  2600  0012F4  2A45               	incf	sprintf@sp+1,f,c
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;doprnt.c: 1440: while(--width);
  2604  0012F6  0100               	movlb	0	; () banked
  2605  0012F8  0100               	movlb	0	; () banked
  2606  0012FA  077B               	decf	sprintf@width& (0+255),f,b
  2607  0012FC  A0D8               	btfss	status,0,c
  2608  0012FE  077C               	decf	(sprintf@width+1)& (0+255),f,b
  2609  001300  0100               	movlb	0	; () banked
  2610  001302  517C               	movf	(sprintf@width+1)& (0+255),w,b
  2611  001304  117B               	iorwf	sprintf@width& (0+255),w,b
  2612  001306  A4D8               	btfss	status,2,c
  2613  001308  D7EE               	goto	l4480
  2614  00130A                     l4486:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;doprnt.c: 1447: if(flag & 0x03)
  2618  00130A  0E03               	movlw	3
  2619  00130C  0100               	movlb	0	; () banked
  2620  00130E  0100               	movlb	0	; () banked
  2621  001310  1579               	andwf	sprintf@flag& (0+255),w,b
  2622  001312  6E4B               	movwf	??_sprintf& (0+255),c
  2623  001314  0E00               	movlw	0
  2624  001316  0100               	movlb	0	; () banked
  2625  001318  0100               	movlb	0	; () banked
  2626  00131A  157A               	andwf	(sprintf@flag+1)& (0+255),w,b
  2627  00131C  6E4C               	movwf	(??_sprintf+1)& (0+255),c
  2628  00131E  504C               	movf	??_sprintf+1,w,c
  2629  001320  104B               	iorwf	??_sprintf,w,c
  2630  001322  B4D8               	btfsc	status,2,c
  2631  001324  D008               	goto	l4492
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2635  001326  C044  FFD9         	movff	sprintf@sp,fsr2l
  2636  00132A  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  2637  00132E  0E2D               	movlw	45
  2638  001330  6EDF               	movwf	indf2,c
  2639  001332                     L1:
  2640                           
  2641                           ; BSR set to: 0
  2642  001332  4A44               	infsnz	sprintf@sp,f,c
  2643  001334  2A45               	incf	sprintf@sp+1,f,c
  2644  001336                     l4492:
  2645                           
  2646                           ; BSR set to: 0
  2647  001336  C046  FFF6         	movff	sprintf@f,tblptrl
  2648  00133A  C047  FFF7         	movff	sprintf@f+1,tblptrh
  2649  00133E  4A46               	infsnz	sprintf@f,f,c
  2650  001340  2A47               	incf	sprintf@f+1,f,c
  2651  001342  0008               	tblrd		*
  2652  001344  0100               	movlb	0	; () banked
  2653  001346  CFF5 F084          	movff	tablat,sprintf@c
  2654  00134A  0100               	movlb	0	; () banked
  2655  00134C  6784               	tstfsz	sprintf@c& (0+255),b
  2656  00134E  EF4E  F004         	goto	l4234
  2657  001352                     l4494:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;doprnt.c: 1547: *sp = 0;
  2661  001352  C044  FFD9         	movff	sprintf@sp,fsr2l
  2662  001356  C045  FFDA         	movff	sprintf@sp+1,fsr2h
  2663  00135A  0E00               	movlw	0
  2664  00135C  6EDF               	movwf	indf2,c
  2665                           
  2666                           ; BSR set to: 0
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;doprnt.c: 1549: return 0;
  2670                           ;	Return value of _sprintf is never used
  2671  00135E  0012               	return	
  2672  001360                     __end_of_sprintf:
  2673                           	opt stack 0
  2674                           tblptru	equ	0xFF8
  2675                           tblptrh	equ	0xFF7
  2676                           tblptrl	equ	0xFF6
  2677                           tablat	equ	0xFF5
  2678                           prodh	equ	0xFF4
  2679                           prodl	equ	0xFF3
  2680                           wreg	equ	0xFE8
  2681                           indf2	equ	0xFDF
  2682                           postinc2	equ	0xFDE
  2683                           postdec2	equ	0xFDD
  2684                           fsr2h	equ	0xFDA
  2685                           fsr2l	equ	0xFD9
  2686                           status	equ	0xFD8
  2687                           
  2688 ;; *************** function _scale *****************
  2689 ;; Defined at:
  2690 ;;		line 425 in file "/opt/microchip/xc8/v1.30/sources/common/doprnt.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  scl             1    wreg     char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  scl             1   58[COMRAM] char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  3   52[COMRAM] char 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2704 ;;      Params:         3       0       0       0       0       0       0       0       0
  2705 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2707 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2708 ;;Total ram usage:        7 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    2
  2711 ;; This function calls:
  2712 ;;		___awdiv
  2713 ;;		___awmod
  2714 ;;		___ftmul
  2715 ;;		___wmul
  2716 ;; This function is called by:
  2717 ;;		_sprintf
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text2
  2722  001360                     __ptext2:
  2723                           	opt stack 0
  2724  001360                     _scale:
  2725                           	opt stack 27
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;incstack = 0
  2729                           ;scale@scl stored from wreg
  2730  001360  CFE8 F03B          	movff	wreg,scale@scl
  2731                           
  2732                           ;doprnt.c: 428: if(scl < 0) {
  2733  001364  AE3B               	btfss	scale@scl,7,c
  2734  001366  D0EA               	goto	l4206
  2735                           
  2736                           ;doprnt.c: 429: scl = -scl;
  2737  001368  6C3B               	negf	scale@scl,c
  2738                           
  2739                           ;doprnt.c: 430: if(scl>=110)
  2740  00136A  503B               	movf	scale@scl,w,c
  2741  00136C  0A80               	xorlw	128
  2742  00136E  0F12               	addlw	-238
  2743  001370  A0D8               	btfss	status,0,c
  2744  001372  D08B               	goto	l4196
  2745                           
  2746                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2747  001374  0E00               	movlw	0
  2748  001376  6E14               	movwf	___wmul@multiplicand+1,c
  2749  001378  0E03               	movlw	3
  2750  00137A  6E13               	movwf	___wmul@multiplicand,c
  2751  00137C  0E00               	movlw	0
  2752  00137E  6E0B               	movwf	___awdiv@divisor+1,c
  2753  001380  0E0A               	movlw	10
  2754  001382  6E0A               	movwf	___awdiv@divisor,c
  2755  001384  0E00               	movlw	0
  2756  001386  6E04               	movwf	___awmod@divisor+1,c
  2757  001388  0E64               	movlw	100
  2758  00138A  6E03               	movwf	___awmod@divisor,c
  2759  00138C  503B               	movf	scale@scl,w,c
  2760  00138E  6E01               	movwf	___awmod@dividend,c
  2761  001390  6A02               	clrf	___awmod@dividend+1,c
  2762  001392  BE01               	btfsc	___awmod@dividend,7,c
  2763  001394  0602               	decf	___awmod@dividend+1,f,c
  2764  001396  ECCA  F011         	call	___awmod	;wreg free
  2765  00139A  C001  F008         	movff	?___awmod,___awdiv@dividend
  2766  00139E  C002  F009         	movff	?___awmod+1,___awdiv@dividend+1
  2767  0013A2  ECCB  F010         	call	___awdiv	;wreg free
  2768  0013A6  0E09               	movlw	9
  2769  0013A8  2408               	addwf	?___awdiv,w,c
  2770  0013AA  6E11               	movwf	___wmul@multiplier,c
  2771  0013AC  0E00               	movlw	0
  2772  0013AE  2009               	addwfc	?___awdiv+1,w,c
  2773  0013B0  6E12               	movwf	___wmul@multiplier+1,c
  2774  0013B2  EC2F  F014         	call	___wmul	;wreg free
  2775  0013B6  0E29               	movlw	low __npowers_
  2776  0013B8  2411               	addwf	?___wmul,w,c
  2777  0013BA  6EF6               	movwf	tblptrl,c
  2778  0013BC  0E08               	movlw	high __npowers_
  2779  0013BE  2012               	addwfc	?___wmul+1,w,c
  2780  0013C0  6EF7               	movwf	tblptrh,c
  2781  0013C2  0009               	tblrd		*+
  2782  0013C4  CFF5 F029          	movff	tablat,___ftmul@f2
  2783  0013C8  0009               	tblrd		*+
  2784  0013CA  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  2785  0013CE  000A               	tblrd		*-
  2786  0013D0  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  2787  0013D4  0E00               	movlw	0
  2788  0013D6  6E14               	movwf	___wmul@multiplicand+1,c
  2789  0013D8  0E03               	movlw	3
  2790  0013DA  6E13               	movwf	___wmul@multiplicand,c
  2791  0013DC  0E00               	movlw	0
  2792  0013DE  6E0B               	movwf	___awdiv@divisor+1,c
  2793  0013E0  0E64               	movlw	100
  2794  0013E2  6E0A               	movwf	___awdiv@divisor,c
  2795  0013E4  503B               	movf	scale@scl,w,c
  2796  0013E6  6E08               	movwf	___awdiv@dividend,c
  2797  0013E8  6A09               	clrf	___awdiv@dividend+1,c
  2798  0013EA  BE08               	btfsc	___awdiv@dividend,7,c
  2799  0013EC  0609               	decf	___awdiv@dividend+1,f,c
  2800  0013EE  ECCB  F010         	call	___awdiv	;wreg free
  2801  0013F2  0E12               	movlw	18
  2802  0013F4  2408               	addwf	?___awdiv,w,c
  2803  0013F6  6E11               	movwf	___wmul@multiplier,c
  2804  0013F8  0E00               	movlw	0
  2805  0013FA  2009               	addwfc	?___awdiv+1,w,c
  2806  0013FC  6E12               	movwf	___wmul@multiplier+1,c
  2807  0013FE  EC2F  F014         	call	___wmul	;wreg free
  2808  001402  0E29               	movlw	low __npowers_
  2809  001404  2411               	addwf	?___wmul,w,c
  2810  001406  6EF6               	movwf	tblptrl,c
  2811  001408  0E08               	movlw	high __npowers_
  2812  00140A  2012               	addwfc	?___wmul+1,w,c
  2813  00140C  6EF7               	movwf	tblptrh,c
  2814  00140E  0009               	tblrd		*+
  2815  001410  CFF5 F026          	movff	tablat,___ftmul@f1
  2816  001414  0009               	tblrd		*+
  2817  001416  CFF5 F027          	movff	tablat,___ftmul@f1+1
  2818  00141A  000A               	tblrd		*-
  2819  00141C  CFF5 F028          	movff	tablat,___ftmul@f1+2
  2820  001420  EC7E  F00F         	call	___ftmul	;wreg free
  2821  001424  C026  F038         	movff	?___ftmul,_scale$1607
  2822  001428  C027  F039         	movff	?___ftmul+1,_scale$1607+1
  2823  00142C  C028  F03A         	movff	?___ftmul+2,_scale$1607+2
  2824                           
  2825                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2826  001430  C038  F026         	movff	_scale$1607,___ftmul@f1
  2827  001434  C039  F027         	movff	_scale$1607+1,___ftmul@f1+1
  2828  001438  C03A  F028         	movff	_scale$1607+2,___ftmul@f1+2
  2829  00143C  0E00               	movlw	0
  2830  00143E  6E14               	movwf	___wmul@multiplicand+1,c
  2831  001440  0E03               	movlw	3
  2832  001442  6E13               	movwf	___wmul@multiplicand,c
  2833  001444  0E00               	movlw	0
  2834  001446  6E04               	movwf	___awmod@divisor+1,c
  2835  001448  0E0A               	movlw	10
  2836  00144A  6E03               	movwf	___awmod@divisor,c
  2837  00144C  503B               	movf	scale@scl,w,c
  2838  00144E  6E01               	movwf	___awmod@dividend,c
  2839  001450  6A02               	clrf	___awmod@dividend+1,c
  2840  001452  BE01               	btfsc	___awmod@dividend,7,c
  2841  001454  0602               	decf	___awmod@dividend+1,f,c
  2842  001456  ECCA  F011         	call	___awmod	;wreg free
  2843  00145A  C001  F011         	movff	?___awmod,___wmul@multiplier
  2844  00145E  C002  F012         	movff	?___awmod+1,___wmul@multiplier+1
  2845  001462  EC2F  F014         	call	___wmul	;wreg free
  2846  001466  0E29               	movlw	low __npowers_
  2847  001468  2411               	addwf	?___wmul,w,c
  2848  00146A  6EF6               	movwf	tblptrl,c
  2849  00146C  0E08               	movlw	high __npowers_
  2850  00146E  2012               	addwfc	?___wmul+1,w,c
  2851  001470  6EF7               	movwf	tblptrh,c
  2852  001472  0009               	tblrd		*+
  2853  001474  CFF5 F029          	movff	tablat,___ftmul@f2
  2854  001478  0009               	tblrd		*+
  2855  00147A  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  2856  00147E  000A               	tblrd		*-
  2857  001480  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  2858  001484  EC7E  F00F         	call	___ftmul	;wreg free
  2859  001488  D13A               	goto	L9
  2860  00148A                     l4196:
  2861                           
  2862                           ;doprnt.c: 432: else if(scl > 10)
  2863  00148A  503B               	movf	scale@scl,w,c
  2864  00148C  0A80               	xorlw	128
  2865  00148E  0F75               	addlw	-139
  2866  001490  A0D8               	btfss	status,0,c
  2867  001492  D04D               	goto	l4202
  2868                           
  2869                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2870  001494  0E00               	movlw	0
  2871  001496  6E14               	movwf	___wmul@multiplicand+1,c
  2872  001498  0E03               	movlw	3
  2873  00149A  6E13               	movwf	___wmul@multiplicand,c
  2874  00149C  0E00               	movlw	0
  2875  00149E  6E0B               	movwf	___awdiv@divisor+1,c
  2876  0014A0  0E0A               	movlw	10
  2877  0014A2  6E0A               	movwf	___awdiv@divisor,c
  2878  0014A4  503B               	movf	scale@scl,w,c
  2879  0014A6  6E08               	movwf	___awdiv@dividend,c
  2880  0014A8  6A09               	clrf	___awdiv@dividend+1,c
  2881  0014AA  BE08               	btfsc	___awdiv@dividend,7,c
  2882  0014AC  0609               	decf	___awdiv@dividend+1,f,c
  2883  0014AE  ECCB  F010         	call	___awdiv	;wreg free
  2884  0014B2  0E09               	movlw	9
  2885  0014B4  2408               	addwf	?___awdiv,w,c
  2886  0014B6  6E11               	movwf	___wmul@multiplier,c
  2887  0014B8  0E00               	movlw	0
  2888  0014BA  2009               	addwfc	?___awdiv+1,w,c
  2889  0014BC  6E12               	movwf	___wmul@multiplier+1,c
  2890  0014BE  EC2F  F014         	call	___wmul	;wreg free
  2891  0014C2  0E29               	movlw	low __npowers_
  2892  0014C4  2411               	addwf	?___wmul,w,c
  2893  0014C6  6EF6               	movwf	tblptrl,c
  2894  0014C8  0E08               	movlw	high __npowers_
  2895  0014CA  2012               	addwfc	?___wmul+1,w,c
  2896  0014CC  6EF7               	movwf	tblptrh,c
  2897  0014CE  0009               	tblrd		*+
  2898  0014D0  CFF5 F026          	movff	tablat,___ftmul@f1
  2899  0014D4  0009               	tblrd		*+
  2900  0014D6  CFF5 F027          	movff	tablat,___ftmul@f1+1
  2901  0014DA  000A               	tblrd		*-
  2902  0014DC  CFF5 F028          	movff	tablat,___ftmul@f1+2
  2903  0014E0  0E00               	movlw	0
  2904  0014E2  6E14               	movwf	___wmul@multiplicand+1,c
  2905  0014E4  0E03               	movlw	3
  2906  0014E6  6E13               	movwf	___wmul@multiplicand,c
  2907  0014E8  0E00               	movlw	0
  2908  0014EA  6E04               	movwf	___awmod@divisor+1,c
  2909  0014EC  0E0A               	movlw	10
  2910  0014EE  6E03               	movwf	___awmod@divisor,c
  2911  0014F0  503B               	movf	scale@scl,w,c
  2912  0014F2  6E01               	movwf	___awmod@dividend,c
  2913  0014F4  6A02               	clrf	___awmod@dividend+1,c
  2914  0014F6  BE01               	btfsc	___awmod@dividend,7,c
  2915  0014F8  0602               	decf	___awmod@dividend+1,f,c
  2916  0014FA  ECCA  F011         	call	___awmod	;wreg free
  2917  0014FE  C001  F011         	movff	?___awmod,___wmul@multiplier
  2918  001502  C002  F012         	movff	?___awmod+1,___wmul@multiplier+1
  2919  001506  EC2F  F014         	call	___wmul	;wreg free
  2920  00150A  0E29               	movlw	low __npowers_
  2921  00150C  2411               	addwf	?___wmul,w,c
  2922  00150E  6EF6               	movwf	tblptrl,c
  2923  001510  0E08               	movlw	high __npowers_
  2924  001512  2012               	addwfc	?___wmul+1,w,c
  2925  001514  6EF7               	movwf	tblptrh,c
  2926  001516  0009               	tblrd		*+
  2927  001518  CFF5 F029          	movff	tablat,___ftmul@f2
  2928  00151C  0009               	tblrd		*+
  2929  00151E  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  2930  001522  000A               	tblrd		*-
  2931  001524  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  2932  001528  EC7E  F00F         	call	___ftmul	;wreg free
  2933  00152C  D0E8               	goto	L9
  2934  00152E                     l4202:
  2935                           
  2936                           ;doprnt.c: 434: return _npowers_[scl];
  2937  00152E  503B               	movf	scale@scl,w,c
  2938  001530  0D03               	mullw	3
  2939  001532  0E29               	movlw	low __npowers_
  2940  001534  24F3               	addwf	prodl,w,c
  2941  001536  6EF6               	movwf	tblptrl,c
  2942  001538  0E08               	movlw	high __npowers_
  2943  00153A  D0EE               	goto	L8
  2944  00153C                     l4206:
  2945                           
  2946                           ;doprnt.c: 435: }
  2947                           ;doprnt.c: 436: if(scl>=110)
  2948  00153C  503B               	movf	scale@scl,w,c
  2949  00153E  0A80               	xorlw	128
  2950  001540  0F12               	addlw	-238
  2951  001542  A0D8               	btfss	status,0,c
  2952  001544  D08B               	goto	l4214
  2953                           
  2954                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2955  001546  0E00               	movlw	0
  2956  001548  6E14               	movwf	___wmul@multiplicand+1,c
  2957  00154A  0E03               	movlw	3
  2958  00154C  6E13               	movwf	___wmul@multiplicand,c
  2959  00154E  0E00               	movlw	0
  2960  001550  6E0B               	movwf	___awdiv@divisor+1,c
  2961  001552  0E0A               	movlw	10
  2962  001554  6E0A               	movwf	___awdiv@divisor,c
  2963  001556  0E00               	movlw	0
  2964  001558  6E04               	movwf	___awmod@divisor+1,c
  2965  00155A  0E64               	movlw	100
  2966  00155C  6E03               	movwf	___awmod@divisor,c
  2967  00155E  503B               	movf	scale@scl,w,c
  2968  001560  6E01               	movwf	___awmod@dividend,c
  2969  001562  6A02               	clrf	___awmod@dividend+1,c
  2970  001564  BE01               	btfsc	___awmod@dividend,7,c
  2971  001566  0602               	decf	___awmod@dividend+1,f,c
  2972  001568  ECCA  F011         	call	___awmod	;wreg free
  2973  00156C  C001  F008         	movff	?___awmod,___awdiv@dividend
  2974  001570  C002  F009         	movff	?___awmod+1,___awdiv@dividend+1
  2975  001574  ECCB  F010         	call	___awdiv	;wreg free
  2976  001578  0E09               	movlw	9
  2977  00157A  2408               	addwf	?___awdiv,w,c
  2978  00157C  6E11               	movwf	___wmul@multiplier,c
  2979  00157E  0E00               	movlw	0
  2980  001580  2009               	addwfc	?___awdiv+1,w,c
  2981  001582  6E12               	movwf	___wmul@multiplier+1,c
  2982  001584  EC2F  F014         	call	___wmul	;wreg free
  2983  001588  0E50               	movlw	low __powers_
  2984  00158A  2411               	addwf	?___wmul,w,c
  2985  00158C  6EF6               	movwf	tblptrl,c
  2986  00158E  0E08               	movlw	high __powers_
  2987  001590  2012               	addwfc	?___wmul+1,w,c
  2988  001592  6EF7               	movwf	tblptrh,c
  2989  001594  0009               	tblrd		*+
  2990  001596  CFF5 F029          	movff	tablat,___ftmul@f2
  2991  00159A  0009               	tblrd		*+
  2992  00159C  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  2993  0015A0  000A               	tblrd		*-
  2994  0015A2  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  2995  0015A6  0E00               	movlw	0
  2996  0015A8  6E14               	movwf	___wmul@multiplicand+1,c
  2997  0015AA  0E03               	movlw	3
  2998  0015AC  6E13               	movwf	___wmul@multiplicand,c
  2999  0015AE  0E00               	movlw	0
  3000  0015B0  6E0B               	movwf	___awdiv@divisor+1,c
  3001  0015B2  0E64               	movlw	100
  3002  0015B4  6E0A               	movwf	___awdiv@divisor,c
  3003  0015B6  503B               	movf	scale@scl,w,c
  3004  0015B8  6E08               	movwf	___awdiv@dividend,c
  3005  0015BA  6A09               	clrf	___awdiv@dividend+1,c
  3006  0015BC  BE08               	btfsc	___awdiv@dividend,7,c
  3007  0015BE  0609               	decf	___awdiv@dividend+1,f,c
  3008  0015C0  ECCB  F010         	call	___awdiv	;wreg free
  3009  0015C4  0E12               	movlw	18
  3010  0015C6  2408               	addwf	?___awdiv,w,c
  3011  0015C8  6E11               	movwf	___wmul@multiplier,c
  3012  0015CA  0E00               	movlw	0
  3013  0015CC  2009               	addwfc	?___awdiv+1,w,c
  3014  0015CE  6E12               	movwf	___wmul@multiplier+1,c
  3015  0015D0  EC2F  F014         	call	___wmul	;wreg free
  3016  0015D4  0E50               	movlw	low __powers_
  3017  0015D6  2411               	addwf	?___wmul,w,c
  3018  0015D8  6EF6               	movwf	tblptrl,c
  3019  0015DA  0E08               	movlw	high __powers_
  3020  0015DC  2012               	addwfc	?___wmul+1,w,c
  3021  0015DE  6EF7               	movwf	tblptrh,c
  3022  0015E0  0009               	tblrd		*+
  3023  0015E2  CFF5 F026          	movff	tablat,___ftmul@f1
  3024  0015E6  0009               	tblrd		*+
  3025  0015E8  CFF5 F027          	movff	tablat,___ftmul@f1+1
  3026  0015EC  000A               	tblrd		*-
  3027  0015EE  CFF5 F028          	movff	tablat,___ftmul@f1+2
  3028  0015F2  EC7E  F00F         	call	___ftmul	;wreg free
  3029  0015F6  C026  F038         	movff	?___ftmul,_scale$1607
  3030  0015FA  C027  F039         	movff	?___ftmul+1,_scale$1607+1
  3031  0015FE  C028  F03A         	movff	?___ftmul+2,_scale$1607+2
  3032                           
  3033                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3034  001602  C038  F026         	movff	_scale$1607,___ftmul@f1
  3035  001606  C039  F027         	movff	_scale$1607+1,___ftmul@f1+1
  3036  00160A  C03A  F028         	movff	_scale$1607+2,___ftmul@f1+2
  3037  00160E  0E00               	movlw	0
  3038  001610  6E14               	movwf	___wmul@multiplicand+1,c
  3039  001612  0E03               	movlw	3
  3040  001614  6E13               	movwf	___wmul@multiplicand,c
  3041  001616  0E00               	movlw	0
  3042  001618  6E04               	movwf	___awmod@divisor+1,c
  3043  00161A  0E0A               	movlw	10
  3044  00161C  6E03               	movwf	___awmod@divisor,c
  3045  00161E  503B               	movf	scale@scl,w,c
  3046  001620  6E01               	movwf	___awmod@dividend,c
  3047  001622  6A02               	clrf	___awmod@dividend+1,c
  3048  001624  BE01               	btfsc	___awmod@dividend,7,c
  3049  001626  0602               	decf	___awmod@dividend+1,f,c
  3050  001628  ECCA  F011         	call	___awmod	;wreg free
  3051  00162C  C001  F011         	movff	?___awmod,___wmul@multiplier
  3052  001630  C002  F012         	movff	?___awmod+1,___wmul@multiplier+1
  3053  001634  EC2F  F014         	call	___wmul	;wreg free
  3054  001638  0E50               	movlw	low __powers_
  3055  00163A  2411               	addwf	?___wmul,w,c
  3056  00163C  6EF6               	movwf	tblptrl,c
  3057  00163E  0E08               	movlw	high __powers_
  3058  001640  2012               	addwfc	?___wmul+1,w,c
  3059  001642  6EF7               	movwf	tblptrh,c
  3060  001644  0009               	tblrd		*+
  3061  001646  CFF5 F029          	movff	tablat,___ftmul@f2
  3062  00164A  0009               	tblrd		*+
  3063  00164C  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  3064  001650  000A               	tblrd		*-
  3065  001652  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  3066  001656  EC7E  F00F         	call	___ftmul	;wreg free
  3067  00165A  D051               	goto	L9
  3068  00165C                     l4214:
  3069                           
  3070                           ;doprnt.c: 438: else if(scl > 10)
  3071  00165C  503B               	movf	scale@scl,w,c
  3072  00165E  0A80               	xorlw	128
  3073  001660  0F75               	addlw	-139
  3074  001662  A0D8               	btfss	status,0,c
  3075  001664  D053               	goto	l4220
  3076                           
  3077                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3078  001666  0E00               	movlw	0
  3079  001668  6E14               	movwf	___wmul@multiplicand+1,c
  3080  00166A  0E03               	movlw	3
  3081  00166C  6E13               	movwf	___wmul@multiplicand,c
  3082  00166E  0E00               	movlw	0
  3083  001670  6E0B               	movwf	___awdiv@divisor+1,c
  3084  001672  0E0A               	movlw	10
  3085  001674  6E0A               	movwf	___awdiv@divisor,c
  3086  001676  503B               	movf	scale@scl,w,c
  3087  001678  6E08               	movwf	___awdiv@dividend,c
  3088  00167A  6A09               	clrf	___awdiv@dividend+1,c
  3089  00167C  BE08               	btfsc	___awdiv@dividend,7,c
  3090  00167E  0609               	decf	___awdiv@dividend+1,f,c
  3091  001680  ECCB  F010         	call	___awdiv	;wreg free
  3092  001684  0E09               	movlw	9
  3093  001686  2408               	addwf	?___awdiv,w,c
  3094  001688  6E11               	movwf	___wmul@multiplier,c
  3095  00168A  0E00               	movlw	0
  3096  00168C  2009               	addwfc	?___awdiv+1,w,c
  3097  00168E  6E12               	movwf	___wmul@multiplier+1,c
  3098  001690  EC2F  F014         	call	___wmul	;wreg free
  3099  001694  0E50               	movlw	low __powers_
  3100  001696  2411               	addwf	?___wmul,w,c
  3101  001698  6EF6               	movwf	tblptrl,c
  3102  00169A  0E08               	movlw	high __powers_
  3103  00169C  2012               	addwfc	?___wmul+1,w,c
  3104  00169E  6EF7               	movwf	tblptrh,c
  3105  0016A0  0009               	tblrd		*+
  3106  0016A2  CFF5 F026          	movff	tablat,___ftmul@f1
  3107  0016A6  0009               	tblrd		*+
  3108  0016A8  CFF5 F027          	movff	tablat,___ftmul@f1+1
  3109  0016AC  000A               	tblrd		*-
  3110  0016AE  CFF5 F028          	movff	tablat,___ftmul@f1+2
  3111  0016B2  0E00               	movlw	0
  3112  0016B4  6E14               	movwf	___wmul@multiplicand+1,c
  3113  0016B6  0E03               	movlw	3
  3114  0016B8  6E13               	movwf	___wmul@multiplicand,c
  3115  0016BA  0E00               	movlw	0
  3116  0016BC  6E04               	movwf	___awmod@divisor+1,c
  3117  0016BE  0E0A               	movlw	10
  3118  0016C0  6E03               	movwf	___awmod@divisor,c
  3119  0016C2  503B               	movf	scale@scl,w,c
  3120  0016C4  6E01               	movwf	___awmod@dividend,c
  3121  0016C6  6A02               	clrf	___awmod@dividend+1,c
  3122  0016C8  BE01               	btfsc	___awmod@dividend,7,c
  3123  0016CA  0602               	decf	___awmod@dividend+1,f,c
  3124  0016CC  ECCA  F011         	call	___awmod	;wreg free
  3125  0016D0  C001  F011         	movff	?___awmod,___wmul@multiplier
  3126  0016D4  C002  F012         	movff	?___awmod+1,___wmul@multiplier+1
  3127  0016D8  EC2F  F014         	call	___wmul	;wreg free
  3128  0016DC  0E50               	movlw	low __powers_
  3129  0016DE  2411               	addwf	?___wmul,w,c
  3130  0016E0  6EF6               	movwf	tblptrl,c
  3131  0016E2  0E08               	movlw	high __powers_
  3132  0016E4  2012               	addwfc	?___wmul+1,w,c
  3133  0016E6  6EF7               	movwf	tblptrh,c
  3134  0016E8  0009               	tblrd		*+
  3135  0016EA  CFF5 F029          	movff	tablat,___ftmul@f2
  3136  0016EE  0009               	tblrd		*+
  3137  0016F0  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  3138  0016F4  000A               	tblrd		*-
  3139  0016F6  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  3140  0016FA  EC7E  F00F         	call	___ftmul	;wreg free
  3141  0016FE                     L9:
  3142  0016FE  C026  F035         	movff	?___ftmul,?_scale
  3143  001702  C027  F036         	movff	?___ftmul+1,?_scale+1
  3144  001706  C028  F037         	movff	?___ftmul+2,?_scale+2
  3145  00170A  D011               	goto	l99
  3146  00170C                     l4220:
  3147                           
  3148                           ;doprnt.c: 440: return _powers_[scl];
  3149  00170C  503B               	movf	scale@scl,w,c
  3150  00170E  0D03               	mullw	3
  3151  001710  0E50               	movlw	low __powers_
  3152  001712  24F3               	addwf	prodl,w,c
  3153  001714  6EF6               	movwf	tblptrl,c
  3154  001716  0E08               	movlw	high __powers_
  3155  001718                     L8:
  3156  001718  20F4               	addwfc	prodh,w,c
  3157  00171A  6EF7               	movwf	tblptrh,c
  3158  00171C  0009               	tblrd		*+
  3159  00171E  CFF5 F035          	movff	tablat,?_scale
  3160  001722  0009               	tblrd		*+
  3161  001724  CFF5 F036          	movff	tablat,?_scale+1
  3162  001728  000A               	tblrd		*-
  3163  00172A  CFF5 F037          	movff	tablat,?_scale+2
  3164  00172E                     l99:
  3165  00172E  0012               	return	
  3166  001730                     __end_of_scale:
  3167                           	opt stack 0
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           wreg	equ	0xFE8
  3175                           indf2	equ	0xFDF
  3176                           postinc2	equ	0xFDE
  3177                           postdec2	equ	0xFDD
  3178                           fsr2h	equ	0xFDA
  3179                           fsr2l	equ	0xFD9
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _isdigit *****************
  3183 ;; Defined at:
  3184 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/isdigit.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  c               1    wreg     unsigned char 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  c               1    2[COMRAM] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;		None               void
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0
  3199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3200 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3201 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3202 ;;Total ram usage:        3 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_sprintf
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text3
  3212  002960                     __ptext3:
  3213                           	opt stack 0
  3214  002960                     _isdigit:
  3215                           	opt stack 29
  3216                           
  3217                           ;incstack = 0
  3218                           ;isdigit@c stored from wreg
  3219  002960  CFE8 F003          	movff	wreg,isdigit@c
  3220  002964  6E01               	movwf	??_isdigit& (0+255),c
  3221  002966  0E00               	movlw	0
  3222  002968  6E02               	movwf	_isdigit$1286,c
  3223  00296A  5001               	movf	??_isdigit& (0+255),w,c
  3224  00296C  0E3A               	movlw	58
  3225  00296E  5C03               	subwf	isdigit@c,w,c
  3226  002970  B0D8               	btfsc	status,0,c
  3227  002972  D007               	goto	l3440
  3228  002974  0E2F               	movlw	47
  3229  002976  6403               	cpfsgt	isdigit@c,c
  3230  002978  D004               	goto	l3440
  3231  00297A  6E01               	movwf	??_isdigit& (0+255),c
  3232  00297C  0E01               	movlw	1
  3233  00297E  6E02               	movwf	_isdigit$1286,c
  3234  002980  5001               	movf	??_isdigit& (0+255),w,c
  3235  002982                     l3440:
  3236  002982  C002  F001         	movff	_isdigit$1286,??_isdigit
  3237  002986  3001               	rrcf	??_isdigit,w,c
  3238  002988  0012               	return	
  3239  00298A                     __end_of_isdigit:
  3240                           	opt stack 0
  3241                           tblptru	equ	0xFF8
  3242                           tblptrh	equ	0xFF7
  3243                           tblptrl	equ	0xFF6
  3244                           tablat	equ	0xFF5
  3245                           prodh	equ	0xFF4
  3246                           prodl	equ	0xFF3
  3247                           wreg	equ	0xFE8
  3248                           indf2	equ	0xFDF
  3249                           postinc2	equ	0xFDE
  3250                           postdec2	equ	0xFDD
  3251                           fsr2h	equ	0xFDA
  3252                           fsr2l	equ	0xFD9
  3253                           status	equ	0xFD8
  3254                           
  3255 ;; *************** function _fround *****************
  3256 ;; Defined at:
  3257 ;;		line 409 in file "/opt/microchip/xc8/v1.30/sources/common/doprnt.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  prec            1    wreg     unsigned char 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  prec            1   61[COMRAM] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  3   52[COMRAM] unsigned char 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3271 ;;      Params:         3       0       0       0       0       0       0       0       0
  3272 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3274 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3275 ;;Total ram usage:       10 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    2
  3278 ;; This function calls:
  3279 ;;		___awdiv
  3280 ;;		___awmod
  3281 ;;		___ftmul
  3282 ;;		___wmul
  3283 ;; This function is called by:
  3284 ;;		_sprintf
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text4
  3289  001730                     __ptext4:
  3290                           	opt stack 0
  3291  001730                     _fround:
  3292                           	opt stack 27
  3293                           
  3294                           ;incstack = 0
  3295                           ;fround@prec stored from wreg
  3296  001730  CFE8 F03E          	movff	wreg,fround@prec
  3297                           
  3298                           ;doprnt.c: 413: if(prec>=110)
  3299  001734  0E6D               	movlw	109
  3300  001736  643E               	cpfsgt	fround@prec,c
  3301  001738  D099               	goto	l4174
  3302                           
  3303                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3304  00173A  0E00               	movlw	0
  3305  00173C  6E14               	movwf	___wmul@multiplicand+1,c
  3306  00173E  0E03               	movlw	3
  3307  001740  6E13               	movwf	___wmul@multiplicand,c
  3308  001742  0E00               	movlw	0
  3309  001744  6E0B               	movwf	___awdiv@divisor+1,c
  3310  001746  0E0A               	movlw	10
  3311  001748  6E0A               	movwf	___awdiv@divisor,c
  3312  00174A  0E00               	movlw	0
  3313  00174C  6E04               	movwf	___awmod@divisor+1,c
  3314  00174E  0E64               	movlw	100
  3315  001750  6E03               	movwf	___awmod@divisor,c
  3316  001752  C03E  F001         	movff	fround@prec,___awmod@dividend
  3317  001756  6A02               	clrf	___awmod@dividend+1,c
  3318  001758  ECCA  F011         	call	___awmod	;wreg free
  3319  00175C  C001  F008         	movff	?___awmod,___awdiv@dividend
  3320  001760  C002  F009         	movff	?___awmod+1,___awdiv@dividend+1
  3321  001764  ECCB  F010         	call	___awdiv	;wreg free
  3322  001768  0E09               	movlw	9
  3323  00176A  2408               	addwf	?___awdiv,w,c
  3324  00176C  6E11               	movwf	___wmul@multiplier,c
  3325  00176E  0E00               	movlw	0
  3326  001770  2009               	addwfc	?___awdiv+1,w,c
  3327  001772  6E12               	movwf	___wmul@multiplier+1,c
  3328  001774  EC2F  F014         	call	___wmul	;wreg free
  3329  001778  0E29               	movlw	low __npowers_
  3330  00177A  2411               	addwf	?___wmul,w,c
  3331  00177C  6EF6               	movwf	tblptrl,c
  3332  00177E  0E08               	movlw	high __npowers_
  3333  001780  2012               	addwfc	?___wmul+1,w,c
  3334  001782  6EF7               	movwf	tblptrh,c
  3335  001784  0009               	tblrd		*+
  3336  001786  CFF5 F029          	movff	tablat,___ftmul@f2
  3337  00178A  0009               	tblrd		*+
  3338  00178C  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  3339  001790  000A               	tblrd		*-
  3340  001792  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  3341  001796  0E00               	movlw	0
  3342  001798  6E14               	movwf	___wmul@multiplicand+1,c
  3343  00179A  0E03               	movlw	3
  3344  00179C  6E13               	movwf	___wmul@multiplicand,c
  3345  00179E  0E00               	movlw	0
  3346  0017A0  6E0B               	movwf	___awdiv@divisor+1,c
  3347  0017A2  0E64               	movlw	100
  3348  0017A4  6E0A               	movwf	___awdiv@divisor,c
  3349  0017A6  C03E  F008         	movff	fround@prec,___awdiv@dividend
  3350  0017AA  6A09               	clrf	___awdiv@dividend+1,c
  3351  0017AC  ECCB  F010         	call	___awdiv	;wreg free
  3352  0017B0  0E12               	movlw	18
  3353  0017B2  2408               	addwf	?___awdiv,w,c
  3354  0017B4  6E11               	movwf	___wmul@multiplier,c
  3355  0017B6  0E00               	movlw	0
  3356  0017B8  2009               	addwfc	?___awdiv+1,w,c
  3357  0017BA  6E12               	movwf	___wmul@multiplier+1,c
  3358  0017BC  EC2F  F014         	call	___wmul	;wreg free
  3359  0017C0  0E29               	movlw	low __npowers_
  3360  0017C2  2411               	addwf	?___wmul,w,c
  3361  0017C4  6EF6               	movwf	tblptrl,c
  3362  0017C6  0E08               	movlw	high __npowers_
  3363  0017C8  2012               	addwfc	?___wmul+1,w,c
  3364  0017CA  6EF7               	movwf	tblptrh,c
  3365  0017CC  0009               	tblrd		*+
  3366  0017CE  CFF5 F026          	movff	tablat,___ftmul@f1
  3367  0017D2  0009               	tblrd		*+
  3368  0017D4  CFF5 F027          	movff	tablat,___ftmul@f1+1
  3369  0017D8  000A               	tblrd		*-
  3370  0017DA  CFF5 F028          	movff	tablat,___ftmul@f1+2
  3371  0017DE  EC7E  F00F         	call	___ftmul	;wreg free
  3372  0017E2  C026  F03B         	movff	?___ftmul,_fround$1605
  3373  0017E6  C027  F03C         	movff	?___ftmul+1,_fround$1605+1
  3374  0017EA  C028  F03D         	movff	?___ftmul+2,_fround$1605+2
  3375                           
  3376                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3377  0017EE  0E00               	movlw	0
  3378  0017F0  6E14               	movwf	___wmul@multiplicand+1,c
  3379  0017F2  0E03               	movlw	3
  3380  0017F4  6E13               	movwf	___wmul@multiplicand,c
  3381  0017F6  0E00               	movlw	0
  3382  0017F8  6E04               	movwf	___awmod@divisor+1,c
  3383  0017FA  0E0A               	movlw	10
  3384  0017FC  6E03               	movwf	___awmod@divisor,c
  3385  0017FE  C03E  F001         	movff	fround@prec,___awmod@dividend
  3386  001802  6A02               	clrf	___awmod@dividend+1,c
  3387  001804  ECCA  F011         	call	___awmod	;wreg free
  3388  001808  C001  F011         	movff	?___awmod,___wmul@multiplier
  3389  00180C  C002  F012         	movff	?___awmod+1,___wmul@multiplier+1
  3390  001810  EC2F  F014         	call	___wmul	;wreg free
  3391  001814  0E29               	movlw	low __npowers_
  3392  001816  2411               	addwf	?___wmul,w,c
  3393  001818  6EF6               	movwf	tblptrl,c
  3394  00181A  0E08               	movlw	high __npowers_
  3395  00181C  2012               	addwfc	?___wmul+1,w,c
  3396  00181E  6EF7               	movwf	tblptrh,c
  3397  001820  0009               	tblrd		*+
  3398  001822  CFF5 F029          	movff	tablat,___ftmul@f2
  3399  001826  0009               	tblrd		*+
  3400  001828  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  3401  00182C  000A               	tblrd		*-
  3402  00182E  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  3403  001832  C03B  F026         	movff	_fround$1605,___ftmul@f1
  3404  001836  C03C  F027         	movff	_fround$1605+1,___ftmul@f1+1
  3405  00183A  C03D  F028         	movff	_fround$1605+2,___ftmul@f1+2
  3406  00183E  EC7E  F00F         	call	___ftmul	;wreg free
  3407  001842  C026  F038         	movff	?___ftmul,_fround$1606
  3408  001846  C027  F039         	movff	?___ftmul+1,_fround$1606+1
  3409  00184A  C028  F03A         	movff	?___ftmul+2,_fround$1606+2
  3410                           
  3411                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3412  00184E  C038  F026         	movff	_fround$1606,___ftmul@f1
  3413  001852  C039  F027         	movff	_fround$1606+1,___ftmul@f1+1
  3414  001856  C03A  F028         	movff	_fround$1606+2,___ftmul@f1+2
  3415  00185A  0E00               	movlw	0
  3416  00185C  6E29               	movwf	___ftmul@f2,c
  3417  00185E  0E00               	movlw	0
  3418  001860  6E2A               	movwf	___ftmul@f2+1,c
  3419  001862  0E3F               	movlw	63
  3420  001864  6E2B               	movwf	___ftmul@f2+2,c
  3421  001866  EC7E  F00F         	call	___ftmul	;wreg free
  3422  00186A  D079               	goto	L11
  3423  00186C                     l4174:
  3424                           
  3425                           ;doprnt.c: 415: else if(prec > 10)
  3426  00186C  0E0A               	movlw	10
  3427  00186E  643E               	cpfsgt	fround@prec,c
  3428  001870  D05D               	goto	l4182
  3429                           
  3430                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3431  001872  0E00               	movlw	0
  3432  001874  6E14               	movwf	___wmul@multiplicand+1,c
  3433  001876  0E03               	movlw	3
  3434  001878  6E13               	movwf	___wmul@multiplicand,c
  3435  00187A  0E00               	movlw	0
  3436  00187C  6E04               	movwf	___awmod@divisor+1,c
  3437  00187E  0E0A               	movlw	10
  3438  001880  6E03               	movwf	___awmod@divisor,c
  3439  001882  C03E  F001         	movff	fround@prec,___awmod@dividend
  3440  001886  6A02               	clrf	___awmod@dividend+1,c
  3441  001888  ECCA  F011         	call	___awmod	;wreg free
  3442  00188C  C001  F011         	movff	?___awmod,___wmul@multiplier
  3443  001890  C002  F012         	movff	?___awmod+1,___wmul@multiplier+1
  3444  001894  EC2F  F014         	call	___wmul	;wreg free
  3445  001898  0E29               	movlw	low __npowers_
  3446  00189A  2411               	addwf	?___wmul,w,c
  3447  00189C  6EF6               	movwf	tblptrl,c
  3448  00189E  0E08               	movlw	high __npowers_
  3449  0018A0  2012               	addwfc	?___wmul+1,w,c
  3450  0018A2  6EF7               	movwf	tblptrh,c
  3451  0018A4  0009               	tblrd		*+
  3452  0018A6  CFF5 F029          	movff	tablat,___ftmul@f2
  3453  0018AA  0009               	tblrd		*+
  3454  0018AC  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  3455  0018B0  000A               	tblrd		*-
  3456  0018B2  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  3457  0018B6  0E00               	movlw	0
  3458  0018B8  6E14               	movwf	___wmul@multiplicand+1,c
  3459  0018BA  0E03               	movlw	3
  3460  0018BC  6E13               	movwf	___wmul@multiplicand,c
  3461  0018BE  0E00               	movlw	0
  3462  0018C0  6E0B               	movwf	___awdiv@divisor+1,c
  3463  0018C2  0E0A               	movlw	10
  3464  0018C4  6E0A               	movwf	___awdiv@divisor,c
  3465  0018C6  C03E  F008         	movff	fround@prec,___awdiv@dividend
  3466  0018CA  6A09               	clrf	___awdiv@dividend+1,c
  3467  0018CC  ECCB  F010         	call	___awdiv	;wreg free
  3468  0018D0  0E09               	movlw	9
  3469  0018D2  2408               	addwf	?___awdiv,w,c
  3470  0018D4  6E11               	movwf	___wmul@multiplier,c
  3471  0018D6  0E00               	movlw	0
  3472  0018D8  2009               	addwfc	?___awdiv+1,w,c
  3473  0018DA  6E12               	movwf	___wmul@multiplier+1,c
  3474  0018DC  EC2F  F014         	call	___wmul	;wreg free
  3475  0018E0  0E29               	movlw	low __npowers_
  3476  0018E2  2411               	addwf	?___wmul,w,c
  3477  0018E4  6EF6               	movwf	tblptrl,c
  3478  0018E6  0E08               	movlw	high __npowers_
  3479  0018E8  2012               	addwfc	?___wmul+1,w,c
  3480  0018EA  6EF7               	movwf	tblptrh,c
  3481  0018EC  0009               	tblrd		*+
  3482  0018EE  CFF5 F026          	movff	tablat,___ftmul@f1
  3483  0018F2  0009               	tblrd		*+
  3484  0018F4  CFF5 F027          	movff	tablat,___ftmul@f1+1
  3485  0018F8  000A               	tblrd		*-
  3486  0018FA  CFF5 F028          	movff	tablat,___ftmul@f1+2
  3487  0018FE  EC7E  F00F         	call	___ftmul	;wreg free
  3488  001902  C026  F03B         	movff	?___ftmul,_fround$1605
  3489  001906  C027  F03C         	movff	?___ftmul+1,_fround$1605+1
  3490  00190A  C028  F03D         	movff	?___ftmul+2,_fround$1605+2
  3491                           
  3492                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3493  00190E  C03B  F026         	movff	_fround$1605,___ftmul@f1
  3494  001912  C03C  F027         	movff	_fround$1605+1,___ftmul@f1+1
  3495  001916  C03D  F028         	movff	_fround$1605+2,___ftmul@f1+2
  3496  00191A  0E00               	movlw	0
  3497  00191C  6E29               	movwf	___ftmul@f2,c
  3498  00191E  0E00               	movlw	0
  3499  001920  6E2A               	movwf	___ftmul@f2+1,c
  3500  001922  0E3F               	movlw	63
  3501  001924  6E2B               	movwf	___ftmul@f2+2,c
  3502  001926  EC7E  F00F         	call	___ftmul	;wreg free
  3503  00192A  D019               	goto	L11
  3504  00192C                     l4182:
  3505                           
  3506                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3507  00192C  503E               	movf	fround@prec,w,c
  3508  00192E  0D03               	mullw	3
  3509  001930  0E29               	movlw	low __npowers_
  3510  001932  24F3               	addwf	prodl,w,c
  3511  001934  6EF6               	movwf	tblptrl,c
  3512  001936  0E08               	movlw	high __npowers_
  3513  001938  20F4               	addwfc	prodh,w,c
  3514  00193A  6EF7               	movwf	tblptrh,c
  3515  00193C  0009               	tblrd		*+
  3516  00193E  CFF5 F026          	movff	tablat,___ftmul@f1
  3517  001942  0009               	tblrd		*+
  3518  001944  CFF5 F027          	movff	tablat,___ftmul@f1+1
  3519  001948  000A               	tblrd		*-
  3520  00194A  CFF5 F028          	movff	tablat,___ftmul@f1+2
  3521  00194E  0E00               	movlw	0
  3522  001950  6E29               	movwf	___ftmul@f2,c
  3523  001952  0E00               	movlw	0
  3524  001954  6E2A               	movwf	___ftmul@f2+1,c
  3525  001956  0E3F               	movlw	63
  3526  001958  6E2B               	movwf	___ftmul@f2+2,c
  3527  00195A  EC7E  F00F         	call	___ftmul	;wreg free
  3528  00195E                     L11:
  3529  00195E  C026  F035         	movff	?___ftmul,?_fround
  3530  001962  C027  F036         	movff	?___ftmul+1,?_fround+1
  3531  001966  C028  F037         	movff	?___ftmul+2,?_fround+2
  3532  00196A  0012               	return	
  3533  00196C                     __end_of_fround:
  3534                           	opt stack 0
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           prodh	equ	0xFF4
  3540                           prodl	equ	0xFF3
  3541                           wreg	equ	0xFE8
  3542                           indf2	equ	0xFDF
  3543                           postinc2	equ	0xFDE
  3544                           postdec2	equ	0xFDD
  3545                           fsr2h	equ	0xFDA
  3546                           fsr2l	equ	0xFD9
  3547                           status	equ	0xFD8
  3548                           
  3549 ;; *************** function ___wmul *****************
  3550 ;; Defined at:
  3551 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/wmul.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  multiplier      2   16[COMRAM] unsigned int 
  3554 ;;  multiplicand    2   18[COMRAM] unsigned int 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  product         2   20[COMRAM] unsigned int 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  2   16[COMRAM] unsigned int 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, prodl, prodh
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3566 ;;      Params:         4       0       0       0       0       0       0       0       0
  3567 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3569 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3570 ;;Total ram usage:        6 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_fround
  3576 ;;		_scale
  3577 ;;		_sprintf
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text5
  3582  00285E                     __ptext5:
  3583                           	opt stack 0
  3584  00285E                     ___wmul:
  3585                           	opt stack 28
  3586                           
  3587                           ;incstack = 0
  3588  00285E  5011               	movf	___wmul@multiplier,w,c
  3589  002860  0213               	mulwf	___wmul@multiplicand,c
  3590  002862  CFF3 F015          	movff	prodl,___wmul@product
  3591  002866  CFF4 F016          	movff	prodh,___wmul@product+1
  3592  00286A  5011               	movf	___wmul@multiplier,w,c
  3593  00286C  0214               	mulwf	___wmul@multiplicand+1,c
  3594  00286E  CFF3 FFF4          	movff	prodl,prodh
  3595  002872  6AF3               	clrf	prodl,c
  3596  002874  50F3               	movf	prodl,w,c
  3597  002876  2615               	addwf	___wmul@product,f,c
  3598  002878  50F4               	movf	prodh,w,c
  3599  00287A  2216               	addwfc	___wmul@product+1,f,c
  3600  00287C  5012               	movf	___wmul@multiplier+1,w,c
  3601  00287E  0213               	mulwf	___wmul@multiplicand,c
  3602  002880  CFF3 FFF4          	movff	prodl,prodh
  3603  002884  6AF3               	clrf	prodl,c
  3604  002886  50F3               	movf	prodl,w,c
  3605  002888  2615               	addwf	___wmul@product,f,c
  3606  00288A  50F4               	movf	prodh,w,c
  3607  00288C  2216               	addwfc	___wmul@product+1,f,c
  3608  00288E  C015  F011         	movff	___wmul@product,?___wmul
  3609  002892  C016  F012         	movff	___wmul@product+1,?___wmul+1
  3610  002896  0012               	return	
  3611  002898                     __end_of___wmul:
  3612                           	opt stack 0
  3613                           tblptru	equ	0xFF8
  3614                           tblptrh	equ	0xFF7
  3615                           tblptrl	equ	0xFF6
  3616                           tablat	equ	0xFF5
  3617                           prodh	equ	0xFF4
  3618                           prodl	equ	0xFF3
  3619                           wreg	equ	0xFE8
  3620                           indf2	equ	0xFDF
  3621                           postinc2	equ	0xFDE
  3622                           postdec2	equ	0xFDD
  3623                           fsr2h	equ	0xFDA
  3624                           fsr2l	equ	0xFD9
  3625                           status	equ	0xFD8
  3626                           
  3627 ;; *************** function ___awmod *****************
  3628 ;; Defined at:
  3629 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/awmod.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  dividend        2    0[COMRAM] int 
  3632 ;;  divisor         2    2[COMRAM] int 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  sign            1    6[COMRAM] unsigned char 
  3635 ;;  counter         1    5[COMRAM] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  2    0[COMRAM] int 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, prodl
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3645 ;;      Params:         4       0       0       0       0       0       0       0       0
  3646 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3647 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3648 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3649 ;;Total ram usage:        7 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_fround
  3655 ;;		_scale
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text6
  3660  002394                     __ptext6:
  3661                           	opt stack 0
  3662  002394                     ___awmod:
  3663                           	opt stack 28
  3664                           
  3665                           ;incstack = 0
  3666  002394  6E05               	movwf	??___awmod& (0+255),c
  3667  002396  0E00               	movlw	0
  3668  002398  6E07               	movwf	___awmod@sign,c
  3669  00239A  5005               	movf	??___awmod& (0+255),w,c
  3670  00239C  5002               	movf	___awmod@dividend+1,w,c
  3671  00239E  0A80               	xorlw	128
  3672  0023A0  6EF3               	movwf	prodl,c
  3673  0023A2  0E80               	movlw	128
  3674  0023A4  5CF3               	subwf	prodl,w,c
  3675  0023A6  0E00               	movlw	0
  3676  0023A8  B4D8               	btfsc	status,2,c
  3677  0023AA  5C01               	subwf	___awmod@dividend,w,c
  3678  0023AC  B0D8               	btfsc	status,0,c
  3679  0023AE  D008               	goto	l3598
  3680  0023B0  6C01               	negf	___awmod@dividend,c
  3681  0023B2  1E02               	comf	___awmod@dividend+1,f,c
  3682  0023B4  B0D8               	btfsc	status,0,c
  3683  0023B6  2A02               	incf	___awmod@dividend+1,f,c
  3684  0023B8  6E05               	movwf	??___awmod& (0+255),c
  3685  0023BA  0E01               	movlw	1
  3686  0023BC  6E07               	movwf	___awmod@sign,c
  3687  0023BE  5005               	movf	??___awmod& (0+255),w,c
  3688  0023C0                     l3598:
  3689  0023C0  5004               	movf	___awmod@divisor+1,w,c
  3690  0023C2  0A80               	xorlw	128
  3691  0023C4  6EF3               	movwf	prodl,c
  3692  0023C6  0E80               	movlw	128
  3693  0023C8  5CF3               	subwf	prodl,w,c
  3694  0023CA  0E00               	movlw	0
  3695  0023CC  B4D8               	btfsc	status,2,c
  3696  0023CE  5C03               	subwf	___awmod@divisor,w,c
  3697  0023D0  B0D8               	btfsc	status,0,c
  3698  0023D2  D004               	goto	l3602
  3699  0023D4  6C03               	negf	___awmod@divisor,c
  3700  0023D6  1E04               	comf	___awmod@divisor+1,f,c
  3701  0023D8  B0D8               	btfsc	status,0,c
  3702  0023DA  2A04               	incf	___awmod@divisor+1,f,c
  3703  0023DC                     l3602:
  3704  0023DC  5004               	movf	___awmod@divisor+1,w,c
  3705  0023DE  1003               	iorwf	___awmod@divisor,w,c
  3706  0023E0  B4D8               	btfsc	status,2,c
  3707  0023E2  D01A               	goto	l3618
  3708  0023E4  6E05               	movwf	??___awmod& (0+255),c
  3709  0023E6  0E01               	movlw	1
  3710  0023E8  6E06               	movwf	___awmod@counter,c
  3711  0023EA  5005               	movf	??___awmod& (0+255),w,c
  3712  0023EC  D004               	goto	l3608
  3713  0023EE                     l3606:
  3714  0023EE  90D8               	bcf	status,0,c
  3715  0023F0  3603               	rlcf	___awmod@divisor,f,c
  3716  0023F2  3604               	rlcf	___awmod@divisor+1,f,c
  3717  0023F4  2A06               	incf	___awmod@counter,f,c
  3718  0023F6                     l3608:
  3719  0023F6  AE04               	btfss	___awmod@divisor+1,7,c
  3720  0023F8  D7FA               	goto	l3606
  3721  0023FA                     l3610:
  3722  0023FA  5003               	movf	___awmod@divisor,w,c
  3723  0023FC  5C01               	subwf	___awmod@dividend,w,c
  3724  0023FE  5004               	movf	___awmod@divisor+1,w,c
  3725  002400  5802               	subwfb	___awmod@dividend+1,w,c
  3726  002402  A0D8               	btfss	status,0,c
  3727  002404  D004               	goto	l3614
  3728  002406  5003               	movf	___awmod@divisor,w,c
  3729  002408  5E01               	subwf	___awmod@dividend,f,c
  3730  00240A  5004               	movf	___awmod@divisor+1,w,c
  3731  00240C  5A02               	subwfb	___awmod@dividend+1,f,c
  3732  00240E                     l3614:
  3733  00240E  90D8               	bcf	status,0,c
  3734  002410  3204               	rrcf	___awmod@divisor+1,f,c
  3735  002412  3203               	rrcf	___awmod@divisor,f,c
  3736  002414  2E06               	decfsz	___awmod@counter,f,c
  3737  002416  D7F1               	goto	l3610
  3738  002418                     l3618:
  3739  002418  5007               	movf	___awmod@sign,w,c
  3740  00241A  B4D8               	btfsc	status,2,c
  3741  00241C  D004               	goto	l3622
  3742  00241E  6C01               	negf	___awmod@dividend,c
  3743  002420  1E02               	comf	___awmod@dividend+1,f,c
  3744  002422  B0D8               	btfsc	status,0,c
  3745  002424  2A02               	incf	___awmod@dividend+1,f,c
  3746  002426                     l3622:
  3747  002426  C001  F001         	movff	___awmod@dividend,?___awmod
  3748  00242A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3749  00242E  0012               	return	
  3750  002430                     __end_of___awmod:
  3751                           	opt stack 0
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           prodh	equ	0xFF4
  3757                           prodl	equ	0xFF3
  3758                           wreg	equ	0xFE8
  3759                           indf2	equ	0xFDF
  3760                           postinc2	equ	0xFDE
  3761                           postdec2	equ	0xFDD
  3762                           fsr2h	equ	0xFDA
  3763                           fsr2l	equ	0xFD9
  3764                           status	equ	0xFD8
  3765                           
  3766 ;; *************** function ___awdiv *****************
  3767 ;; Defined at:
  3768 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/awdiv.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  dividend        2    7[COMRAM] int 
  3771 ;;  divisor         2    9[COMRAM] int 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  quotient        2   14[COMRAM] int 
  3774 ;;  sign            1   13[COMRAM] unsigned char 
  3775 ;;  counter         1   12[COMRAM] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  2    7[COMRAM] int 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0, prodl
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3785 ;;      Params:         4       0       0       0       0       0       0       0       0
  3786 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3787 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3788 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3789 ;;Total ram usage:        9 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_fround
  3795 ;;		_scale
  3796 ;;		_sprintf
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text7
  3801  002196                     __ptext7:
  3802                           	opt stack 0
  3803  002196                     ___awdiv:
  3804                           	opt stack 28
  3805                           
  3806                           ;incstack = 0
  3807  002196  6E0C               	movwf	??___awdiv& (0+255),c
  3808  002198  0E00               	movlw	0
  3809  00219A  6E0E               	movwf	___awdiv@sign,c
  3810  00219C  500C               	movf	??___awdiv& (0+255),w,c
  3811  00219E  500B               	movf	___awdiv@divisor+1,w,c
  3812  0021A0  0A80               	xorlw	128
  3813  0021A2  6EF3               	movwf	prodl,c
  3814  0021A4  0E80               	movlw	128
  3815  0021A6  5CF3               	subwf	prodl,w,c
  3816  0021A8  0E00               	movlw	0
  3817  0021AA  B4D8               	btfsc	status,2,c
  3818  0021AC  5C0A               	subwf	___awdiv@divisor,w,c
  3819  0021AE  B0D8               	btfsc	status,0,c
  3820  0021B0  D008               	goto	l3828
  3821  0021B2  6C0A               	negf	___awdiv@divisor,c
  3822  0021B4  1E0B               	comf	___awdiv@divisor+1,f,c
  3823  0021B6  B0D8               	btfsc	status,0,c
  3824  0021B8  2A0B               	incf	___awdiv@divisor+1,f,c
  3825  0021BA  6E0C               	movwf	??___awdiv& (0+255),c
  3826  0021BC  0E01               	movlw	1
  3827  0021BE  6E0E               	movwf	___awdiv@sign,c
  3828  0021C0  500C               	movf	??___awdiv& (0+255),w,c
  3829  0021C2                     l3828:
  3830  0021C2  5009               	movf	___awdiv@dividend+1,w,c
  3831  0021C4  0A80               	xorlw	128
  3832  0021C6  6EF3               	movwf	prodl,c
  3833  0021C8  0E80               	movlw	128
  3834  0021CA  5CF3               	subwf	prodl,w,c
  3835  0021CC  0E00               	movlw	0
  3836  0021CE  B4D8               	btfsc	status,2,c
  3837  0021D0  5C08               	subwf	___awdiv@dividend,w,c
  3838  0021D2  B0D8               	btfsc	status,0,c
  3839  0021D4  D006               	goto	l3834
  3840  0021D6  6C08               	negf	___awdiv@dividend,c
  3841  0021D8  1E09               	comf	___awdiv@dividend+1,f,c
  3842  0021DA  B0D8               	btfsc	status,0,c
  3843  0021DC  2A09               	incf	___awdiv@dividend+1,f,c
  3844  0021DE  0E01               	movlw	1
  3845  0021E0  1A0E               	xorwf	___awdiv@sign,f,c
  3846  0021E2                     l3834:
  3847  0021E2  0E00               	movlw	0
  3848  0021E4  6E10               	movwf	___awdiv@quotient+1,c
  3849  0021E6  0E00               	movlw	0
  3850  0021E8  6E0F               	movwf	___awdiv@quotient,c
  3851  0021EA  500B               	movf	___awdiv@divisor+1,w,c
  3852  0021EC  100A               	iorwf	___awdiv@divisor,w,c
  3853  0021EE  B4D8               	btfsc	status,2,c
  3854  0021F0  D01E               	goto	l3856
  3855  0021F2  6E0C               	movwf	??___awdiv& (0+255),c
  3856  0021F4  0E01               	movlw	1
  3857  0021F6  6E0D               	movwf	___awdiv@counter,c
  3858  0021F8  500C               	movf	??___awdiv& (0+255),w,c
  3859  0021FA  D004               	goto	l3842
  3860  0021FC                     l3840:
  3861  0021FC  90D8               	bcf	status,0,c
  3862  0021FE  360A               	rlcf	___awdiv@divisor,f,c
  3863  002200  360B               	rlcf	___awdiv@divisor+1,f,c
  3864  002202  2A0D               	incf	___awdiv@counter,f,c
  3865  002204                     l3842:
  3866  002204  AE0B               	btfss	___awdiv@divisor+1,7,c
  3867  002206  D7FA               	goto	l3840
  3868  002208                     l3844:
  3869  002208  90D8               	bcf	status,0,c
  3870  00220A  360F               	rlcf	___awdiv@quotient,f,c
  3871  00220C  3610               	rlcf	___awdiv@quotient+1,f,c
  3872  00220E  500A               	movf	___awdiv@divisor,w,c
  3873  002210  5C08               	subwf	___awdiv@dividend,w,c
  3874  002212  500B               	movf	___awdiv@divisor+1,w,c
  3875  002214  5809               	subwfb	___awdiv@dividend+1,w,c
  3876  002216  A0D8               	btfss	status,0,c
  3877  002218  D005               	goto	l3852
  3878  00221A  500A               	movf	___awdiv@divisor,w,c
  3879  00221C  5E08               	subwf	___awdiv@dividend,f,c
  3880  00221E  500B               	movf	___awdiv@divisor+1,w,c
  3881  002220  5A09               	subwfb	___awdiv@dividend+1,f,c
  3882  002222  800F               	bsf	___awdiv@quotient,0,c
  3883  002224                     l3852:
  3884  002224  90D8               	bcf	status,0,c
  3885  002226  320B               	rrcf	___awdiv@divisor+1,f,c
  3886  002228  320A               	rrcf	___awdiv@divisor,f,c
  3887  00222A  2E0D               	decfsz	___awdiv@counter,f,c
  3888  00222C  D7ED               	goto	l3844
  3889  00222E                     l3856:
  3890  00222E  500E               	movf	___awdiv@sign,w,c
  3891  002230  B4D8               	btfsc	status,2,c
  3892  002232  D004               	goto	l3860
  3893  002234  6C0F               	negf	___awdiv@quotient,c
  3894  002236  1E10               	comf	___awdiv@quotient+1,f,c
  3895  002238  B0D8               	btfsc	status,0,c
  3896  00223A  2A10               	incf	___awdiv@quotient+1,f,c
  3897  00223C                     l3860:
  3898  00223C  C00F  F008         	movff	___awdiv@quotient,?___awdiv
  3899  002240  C010  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  3900  002244  0012               	return	
  3901  002246                     __end_of___awdiv:
  3902                           	opt stack 0
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           wreg	equ	0xFE8
  3910                           indf2	equ	0xFDF
  3911                           postinc2	equ	0xFDE
  3912                           postdec2	equ	0xFDD
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function __tdiv_to_l_ *****************
  3918 ;; Defined at:
  3919 ;;		line 60 in file "/opt/microchip/xc8/v1.30/sources/common/ftdivl.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  f1              3    0[COMRAM] float 
  3922 ;;  f2              3    3[COMRAM] float 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  quot            4    9[COMRAM] unsigned long 
  3925 ;;  exp1            1   14[COMRAM] unsigned char 
  3926 ;;  cntr            1   13[COMRAM] unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  4    0[COMRAM] unsigned long 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3936 ;;      Params:         6       0       0       0       0       0       0       0       0
  3937 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3938 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3939 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3940 ;;Total ram usage:       15 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_sprintf
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text8
  3950  001DF8                     __ptext8:
  3951                           	opt stack 0
  3952  001DF8                     __tdiv_to_l_:
  3953                           	opt stack 29
  3954                           
  3955                           ;incstack = 0
  3956  001DF8  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3957  001DFC  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3958  001DFE  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3959  001E00  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3960  001E02  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3961  001E04  E301               	bnc	u1651
  3962  001E06  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3963  001E08                     u1651:
  3964  001E08  5007               	movf	??__tdiv_to_l_,w,c
  3965  001E0A  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3966  001E0C  660F               	tstfsz	__tdiv_to_l_@exp1& (0+255),c
  3967  001E0E  D001               	goto	l3450
  3968  001E10  D05B               	goto	u1720
  3969  001E12                     l3450:
  3970  001E12  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3971  001E16  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3972  001E18  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3973  001E1A  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3974  001E1C  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3975  001E1E  E301               	bnc	u1671
  3976  001E20  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3977  001E22                     u1671:
  3978  001E22  5007               	movf	??__tdiv_to_l_,w,c
  3979  001E24  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3980  001E26  660E               	tstfsz	__tdiv_to_l_@cntr& (0+255),c
  3981  001E28  D001               	goto	l3456
  3982  001E2A  D04E               	goto	u1720
  3983  001E2C                     l3456:
  3984  001E2C  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3985  001E2E  0EFF               	movlw	255
  3986  001E30  1601               	andwf	__tdiv_to_l_@f1,f,c
  3987  001E32  0EFF               	movlw	255
  3988  001E34  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3989  001E36  0E00               	movlw	0
  3990  001E38  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3991  001E3A  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3992  001E3C  0EFF               	movlw	255
  3993  001E3E  1604               	andwf	__tdiv_to_l_@f2,f,c
  3994  001E40  0EFF               	movlw	255
  3995  001E42  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3996  001E44  0E00               	movlw	0
  3997  001E46  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3998  001E48  0E00               	movlw	0
  3999  001E4A  6E0A               	movwf	__tdiv_to_l_@quot,c
  4000  001E4C  0E00               	movlw	0
  4001  001E4E  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  4002  001E50  0E00               	movlw	0
  4003  001E52  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  4004  001E54  0E00               	movlw	0
  4005  001E56  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  4006  001E58  0E7F               	movlw	127
  4007  001E5A  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  4008  001E5C  500E               	movf	__tdiv_to_l_@cntr,w,c
  4009  001E5E  0F98               	addlw	152
  4010  001E60  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  4011  001E62  6E07               	movwf	??__tdiv_to_l_& (0+255),c
  4012  001E64  0E18               	movlw	24
  4013  001E66  6E0E               	movwf	__tdiv_to_l_@cntr,c
  4014  001E68  5007               	movf	??__tdiv_to_l_& (0+255),w,c
  4015  001E6A                     l3470:
  4016  001E6A  90D8               	bcf	status,0,c
  4017  001E6C  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4018  001E6E  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4019  001E70  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4020  001E72  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4021  001E74  5004               	movf	__tdiv_to_l_@f2,w,c
  4022  001E76  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4023  001E78  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4024  001E7A  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4025  001E7C  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4026  001E7E  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4027  001E80  A0D8               	btfss	status,0,c
  4028  001E82  D007               	goto	l728
  4029  001E84  5004               	movf	__tdiv_to_l_@f2,w,c
  4030  001E86  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4031  001E88  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4032  001E8A  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4033  001E8C  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4034  001E8E  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4035  001E90  800A               	bsf	__tdiv_to_l_@quot,0,c
  4036  001E92                     l728:
  4037  001E92  90D8               	bcf	status,0,c
  4038  001E94  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4039  001E96  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4040  001E98  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4041  001E9A  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  4042  001E9C  D7E6               	goto	l3470
  4043  001E9E  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  4044  001EA0  D010               	goto	l3490
  4045  001EA2  500F               	movf	__tdiv_to_l_@exp1,w,c
  4046  001EA4  0A80               	xorlw	128
  4047  001EA6  6E07               	movwf	??__tdiv_to_l_& (0+255),c
  4048  001EA8  0EE9               	movlw	233
  4049  001EAA  0A80               	xorlw	128
  4050  001EAC  5C07               	subwf	??__tdiv_to_l_,w,c
  4051  001EAE  A0D8               	btfss	status,0,c
  4052  001EB0  D00B               	goto	u1720
  4053  001EB2                     l3486:
  4054  001EB2  90D8               	bcf	status,0,c
  4055  001EB4  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  4056  001EB6  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  4057  001EB8  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  4058  001EBA  320A               	rrcf	__tdiv_to_l_@quot,f,c
  4059  001EBC  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  4060  001EBE  D7F9               	goto	l3486
  4061  001EC0  D014               	goto	l734
  4062  001EC2                     l3490:
  4063  001EC2  0E17               	movlw	23
  4064  001EC4  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  4065  001EC6  D00F               	goto	l3498
  4066  001EC8                     u1720:
  4067  001EC8  0E00               	movlw	0
  4068  001ECA  6E01               	movwf	?__tdiv_to_l_,c
  4069  001ECC  0E00               	movlw	0
  4070  001ECE  6E02               	movwf	?__tdiv_to_l_+1,c
  4071  001ED0  0E00               	movlw	0
  4072  001ED2  6E03               	movwf	?__tdiv_to_l_+2,c
  4073  001ED4  0E00               	movlw	0
  4074  001ED6  6E04               	movwf	?__tdiv_to_l_+3,c
  4075  001ED8  D010               	goto	l725
  4076  001EDA                     l3496:
  4077  001EDA  90D8               	bcf	status,0,c
  4078  001EDC  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4079  001EDE  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4080  001EE0  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4081  001EE2  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4082  001EE4  060F               	decf	__tdiv_to_l_@exp1,f,c
  4083  001EE6                     l3498:
  4084  001EE6  660F               	tstfsz	__tdiv_to_l_@exp1,c
  4085  001EE8  D7F8               	goto	l3496
  4086  001EEA                     l734:
  4087  001EEA  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4088  001EEE  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4089  001EF2  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4090  001EF6  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4091  001EFA                     l725:
  4092  001EFA  0012               	return	
  4093  001EFC                     __end_of__tdiv_to_l_:
  4094                           	opt stack 0
  4095                           tblptru	equ	0xFF8
  4096                           tblptrh	equ	0xFF7
  4097                           tblptrl	equ	0xFF6
  4098                           tablat	equ	0xFF5
  4099                           prodh	equ	0xFF4
  4100                           prodl	equ	0xFF3
  4101                           wreg	equ	0xFE8
  4102                           indf2	equ	0xFDF
  4103                           postinc2	equ	0xFDE
  4104                           postdec2	equ	0xFDD
  4105                           fsr2h	equ	0xFDA
  4106                           fsr2l	equ	0xFD9
  4107                           status	equ	0xFD8
  4108                           
  4109 ;; *************** function __div_to_l_ *****************
  4110 ;; Defined at:
  4111 ;;		line 60 in file "/opt/microchip/xc8/v1.30/sources/common/fldivl.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  f1              3    0[COMRAM] unsigned long 
  4114 ;;  f2              3    3[COMRAM] unsigned long 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  quot            4   10[COMRAM] unsigned long 
  4117 ;;  exp1            1   15[COMRAM] unsigned char 
  4118 ;;  cntr            1   14[COMRAM] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  4    0[COMRAM] unsigned long 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4128 ;;      Params:         6       0       0       0       0       0       0       0       0
  4129 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4130 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4131 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4132 ;;Total ram usage:       16 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_sprintf
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text9
  4142  001CBE                     __ptext9:
  4143                           	opt stack 0
  4144  001CBE                     __div_to_l_:
  4145                           	opt stack 29
  4146                           
  4147                           ;incstack = 0
  4148  001CBE  C001  F007         	movff	__div_to_l_@f1,??__div_to_l_
  4149  001CC2  C002  F008         	movff	__div_to_l_@f1+1,??__div_to_l_+1
  4150  001CC6  C003  F009         	movff	__div_to_l_@f1+2,??__div_to_l_+2
  4151  001CCA  C004  F00A         	movff	__div_to_l_@f1+3,??__div_to_l_+3
  4152  001CCE  0E18               	movlw	24
  4153  001CD0  D005               	goto	u1740
  4154  001CD2                     u1745:
  4155  001CD2  90D8               	bcf	status,0,c
  4156  001CD4  320A               	rrcf	??__div_to_l_+3,f,c
  4157  001CD6  3209               	rrcf	??__div_to_l_+2,f,c
  4158  001CD8  3208               	rrcf	??__div_to_l_+1,f,c
  4159  001CDA  3207               	rrcf	??__div_to_l_,f,c
  4160  001CDC                     u1740:
  4161  001CDC  2EE8               	decfsz	wreg,f,c
  4162  001CDE  D7F9               	goto	u1745
  4163  001CE0  5007               	movf	??__div_to_l_,w,c
  4164  001CE2  6E10               	movwf	__div_to_l_@exp1,c
  4165  001CE4  6610               	tstfsz	__div_to_l_@exp1& (0+255),c
  4166  001CE6  D001               	goto	l3506
  4167  001CE8  D06D               	goto	u1810
  4168  001CEA                     l3506:
  4169  001CEA  C004  F007         	movff	__div_to_l_@f2,??__div_to_l_
  4170  001CEE  C005  F008         	movff	__div_to_l_@f2+1,??__div_to_l_+1
  4171  001CF2  C006  F009         	movff	__div_to_l_@f2+2,??__div_to_l_+2
  4172  001CF6  C007  F00A         	movff	__div_to_l_@f2+3,??__div_to_l_+3
  4173  001CFA  0E18               	movlw	24
  4174  001CFC  D005               	goto	u1760
  4175  001CFE                     u1765:
  4176  001CFE  90D8               	bcf	status,0,c
  4177  001D00  320A               	rrcf	??__div_to_l_+3,f,c
  4178  001D02  3209               	rrcf	??__div_to_l_+2,f,c
  4179  001D04  3208               	rrcf	??__div_to_l_+1,f,c
  4180  001D06  3207               	rrcf	??__div_to_l_,f,c
  4181  001D08                     u1760:
  4182  001D08  2EE8               	decfsz	wreg,f,c
  4183  001D0A  D7F9               	goto	u1765
  4184  001D0C  5007               	movf	??__div_to_l_,w,c
  4185  001D0E  6E0F               	movwf	__div_to_l_@cntr,c
  4186  001D10  660F               	tstfsz	__div_to_l_@cntr& (0+255),c
  4187  001D12  D001               	goto	l3512
  4188  001D14  D057               	goto	u1810
  4189  001D16                     l3512:
  4190  001D16  8E03               	bsf	__div_to_l_@f1+2,7,c
  4191  001D18  0EFF               	movlw	255
  4192  001D1A  1601               	andwf	__div_to_l_@f1,f,c
  4193  001D1C  0EFF               	movlw	255
  4194  001D1E  1602               	andwf	__div_to_l_@f1+1,f,c
  4195  001D20  0EFF               	movlw	255
  4196  001D22  1603               	andwf	__div_to_l_@f1+2,f,c
  4197  001D24  0E00               	movlw	0
  4198  001D26  1604               	andwf	__div_to_l_@f1+3,f,c
  4199  001D28  8E06               	bsf	__div_to_l_@f2+2,7,c
  4200  001D2A  0EFF               	movlw	255
  4201  001D2C  1604               	andwf	__div_to_l_@f2,f,c
  4202  001D2E  0EFF               	movlw	255
  4203  001D30  1605               	andwf	__div_to_l_@f2+1,f,c
  4204  001D32  0EFF               	movlw	255
  4205  001D34  1606               	andwf	__div_to_l_@f2+2,f,c
  4206  001D36  0E00               	movlw	0
  4207  001D38  1607               	andwf	__div_to_l_@f2+3,f,c
  4208  001D3A  0E00               	movlw	0
  4209  001D3C  6E0B               	movwf	__div_to_l_@quot,c
  4210  001D3E  0E00               	movlw	0
  4211  001D40  6E0C               	movwf	__div_to_l_@quot+1,c
  4212  001D42  0E00               	movlw	0
  4213  001D44  6E0D               	movwf	__div_to_l_@quot+2,c
  4214  001D46  0E00               	movlw	0
  4215  001D48  6E0E               	movwf	__div_to_l_@quot+3,c
  4216  001D4A  0E7F               	movlw	127
  4217  001D4C  5E10               	subwf	__div_to_l_@exp1,f,c
  4218  001D4E  500F               	movf	__div_to_l_@cntr,w,c
  4219  001D50  0FA0               	addlw	160
  4220  001D52  5E10               	subwf	__div_to_l_@exp1,f,c
  4221  001D54  6E07               	movwf	??__div_to_l_& (0+255),c
  4222  001D56  0E20               	movlw	32
  4223  001D58  6E0F               	movwf	__div_to_l_@cntr,c
  4224  001D5A  5007               	movf	??__div_to_l_& (0+255),w,c
  4225  001D5C                     l609:
  4226  001D5C  90D8               	bcf	status,0,c
  4227  001D5E  360B               	rlcf	__div_to_l_@quot,f,c
  4228  001D60  360C               	rlcf	__div_to_l_@quot+1,f,c
  4229  001D62  360D               	rlcf	__div_to_l_@quot+2,f,c
  4230  001D64  360E               	rlcf	__div_to_l_@quot+3,f,c
  4231  001D66  5004               	movf	__div_to_l_@f2,w,c
  4232  001D68  5C01               	subwf	__div_to_l_@f1,w,c
  4233  001D6A  5005               	movf	__div_to_l_@f2+1,w,c
  4234  001D6C  5802               	subwfb	__div_to_l_@f1+1,w,c
  4235  001D6E  5006               	movf	__div_to_l_@f2+2,w,c
  4236  001D70  5803               	subwfb	__div_to_l_@f1+2,w,c
  4237  001D72  5007               	movf	__div_to_l_@f2+3,w,c
  4238  001D74  5804               	subwfb	__div_to_l_@f1+3,w,c
  4239  001D76  A0D8               	btfss	status,0,c
  4240  001D78  D009               	goto	l3532
  4241  001D7A  5004               	movf	__div_to_l_@f2,w,c
  4242  001D7C  5E01               	subwf	__div_to_l_@f1,f,c
  4243  001D7E  5005               	movf	__div_to_l_@f2+1,w,c
  4244  001D80  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4245  001D82  5006               	movf	__div_to_l_@f2+2,w,c
  4246  001D84  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4247  001D86  5007               	movf	__div_to_l_@f2+3,w,c
  4248  001D88  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4249  001D8A  800B               	bsf	__div_to_l_@quot,0,c
  4250  001D8C                     l3532:
  4251  001D8C  90D8               	bcf	status,0,c
  4252  001D8E  3601               	rlcf	__div_to_l_@f1,f,c
  4253  001D90  3602               	rlcf	__div_to_l_@f1+1,f,c
  4254  001D92  3603               	rlcf	__div_to_l_@f1+2,f,c
  4255  001D94  3604               	rlcf	__div_to_l_@f1+3,f,c
  4256  001D96  2E0F               	decfsz	__div_to_l_@cntr,f,c
  4257  001D98  D7E1               	goto	l609
  4258  001D9A  AE10               	btfss	__div_to_l_@exp1,7,c
  4259  001D9C  D010               	goto	l3546
  4260  001D9E  5010               	movf	__div_to_l_@exp1,w,c
  4261  001DA0  0A80               	xorlw	128
  4262  001DA2  6E07               	movwf	??__div_to_l_& (0+255),c
  4263  001DA4  0EE1               	movlw	225
  4264  001DA6  0A80               	xorlw	128
  4265  001DA8  5C07               	subwf	??__div_to_l_,w,c
  4266  001DAA  A0D8               	btfss	status,0,c
  4267  001DAC  D00B               	goto	u1810
  4268  001DAE                     l3542:
  4269  001DAE  90D8               	bcf	status,0,c
  4270  001DB0  320E               	rrcf	__div_to_l_@quot+3,f,c
  4271  001DB2  320D               	rrcf	__div_to_l_@quot+2,f,c
  4272  001DB4  320C               	rrcf	__div_to_l_@quot+1,f,c
  4273  001DB6  320B               	rrcf	__div_to_l_@quot,f,c
  4274  001DB8  3E10               	incfsz	__div_to_l_@exp1,f,c
  4275  001DBA  D7F9               	goto	l3542
  4276  001DBC  D014               	goto	l616
  4277  001DBE                     l3546:
  4278  001DBE  0E1F               	movlw	31
  4279  001DC0  6410               	cpfsgt	__div_to_l_@exp1,c
  4280  001DC2  D00F               	goto	l3554
  4281  001DC4                     u1810:
  4282  001DC4  0E00               	movlw	0
  4283  001DC6  6E01               	movwf	?__div_to_l_,c
  4284  001DC8  0E00               	movlw	0
  4285  001DCA  6E02               	movwf	?__div_to_l_+1,c
  4286  001DCC  0E00               	movlw	0
  4287  001DCE  6E03               	movwf	?__div_to_l_+2,c
  4288  001DD0  0E00               	movlw	0
  4289  001DD2  6E04               	movwf	?__div_to_l_+3,c
  4290  001DD4  D010               	goto	l607
  4291  001DD6                     l3552:
  4292  001DD6  90D8               	bcf	status,0,c
  4293  001DD8  360B               	rlcf	__div_to_l_@quot,f,c
  4294  001DDA  360C               	rlcf	__div_to_l_@quot+1,f,c
  4295  001DDC  360D               	rlcf	__div_to_l_@quot+2,f,c
  4296  001DDE  360E               	rlcf	__div_to_l_@quot+3,f,c
  4297  001DE0  0610               	decf	__div_to_l_@exp1,f,c
  4298  001DE2                     l3554:
  4299  001DE2  6610               	tstfsz	__div_to_l_@exp1,c
  4300  001DE4  D7F8               	goto	l3552
  4301  001DE6                     l616:
  4302  001DE6  C00B  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4303  001DEA  C00C  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4304  001DEE  C00D  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4305  001DF2  C00E  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4306  001DF6                     l607:
  4307  001DF6  0012               	return	
  4308  001DF8                     __end_of__div_to_l_:
  4309                           	opt stack 0
  4310                           tblptru	equ	0xFF8
  4311                           tblptrh	equ	0xFF7
  4312                           tblptrl	equ	0xFF6
  4313                           tablat	equ	0xFF5
  4314                           prodh	equ	0xFF4
  4315                           prodl	equ	0xFF3
  4316                           wreg	equ	0xFE8
  4317                           indf2	equ	0xFDF
  4318                           postinc2	equ	0xFDE
  4319                           postdec2	equ	0xFDD
  4320                           fsr2h	equ	0xFDA
  4321                           fsr2l	equ	0xFD9
  4322                           status	equ	0xFD8
  4323                           
  4324 ;; *************** function ___lltoft *****************
  4325 ;; Defined at:
  4326 ;;		line 35 in file "/opt/microchip/xc8/v1.30/sources/common/lltoft.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  c               4    8[COMRAM] unsigned long 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  exp             1   16[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  3    8[COMRAM] float 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4340 ;;      Params:         4       0       0       0       0       0       0       0       0
  4341 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4342 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4343 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4344 ;;Total ram usage:        9 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    1
  4347 ;; This function calls:
  4348 ;;		___ftpack
  4349 ;; This function is called by:
  4350 ;;		_sprintf
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text10
  4355  0025B0                     __ptext10:
  4356                           	opt stack 0
  4357  0025B0                     ___lltoft:
  4358                           	opt stack 28
  4359                           
  4360                           ;incstack = 0
  4361  0025B0  6E0D               	movwf	??___lltoft& (0+255),c
  4362  0025B2  0E8E               	movlw	142
  4363  0025B4  6E11               	movwf	___lltoft@exp,c
  4364  0025B6  500D               	movf	??___lltoft& (0+255),w,c
  4365  0025B8  D006               	goto	l3914
  4366  0025BA                     l3912:
  4367  0025BA  90D8               	bcf	status,0,c
  4368  0025BC  320C               	rrcf	___lltoft@c+3,f,c
  4369  0025BE  320B               	rrcf	___lltoft@c+2,f,c
  4370  0025C0  320A               	rrcf	___lltoft@c+1,f,c
  4371  0025C2  3209               	rrcf	___lltoft@c,f,c
  4372  0025C4  2A11               	incf	___lltoft@exp,f,c
  4373  0025C6                     l3914:
  4374  0025C6  0E00               	movlw	0
  4375  0025C8  1409               	andwf	___lltoft@c,w,c
  4376  0025CA  6E0D               	movwf	??___lltoft& (0+255),c
  4377  0025CC  0E00               	movlw	0
  4378  0025CE  140A               	andwf	___lltoft@c+1,w,c
  4379  0025D0  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4380  0025D2  0E00               	movlw	0
  4381  0025D4  140B               	andwf	___lltoft@c+2,w,c
  4382  0025D6  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4383  0025D8  0EFF               	movlw	255
  4384  0025DA  140C               	andwf	___lltoft@c+3,w,c
  4385  0025DC  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4386  0025DE  5010               	movf	??___lltoft+3,w,c
  4387  0025E0  100D               	iorwf	??___lltoft,w,c
  4388  0025E2  100E               	iorwf	??___lltoft+1,w,c
  4389  0025E4  100F               	iorwf	??___lltoft+2,w,c
  4390  0025E6  A4D8               	btfss	status,2,c
  4391  0025E8  D7E8               	goto	l3912
  4392  0025EA  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4393  0025EE  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4394  0025F2  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4395  0025F6  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4396  0025FA  6E0D               	movwf	??___lltoft& (0+255),c
  4397  0025FC  0E00               	movlw	0
  4398  0025FE  6E05               	movwf	___ftpack@sign,c
  4399  002600  500D               	movf	??___lltoft& (0+255),w,c
  4400  002602  EC23  F011         	call	___ftpack	;wreg free
  4401  002606  C001  F009         	movff	?___ftpack,?___lltoft
  4402  00260A  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4403  00260E  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4404  002612  0012               	return	
  4405  002614                     __end_of___lltoft:
  4406                           	opt stack 0
  4407                           tblptru	equ	0xFF8
  4408                           tblptrh	equ	0xFF7
  4409                           tblptrl	equ	0xFF6
  4410                           tablat	equ	0xFF5
  4411                           prodh	equ	0xFF4
  4412                           prodl	equ	0xFF3
  4413                           wreg	equ	0xFE8
  4414                           indf2	equ	0xFDF
  4415                           postinc2	equ	0xFDE
  4416                           postdec2	equ	0xFDD
  4417                           fsr2h	equ	0xFDA
  4418                           fsr2l	equ	0xFD9
  4419                           status	equ	0xFD8
  4420                           
  4421 ;; *************** function ___llmod *****************
  4422 ;; Defined at:
  4423 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/llmod.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  dividend        4    0[COMRAM] unsigned long 
  4426 ;;  divisor         4    4[COMRAM] unsigned long 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  counter         1    9[COMRAM] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  4    0[COMRAM] unsigned long 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4438 ;;      Params:         8       0       0       0       0       0       0       0       0
  4439 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4440 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4441 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4442 ;;Total ram usage:       10 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_sprintf
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text11
  4452  002546                     __ptext11:
  4453                           	opt stack 0
  4454  002546                     ___llmod:
  4455                           	opt stack 29
  4456                           
  4457                           ;incstack = 0
  4458  002546  5008               	movf	___llmod@divisor+3,w,c
  4459  002548  1005               	iorwf	___llmod@divisor,w,c
  4460  00254A  1006               	iorwf	___llmod@divisor+1,w,c
  4461  00254C  1007               	iorwf	___llmod@divisor+2,w,c
  4462  00254E  B4D8               	btfsc	status,2,c
  4463  002550  D026               	goto	l823
  4464  002552  6E09               	movwf	??___llmod& (0+255),c
  4465  002554  0E01               	movlw	1
  4466  002556  6E0A               	movwf	___llmod@counter,c
  4467  002558  5009               	movf	??___llmod& (0+255),w,c
  4468  00255A  D006               	goto	l3676
  4469  00255C                     l3674:
  4470  00255C  90D8               	bcf	status,0,c
  4471  00255E  3605               	rlcf	___llmod@divisor,f,c
  4472  002560  3606               	rlcf	___llmod@divisor+1,f,c
  4473  002562  3607               	rlcf	___llmod@divisor+2,f,c
  4474  002564  3608               	rlcf	___llmod@divisor+3,f,c
  4475  002566  2A0A               	incf	___llmod@counter,f,c
  4476  002568                     l3676:
  4477  002568  AE08               	btfss	___llmod@divisor+3,7,c
  4478  00256A  D7F8               	goto	l3674
  4479  00256C                     l3678:
  4480  00256C  5005               	movf	___llmod@divisor,w,c
  4481  00256E  5C01               	subwf	___llmod@dividend,w,c
  4482  002570  5006               	movf	___llmod@divisor+1,w,c
  4483  002572  5802               	subwfb	___llmod@dividend+1,w,c
  4484  002574  5007               	movf	___llmod@divisor+2,w,c
  4485  002576  5803               	subwfb	___llmod@dividend+2,w,c
  4486  002578  5008               	movf	___llmod@divisor+3,w,c
  4487  00257A  5804               	subwfb	___llmod@dividend+3,w,c
  4488  00257C  A0D8               	btfss	status,0,c
  4489  00257E  D008               	goto	l3682
  4490  002580  5005               	movf	___llmod@divisor,w,c
  4491  002582  5E01               	subwf	___llmod@dividend,f,c
  4492  002584  5006               	movf	___llmod@divisor+1,w,c
  4493  002586  5A02               	subwfb	___llmod@dividend+1,f,c
  4494  002588  5007               	movf	___llmod@divisor+2,w,c
  4495  00258A  5A03               	subwfb	___llmod@dividend+2,f,c
  4496  00258C  5008               	movf	___llmod@divisor+3,w,c
  4497  00258E  5A04               	subwfb	___llmod@dividend+3,f,c
  4498  002590                     l3682:
  4499  002590  90D8               	bcf	status,0,c
  4500  002592  3208               	rrcf	___llmod@divisor+3,f,c
  4501  002594  3207               	rrcf	___llmod@divisor+2,f,c
  4502  002596  3206               	rrcf	___llmod@divisor+1,f,c
  4503  002598  3205               	rrcf	___llmod@divisor,f,c
  4504  00259A  2E0A               	decfsz	___llmod@counter,f,c
  4505  00259C  D7E7               	goto	l3678
  4506  00259E                     l823:
  4507  00259E  C001  F001         	movff	___llmod@dividend,?___llmod
  4508  0025A2  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4509  0025A6  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4510  0025AA  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4511  0025AE  0012               	return	
  4512  0025B0                     __end_of___llmod:
  4513                           	opt stack 0
  4514                           tblptru	equ	0xFF8
  4515                           tblptrh	equ	0xFF7
  4516                           tblptrl	equ	0xFF6
  4517                           tablat	equ	0xFF5
  4518                           prodh	equ	0xFF4
  4519                           prodl	equ	0xFF3
  4520                           wreg	equ	0xFE8
  4521                           indf2	equ	0xFDF
  4522                           postinc2	equ	0xFDE
  4523                           postdec2	equ	0xFDD
  4524                           fsr2h	equ	0xFDA
  4525                           fsr2l	equ	0xFD9
  4526                           status	equ	0xFD8
  4527                           
  4528 ;; *************** function ___lldiv *****************
  4529 ;; Defined at:
  4530 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/lldiv.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  dividend        4    0[COMRAM] unsigned long 
  4533 ;;  divisor         4    4[COMRAM] unsigned long 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  quotient        4    9[COMRAM] unsigned long 
  4536 ;;  counter         1   13[COMRAM] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  4    0[COMRAM] unsigned long 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4546 ;;      Params:         8       0       0       0       0       0       0       0       0
  4547 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4548 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4549 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4550 ;;Total ram usage:       14 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_sprintf
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text12
  4560  0024C0                     __ptext12:
  4561                           	opt stack 0
  4562  0024C0                     ___lldiv:
  4563                           	opt stack 29
  4564                           
  4565                           ;incstack = 0
  4566  0024C0  0E00               	movlw	0
  4567  0024C2  6E0A               	movwf	___lldiv@quotient,c
  4568  0024C4  0E00               	movlw	0
  4569  0024C6  6E0B               	movwf	___lldiv@quotient+1,c
  4570  0024C8  0E00               	movlw	0
  4571  0024CA  6E0C               	movwf	___lldiv@quotient+2,c
  4572  0024CC  0E00               	movlw	0
  4573  0024CE  6E0D               	movwf	___lldiv@quotient+3,c
  4574  0024D0  5008               	movf	___lldiv@divisor+3,w,c
  4575  0024D2  1005               	iorwf	___lldiv@divisor,w,c
  4576  0024D4  1006               	iorwf	___lldiv@divisor+1,w,c
  4577  0024D6  1007               	iorwf	___lldiv@divisor+2,w,c
  4578  0024D8  B4D8               	btfsc	status,2,c
  4579  0024DA  D02C               	goto	l813
  4580  0024DC  6E09               	movwf	??___lldiv& (0+255),c
  4581  0024DE  0E01               	movlw	1
  4582  0024E0  6E0E               	movwf	___lldiv@counter,c
  4583  0024E2  5009               	movf	??___lldiv& (0+255),w,c
  4584  0024E4  D006               	goto	l3656
  4585  0024E6                     l3654:
  4586  0024E6  90D8               	bcf	status,0,c
  4587  0024E8  3605               	rlcf	___lldiv@divisor,f,c
  4588  0024EA  3606               	rlcf	___lldiv@divisor+1,f,c
  4589  0024EC  3607               	rlcf	___lldiv@divisor+2,f,c
  4590  0024EE  3608               	rlcf	___lldiv@divisor+3,f,c
  4591  0024F0  2A0E               	incf	___lldiv@counter,f,c
  4592  0024F2                     l3656:
  4593  0024F2  AE08               	btfss	___lldiv@divisor+3,7,c
  4594  0024F4  D7F8               	goto	l3654
  4595  0024F6                     l3658:
  4596  0024F6  90D8               	bcf	status,0,c
  4597  0024F8  360A               	rlcf	___lldiv@quotient,f,c
  4598  0024FA  360B               	rlcf	___lldiv@quotient+1,f,c
  4599  0024FC  360C               	rlcf	___lldiv@quotient+2,f,c
  4600  0024FE  360D               	rlcf	___lldiv@quotient+3,f,c
  4601  002500  5005               	movf	___lldiv@divisor,w,c
  4602  002502  5C01               	subwf	___lldiv@dividend,w,c
  4603  002504  5006               	movf	___lldiv@divisor+1,w,c
  4604  002506  5802               	subwfb	___lldiv@dividend+1,w,c
  4605  002508  5007               	movf	___lldiv@divisor+2,w,c
  4606  00250A  5803               	subwfb	___lldiv@dividend+2,w,c
  4607  00250C  5008               	movf	___lldiv@divisor+3,w,c
  4608  00250E  5804               	subwfb	___lldiv@dividend+3,w,c
  4609  002510  A0D8               	btfss	status,0,c
  4610  002512  D009               	goto	l3666
  4611  002514  5005               	movf	___lldiv@divisor,w,c
  4612  002516  5E01               	subwf	___lldiv@dividend,f,c
  4613  002518  5006               	movf	___lldiv@divisor+1,w,c
  4614  00251A  5A02               	subwfb	___lldiv@dividend+1,f,c
  4615  00251C  5007               	movf	___lldiv@divisor+2,w,c
  4616  00251E  5A03               	subwfb	___lldiv@dividend+2,f,c
  4617  002520  5008               	movf	___lldiv@divisor+3,w,c
  4618  002522  5A04               	subwfb	___lldiv@dividend+3,f,c
  4619  002524  800A               	bsf	___lldiv@quotient,0,c
  4620  002526                     l3666:
  4621  002526  90D8               	bcf	status,0,c
  4622  002528  3208               	rrcf	___lldiv@divisor+3,f,c
  4623  00252A  3207               	rrcf	___lldiv@divisor+2,f,c
  4624  00252C  3206               	rrcf	___lldiv@divisor+1,f,c
  4625  00252E  3205               	rrcf	___lldiv@divisor,f,c
  4626  002530  2E0E               	decfsz	___lldiv@counter,f,c
  4627  002532  D7E1               	goto	l3658
  4628  002534                     l813:
  4629  002534  C00A  F001         	movff	___lldiv@quotient,?___lldiv
  4630  002538  C00B  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4631  00253C  C00C  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4632  002540  C00D  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4633  002544  0012               	return	
  4634  002546                     __end_of___lldiv:
  4635                           	opt stack 0
  4636                           tblptru	equ	0xFF8
  4637                           tblptrh	equ	0xFF7
  4638                           tblptrl	equ	0xFF6
  4639                           tablat	equ	0xFF5
  4640                           prodh	equ	0xFF4
  4641                           prodl	equ	0xFF3
  4642                           wreg	equ	0xFE8
  4643                           indf2	equ	0xFDF
  4644                           postinc2	equ	0xFDE
  4645                           postdec2	equ	0xFDD
  4646                           fsr2h	equ	0xFDA
  4647                           fsr2l	equ	0xFD9
  4648                           status	equ	0xFD8
  4649                           
  4650 ;; *************** function ___fttol *****************
  4651 ;; Defined at:
  4652 ;;		line 44 in file "/opt/microchip/xc8/v1.30/sources/common/fttol.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  f1              3   22[COMRAM] float 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  lval            4   32[COMRAM] unsigned long 
  4657 ;;  exp1            1   36[COMRAM] unsigned char 
  4658 ;;  sign1           1   31[COMRAM] unsigned char 
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  4   22[COMRAM] long 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2, status,0
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4668 ;;      Params:         4       0       0       0       0       0       0       0       0
  4669 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4670 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4671 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4672 ;;Total ram usage:       15 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_sprintf
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text13
  4682  0020C2                     __ptext13:
  4683                           	opt stack 0
  4684  0020C2                     ___fttol:
  4685                           	opt stack 29
  4686                           
  4687                           ;incstack = 0
  4688  0020C2  C019  F01B         	movff	___fttol@f1+2,??___fttol
  4689  0020C6  6A1C               	clrf	(??___fttol+1)& (0+255),c
  4690  0020C8  6A1D               	clrf	(??___fttol+2)& (0+255),c
  4691  0020CA  3418               	rlcf	___fttol@f1+1,w,c
  4692  0020CC  361B               	rlcf	??___fttol& (0+255),f,c
  4693  0020CE  E301               	bnc	u2391
  4694  0020D0  801C               	bsf	(??___fttol+1)& (0+255),0,c
  4695  0020D2                     u2391:
  4696  0020D2  501B               	movf	??___fttol,w,c
  4697  0020D4  6E25               	movwf	___fttol@exp1,c
  4698  0020D6  6625               	tstfsz	___fttol@exp1& (0+255),c
  4699  0020D8  D001               	goto	l3870
  4700  0020DA  D038               	goto	u2440
  4701  0020DC                     l3870:
  4702  0020DC  0E17               	movlw	23
  4703  0020DE  6E1B               	movwf	??___fttol& (0+255),c
  4704  0020E0  C017  F01C         	movff	___fttol@f1,??___fttol+1
  4705  0020E4  C018  F01D         	movff	___fttol@f1+1,??___fttol+2
  4706  0020E8  C019  F01E         	movff	___fttol@f1+2,??___fttol+3
  4707  0020EC  281B               	incf	??___fttol,w,c
  4708  0020EE  6E1F               	movwf	(??___fttol+4)& (0+255),c
  4709  0020F0  D004               	goto	u2410
  4710  0020F2                     u2415:
  4711  0020F2  90D8               	bcf	status,0,c
  4712  0020F4  321E               	rrcf	??___fttol+3,f,c
  4713  0020F6  321D               	rrcf	??___fttol+2,f,c
  4714  0020F8  321C               	rrcf	??___fttol+1,f,c
  4715  0020FA                     u2410:
  4716  0020FA  2E1F               	decfsz	(??___fttol+4)& (0+255),f,c
  4717  0020FC  D7FA               	goto	u2415
  4718  0020FE  501C               	movf	??___fttol+1,w,c
  4719  002100  6E20               	movwf	___fttol@sign1,c
  4720  002102  8E18               	bsf	___fttol@f1+1,7,c
  4721  002104  0EFF               	movlw	255
  4722  002106  1617               	andwf	___fttol@f1,f,c
  4723  002108  0EFF               	movlw	255
  4724  00210A  1618               	andwf	___fttol@f1+1,f,c
  4725  00210C  0E00               	movlw	0
  4726  00210E  1619               	andwf	___fttol@f1+2,f,c
  4727  002110  5017               	movf	___fttol@f1,w,c
  4728  002112  6E21               	movwf	___fttol@lval,c
  4729  002114  5018               	movf	___fttol@f1+1,w,c
  4730  002116  6E22               	movwf	___fttol@lval+1,c
  4731  002118  5019               	movf	___fttol@f1+2,w,c
  4732  00211A  6E23               	movwf	___fttol@lval+2,c
  4733  00211C  6A24               	clrf	___fttol@lval+3,c
  4734  00211E  0E8E               	movlw	142
  4735  002120  5E25               	subwf	___fttol@exp1,f,c
  4736  002122  AE25               	btfss	___fttol@exp1,7,c
  4737  002124  D010               	goto	l3892
  4738  002126  5025               	movf	___fttol@exp1,w,c
  4739  002128  0A80               	xorlw	128
  4740  00212A  6E1B               	movwf	??___fttol& (0+255),c
  4741  00212C  0EF1               	movlw	241
  4742  00212E  0A80               	xorlw	128
  4743  002130  5C1B               	subwf	??___fttol,w,c
  4744  002132  A0D8               	btfss	status,0,c
  4745  002134  D00B               	goto	u2440
  4746  002136                     l3888:
  4747  002136  90D8               	bcf	status,0,c
  4748  002138  3224               	rrcf	___fttol@lval+3,f,c
  4749  00213A  3223               	rrcf	___fttol@lval+2,f,c
  4750  00213C  3222               	rrcf	___fttol@lval+1,f,c
  4751  00213E  3221               	rrcf	___fttol@lval,f,c
  4752  002140  3E25               	incfsz	___fttol@exp1,f,c
  4753  002142  D7F9               	goto	l3888
  4754  002144  D014               	goto	l3902
  4755  002146                     l3892:
  4756  002146  0E17               	movlw	23
  4757  002148  6425               	cpfsgt	___fttol@exp1,c
  4758  00214A  D00F               	goto	l3900
  4759  00214C                     u2440:
  4760  00214C  0E00               	movlw	0
  4761  00214E  6E17               	movwf	?___fttol,c
  4762  002150  0E00               	movlw	0
  4763  002152  6E18               	movwf	?___fttol+1,c
  4764  002154  0E00               	movlw	0
  4765  002156  6E19               	movwf	?___fttol+2,c
  4766  002158  0E00               	movlw	0
  4767  00215A  6E1A               	movwf	?___fttol+3,c
  4768  00215C  D01B               	goto	l769
  4769  00215E                     l3898:
  4770  00215E  90D8               	bcf	status,0,c
  4771  002160  3621               	rlcf	___fttol@lval,f,c
  4772  002162  3622               	rlcf	___fttol@lval+1,f,c
  4773  002164  3623               	rlcf	___fttol@lval+2,f,c
  4774  002166  3624               	rlcf	___fttol@lval+3,f,c
  4775  002168  0625               	decf	___fttol@exp1,f,c
  4776  00216A                     l3900:
  4777  00216A  6625               	tstfsz	___fttol@exp1,c
  4778  00216C  D7F8               	goto	l3898
  4779  00216E                     l3902:
  4780  00216E  5020               	movf	___fttol@sign1,w,c
  4781  002170  B4D8               	btfsc	status,2,c
  4782  002172  D008               	goto	l3906
  4783  002174  1E24               	comf	___fttol@lval+3,f,c
  4784  002176  1E23               	comf	___fttol@lval+2,f,c
  4785  002178  1E22               	comf	___fttol@lval+1,f,c
  4786  00217A  6C21               	negf	___fttol@lval,c
  4787  00217C  0E00               	movlw	0
  4788  00217E  2222               	addwfc	___fttol@lval+1,f,c
  4789  002180  2223               	addwfc	___fttol@lval+2,f,c
  4790  002182  2224               	addwfc	___fttol@lval+3,f,c
  4791  002184                     l3906:
  4792  002184  C021  F017         	movff	___fttol@lval,?___fttol
  4793  002188  C022  F018         	movff	___fttol@lval+1,?___fttol+1
  4794  00218C  C023  F019         	movff	___fttol@lval+2,?___fttol+2
  4795  002190  C024  F01A         	movff	___fttol@lval+3,?___fttol+3
  4796  002194                     l769:
  4797  002194  0012               	return	
  4798  002196                     __end_of___fttol:
  4799                           	opt stack 0
  4800                           tblptru	equ	0xFF8
  4801                           tblptrh	equ	0xFF7
  4802                           tblptrl	equ	0xFF6
  4803                           tablat	equ	0xFF5
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           wreg	equ	0xFE8
  4807                           indf2	equ	0xFDF
  4808                           postinc2	equ	0xFDE
  4809                           postdec2	equ	0xFDD
  4810                           fsr2h	equ	0xFDA
  4811                           fsr2l	equ	0xFD9
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function ___ftneg *****************
  4815 ;; Defined at:
  4816 ;;		line 15 in file "/opt/microchip/xc8/v1.30/sources/common/ftneg.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  f1              3    0[COMRAM] float 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  3    0[COMRAM] float 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4830 ;;      Params:         3       0       0       0       0       0       0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4833 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4834 ;;Total ram usage:        3 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_sprintf
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text14
  4844  00298A                     __ptext14:
  4845                           	opt stack 0
  4846  00298A                     ___ftneg:
  4847                           	opt stack 29
  4848                           
  4849                           ;incstack = 0
  4850  00298A  0E7F               	movlw	127
  4851  00298C  1403               	andwf	___ftneg@f1+2,w,c
  4852  00298E  1002               	iorwf	___ftneg@f1+1,w,c
  4853  002990  1001               	iorwf	___ftneg@f1,w,c
  4854  002992  B4D8               	btfsc	status,2,c
  4855  002994  D006               	goto	l759
  4856  002996  0E00               	movlw	0
  4857  002998  1A01               	xorwf	___ftneg@f1,f,c
  4858  00299A  0E00               	movlw	0
  4859  00299C  1A02               	xorwf	___ftneg@f1+1,f,c
  4860  00299E  0E80               	movlw	128
  4861  0029A0  1A03               	xorwf	___ftneg@f1+2,f,c
  4862  0029A2                     l759:
  4863  0029A2  C001  F001         	movff	___ftneg@f1,?___ftneg
  4864  0029A6  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4865  0029AA  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4866  0029AE  0012               	return	
  4867  0029B0                     __end_of___ftneg:
  4868                           	opt stack 0
  4869                           tblptru	equ	0xFF8
  4870                           tblptrh	equ	0xFF7
  4871                           tblptrl	equ	0xFF6
  4872                           tablat	equ	0xFF5
  4873                           prodh	equ	0xFF4
  4874                           prodl	equ	0xFF3
  4875                           wreg	equ	0xFE8
  4876                           indf2	equ	0xFDF
  4877                           postinc2	equ	0xFDE
  4878                           postdec2	equ	0xFDD
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function ___ftge *****************
  4884 ;; Defined at:
  4885 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/ftge.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  ff1             3    0[COMRAM] float 
  4888 ;;  ff2             3    3[COMRAM] float 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;		None               void
  4893 ;; Registers used:
  4894 ;;		wreg, status,2, status,0
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4900 ;;      Params:         6       0       0       0       0       0       0       0       0
  4901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4902 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4903 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4904 ;;Total ram usage:        9 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_sprintf
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text15
  4914  002430                     __ptext15:
  4915                           	opt stack 0
  4916  002430                     ___ftge:
  4917                           	opt stack 29
  4918                           
  4919                           ;incstack = 0
  4920  002430  AE03               	btfss	___ftge@ff1+2,7,c
  4921  002432  D016               	goto	l3630
  4922  002434  C001  F007         	movff	___ftge@ff1,??___ftge
  4923  002438  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4924  00243C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4925  002440  1E07               	comf	??___ftge,f,c
  4926  002442  1E08               	comf	??___ftge+1,f,c
  4927  002444  1E09               	comf	??___ftge+2,f,c
  4928  002446  2A07               	incf	??___ftge,f,c
  4929  002448  0E00               	movlw	0
  4930  00244A  2208               	addwfc	??___ftge+1,f,c
  4931  00244C  2209               	addwfc	??___ftge+2,f,c
  4932  00244E  0E00               	movlw	0
  4933  002450  2407               	addwf	??___ftge,w,c
  4934  002452  6E01               	movwf	___ftge@ff1,c
  4935  002454  0E00               	movlw	0
  4936  002456  2008               	addwfc	??___ftge+1,w,c
  4937  002458  6E02               	movwf	___ftge@ff1+1,c
  4938  00245A  0E80               	movlw	128
  4939  00245C  2009               	addwfc	??___ftge+2,w,c
  4940  00245E  6E03               	movwf	___ftge@ff1+2,c
  4941  002460                     l3630:
  4942  002460  AE06               	btfss	___ftge@ff2+2,7,c
  4943  002462  D016               	goto	l3634
  4944  002464  C004  F007         	movff	___ftge@ff2,??___ftge
  4945  002468  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4946  00246C  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4947  002470  1E07               	comf	??___ftge,f,c
  4948  002472  1E08               	comf	??___ftge+1,f,c
  4949  002474  1E09               	comf	??___ftge+2,f,c
  4950  002476  2A07               	incf	??___ftge,f,c
  4951  002478  0E00               	movlw	0
  4952  00247A  2208               	addwfc	??___ftge+1,f,c
  4953  00247C  2209               	addwfc	??___ftge+2,f,c
  4954  00247E  0E00               	movlw	0
  4955  002480  2407               	addwf	??___ftge,w,c
  4956  002482  6E04               	movwf	___ftge@ff2,c
  4957  002484  0E00               	movlw	0
  4958  002486  2008               	addwfc	??___ftge+1,w,c
  4959  002488  6E05               	movwf	___ftge@ff2+1,c
  4960  00248A  0E80               	movlw	128
  4961  00248C  2009               	addwfc	??___ftge+2,w,c
  4962  00248E  6E06               	movwf	___ftge@ff2+2,c
  4963  002490                     l3634:
  4964  002490  0E00               	movlw	0
  4965  002492  1A01               	xorwf	___ftge@ff1,f,c
  4966  002494  0E00               	movlw	0
  4967  002496  1A02               	xorwf	___ftge@ff1+1,f,c
  4968  002498  0E80               	movlw	128
  4969  00249A  1A03               	xorwf	___ftge@ff1+2,f,c
  4970  00249C  0E00               	movlw	0
  4971  00249E  1A04               	xorwf	___ftge@ff2,f,c
  4972  0024A0  0E00               	movlw	0
  4973  0024A2  1A05               	xorwf	___ftge@ff2+1,f,c
  4974  0024A4  0E80               	movlw	128
  4975  0024A6  1A06               	xorwf	___ftge@ff2+2,f,c
  4976  0024A8  5004               	movf	___ftge@ff2,w,c
  4977  0024AA  5C01               	subwf	___ftge@ff1,w,c
  4978  0024AC  5005               	movf	___ftge@ff2+1,w,c
  4979  0024AE  5802               	subwfb	___ftge@ff1+1,w,c
  4980  0024B0  5006               	movf	___ftge@ff2+2,w,c
  4981  0024B2  5803               	subwfb	___ftge@ff1+2,w,c
  4982  0024B4  B0D8               	btfsc	status,0,c
  4983  0024B6  D002               	goto	l3640
  4984  0024B8  90D8               	bcf	status,0,c
  4985  0024BA  D001               	goto	l743
  4986  0024BC                     l3640:
  4987  0024BC  80D8               	bsf	status,0,c
  4988  0024BE                     l743:
  4989  0024BE  0012               	return	
  4990  0024C0                     __end_of___ftge:
  4991                           	opt stack 0
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           prodh	equ	0xFF4
  4997                           prodl	equ	0xFF3
  4998                           wreg	equ	0xFE8
  4999                           indf2	equ	0xFDF
  5000                           postinc2	equ	0xFDE
  5001                           postdec2	equ	0xFDD
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function ___asftsub *****************
  5007 ;; Defined at:
  5008 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/pic18/asftsub.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  f1p             2   26[COMRAM] PTR float 
  5011 ;;		 -> sprintf@fval(3), 
  5012 ;;  f2              3   28[COMRAM] float 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  3   26[COMRAM] float 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5024 ;;      Params:         5       0       0       0       0       0       0       0       0
  5025 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5027 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5028 ;;Total ram usage:        5 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    3
  5031 ;; This function calls:
  5032 ;;		___ftsub
  5033 ;; This function is called by:
  5034 ;;		_sprintf
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text16
  5039  0027AA                     __ptext16:
  5040                           	opt stack 0
  5041  0027AA                     ___asftsub:
  5042                           	opt stack 26
  5043                           
  5044                           ;	Return value of ___asftsub is never used
  5045                           
  5046                           ;incstack = 0
  5047  0027AA  C01B  FFD9         	movff	___asftsub@f1p,fsr2l
  5048  0027AE  C01C  FFDA         	movff	___asftsub@f1p+1,fsr2h
  5049  0027B2  CFDE F015          	movff	postinc2,___ftsub@f1
  5050  0027B6  CFDE F016          	movff	postinc2,___ftsub@f1+1
  5051  0027BA  CFDD F017          	movff	postdec2,___ftsub@f1+2
  5052  0027BE  C01D  F018         	movff	___asftsub@f2,___ftsub@f2
  5053  0027C2  C01E  F019         	movff	___asftsub@f2+1,___ftsub@f2+1
  5054  0027C6  C01F  F01A         	movff	___asftsub@f2+2,___ftsub@f2+2
  5055  0027CA  EC69  F014         	call	___ftsub	;wreg free
  5056  0027CE  C01B  FFD9         	movff	___asftsub@f1p,fsr2l
  5057  0027D2  C01C  FFDA         	movff	___asftsub@f1p+1,fsr2h
  5058  0027D6  C015  FFDE         	movff	?___ftsub,postinc2
  5059  0027DA  C016  FFDE         	movff	?___ftsub+1,postinc2
  5060  0027DE  C017  FFDD         	movff	?___ftsub+2,postdec2
  5061  0027E2  52DD               	movf	postdec2,f,c
  5062  0027E4  0012               	return	
  5063  0027E6                     __end_of___asftsub:
  5064                           	opt stack 0
  5065                           tblptru	equ	0xFF8
  5066                           tblptrh	equ	0xFF7
  5067                           tblptrl	equ	0xFF6
  5068                           tablat	equ	0xFF5
  5069                           prodh	equ	0xFF4
  5070                           prodl	equ	0xFF3
  5071                           wreg	equ	0xFE8
  5072                           indf2	equ	0xFDF
  5073                           postinc2	equ	0xFDE
  5074                           postdec2	equ	0xFDD
  5075                           fsr2h	equ	0xFDA
  5076                           fsr2l	equ	0xFD9
  5077                           status	equ	0xFD8
  5078                           
  5079 ;; *************** function ___ftsub *****************
  5080 ;; Defined at:
  5081 ;;		line 20 in file "/opt/microchip/xc8/v1.30/sources/common/ftsub.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  f1              3   20[COMRAM] float 
  5084 ;;  f2              3   23[COMRAM] float 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  3   20[COMRAM] float 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5096 ;;      Params:         6       0       0       0       0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5099 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5100 ;;Total ram usage:        6 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    2
  5103 ;; This function calls:
  5104 ;;		___ftadd
  5105 ;; This function is called by:
  5106 ;;		___asftsub
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text17
  5111  0028D2                     __ptext17:
  5112                           	opt stack 0
  5113  0028D2                     ___ftsub:
  5114                           	opt stack 26
  5115                           
  5116                           ;incstack = 0
  5117  0028D2  0E00               	movlw	0
  5118  0028D4  1A18               	xorwf	___ftsub@f2,f,c
  5119  0028D6  0E00               	movlw	0
  5120  0028D8  1A19               	xorwf	___ftsub@f2+1,f,c
  5121  0028DA  0E80               	movlw	128
  5122  0028DC  1A1A               	xorwf	___ftsub@f2+2,f,c
  5123  0028DE  C015  F009         	movff	___ftsub@f1,___ftadd@f1
  5124  0028E2  C016  F00A         	movff	___ftsub@f1+1,___ftadd@f1+1
  5125  0028E6  C017  F00B         	movff	___ftsub@f1+2,___ftadd@f1+2
  5126  0028EA  C018  F00C         	movff	___ftsub@f2,___ftadd@f2
  5127  0028EE  C019  F00D         	movff	___ftsub@f2+1,___ftadd@f2+1
  5128  0028F2  C01A  F00E         	movff	___ftsub@f2+2,___ftadd@f2+2
  5129  0028F6  ECB6  F00C         	call	___ftadd	;wreg free
  5130  0028FA  C009  F015         	movff	?___ftadd,?___ftsub
  5131  0028FE  C00A  F016         	movff	?___ftadd+1,?___ftsub+1
  5132  002902  C00B  F017         	movff	?___ftadd+2,?___ftsub+2
  5133  002906  0012               	return	
  5134  002908                     __end_of___ftsub:
  5135                           	opt stack 0
  5136                           tblptru	equ	0xFF8
  5137                           tblptrh	equ	0xFF7
  5138                           tblptrl	equ	0xFF6
  5139                           tablat	equ	0xFF5
  5140                           prodh	equ	0xFF4
  5141                           prodl	equ	0xFF3
  5142                           wreg	equ	0xFE8
  5143                           indf2	equ	0xFDF
  5144                           postinc2	equ	0xFDE
  5145                           postdec2	equ	0xFDD
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function ___asftmul *****************
  5151 ;; Defined at:
  5152 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/pic18/asftmul.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  f1p             2   52[COMRAM] PTR float 
  5155 ;;		 -> sprintf@integ(3), 
  5156 ;;  f2              3   54[COMRAM] float 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  3   52[COMRAM] float 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5168 ;;      Params:         5       0       0       0       0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5171 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5172 ;;Total ram usage:        5 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    2
  5175 ;; This function calls:
  5176 ;;		___ftmul
  5177 ;; This function is called by:
  5178 ;;		_sprintf
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text18
  5183  0027E6                     __ptext18:
  5184                           	opt stack 0
  5185  0027E6                     ___asftmul:
  5186                           	opt stack 27
  5187                           
  5188                           ;	Return value of ___asftmul is never used
  5189                           
  5190                           ;incstack = 0
  5191  0027E6  C035  FFD9         	movff	___asftmul@f1p,fsr2l
  5192  0027EA  C036  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5193  0027EE  CFDE F026          	movff	postinc2,___ftmul@f1
  5194  0027F2  CFDE F027          	movff	postinc2,___ftmul@f1+1
  5195  0027F6  CFDD F028          	movff	postdec2,___ftmul@f1+2
  5196  0027FA  C037  F029         	movff	___asftmul@f2,___ftmul@f2
  5197  0027FE  C038  F02A         	movff	___asftmul@f2+1,___ftmul@f2+1
  5198  002802  C039  F02B         	movff	___asftmul@f2+2,___ftmul@f2+2
  5199  002806  EC7E  F00F         	call	___ftmul	;wreg free
  5200  00280A  C035  FFD9         	movff	___asftmul@f1p,fsr2l
  5201  00280E  C036  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5202  002812  C026  FFDE         	movff	?___ftmul,postinc2
  5203  002816  C027  FFDE         	movff	?___ftmul+1,postinc2
  5204  00281A  C028  FFDD         	movff	?___ftmul+2,postdec2
  5205  00281E  52DD               	movf	postdec2,f,c
  5206  002820  0012               	return	
  5207  002822                     __end_of___asftmul:
  5208                           	opt stack 0
  5209                           tblptru	equ	0xFF8
  5210                           tblptrh	equ	0xFF7
  5211                           tblptrl	equ	0xFF6
  5212                           tablat	equ	0xFF5
  5213                           prodh	equ	0xFF4
  5214                           prodl	equ	0xFF3
  5215                           wreg	equ	0xFE8
  5216                           indf2	equ	0xFDF
  5217                           postinc2	equ	0xFDE
  5218                           postdec2	equ	0xFDD
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           
  5223 ;; *************** function ___ftmul *****************
  5224 ;; Defined at:
  5225 ;;		line 51 in file "/opt/microchip/xc8/v1.30/sources/common/ftmul.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  f1              3   37[COMRAM] float 
  5228 ;;  f2              3   40[COMRAM] float 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  f3_as_produc    3   47[COMRAM] unsigned um
  5231 ;;  sign            1   51[COMRAM] unsigned char 
  5232 ;;  cntr            1   50[COMRAM] unsigned char 
  5233 ;;  exp             1   46[COMRAM] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  3   37[COMRAM] float 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5243 ;;      Params:         6       0       0       0       0       0       0       0       0
  5244 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5245 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5246 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5247 ;;Total ram usage:       15 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    1
  5250 ;; This function calls:
  5251 ;;		___ftpack
  5252 ;; This function is called by:
  5253 ;;		_main
  5254 ;;		_fround
  5255 ;;		_scale
  5256 ;;		_sprintf
  5257 ;;		___asftmul
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text19
  5262  001EFC                     __ptext19:
  5263                           	opt stack 0
  5264  001EFC                     ___ftmul:
  5265                           	opt stack 27
  5266                           
  5267                           ;incstack = 0
  5268  001EFC  C028  F02C         	movff	___ftmul@f1+2,??___ftmul
  5269  001F00  6A2D               	clrf	(??___ftmul+1)& (0+255),c
  5270  001F02  6A2E               	clrf	(??___ftmul+2)& (0+255),c
  5271  001F04  3427               	rlcf	___ftmul@f1+1,w,c
  5272  001F06  362C               	rlcf	??___ftmul& (0+255),f,c
  5273  001F08  E301               	bnc	u2501
  5274  001F0A  802D               	bsf	(??___ftmul+1)& (0+255),0,c
  5275  001F0C                     u2501:
  5276  001F0C  502C               	movf	??___ftmul,w,c
  5277  001F0E  6E2F               	movwf	___ftmul@exp,c
  5278  001F10  662F               	tstfsz	___ftmul@exp& (0+255),c
  5279  001F12  D001               	goto	l4046
  5280  001F14  D00C               	goto	u2530
  5281  001F16                     l4046:
  5282  001F16  C02B  F02C         	movff	___ftmul@f2+2,??___ftmul
  5283  001F1A  6A2D               	clrf	(??___ftmul+1)& (0+255),c
  5284  001F1C  6A2E               	clrf	(??___ftmul+2)& (0+255),c
  5285  001F1E  342A               	rlcf	___ftmul@f2+1,w,c
  5286  001F20  362C               	rlcf	??___ftmul& (0+255),f,c
  5287  001F22  E301               	bnc	u2521
  5288  001F24  802D               	bsf	(??___ftmul+1)& (0+255),0,c
  5289  001F26                     u2521:
  5290  001F26  502C               	movf	??___ftmul,w,c
  5291  001F28  6E34               	movwf	___ftmul@sign,c
  5292  001F2A  6634               	tstfsz	___ftmul@sign& (0+255),c
  5293  001F2C  D007               	goto	l4052
  5294  001F2E                     u2530:
  5295  001F2E  0E00               	movlw	0
  5296  001F30  6E26               	movwf	?___ftmul,c
  5297  001F32  0E00               	movlw	0
  5298  001F34  6E27               	movwf	?___ftmul+1,c
  5299  001F36  0E00               	movlw	0
  5300  001F38  6E28               	movwf	?___ftmul+2,c
  5301  001F3A  D055               	goto	l749
  5302  001F3C                     l4052:
  5303  001F3C  5034               	movf	___ftmul@sign,w,c
  5304  001F3E  0F7B               	addlw	123
  5305  001F40  262F               	addwf	___ftmul@exp,f,c
  5306  001F42  C028  F034         	movff	___ftmul@f1+2,___ftmul@sign
  5307  001F46  502B               	movf	___ftmul@f2+2,w,c
  5308  001F48  1A34               	xorwf	___ftmul@sign,f,c
  5309  001F4A  0E80               	movlw	128
  5310  001F4C  1634               	andwf	___ftmul@sign,f,c
  5311  001F4E  8E27               	bsf	___ftmul@f1+1,7,c
  5312  001F50  8E2A               	bsf	___ftmul@f2+1,7,c
  5313  001F52  0EFF               	movlw	255
  5314  001F54  1629               	andwf	___ftmul@f2,f,c
  5315  001F56  0EFF               	movlw	255
  5316  001F58  162A               	andwf	___ftmul@f2+1,f,c
  5317  001F5A  0E00               	movlw	0
  5318  001F5C  162B               	andwf	___ftmul@f2+2,f,c
  5319  001F5E  0E00               	movlw	0
  5320  001F60  6E30               	movwf	___ftmul@f3_as_product,c
  5321  001F62  0E00               	movlw	0
  5322  001F64  6E31               	movwf	___ftmul@f3_as_product+1,c
  5323  001F66  0E00               	movlw	0
  5324  001F68  6E32               	movwf	___ftmul@f3_as_product+2,c
  5325  001F6A  6E2C               	movwf	??___ftmul& (0+255),c
  5326  001F6C  0E07               	movlw	7
  5327  001F6E  6E33               	movwf	___ftmul@cntr,c
  5328  001F70  502C               	movf	??___ftmul& (0+255),w,c
  5329  001F72                     l4066:
  5330  001F72  A026               	btfss	___ftmul@f1,0,c
  5331  001F74  D006               	goto	l4070
  5332  001F76  5029               	movf	___ftmul@f2,w,c
  5333  001F78  2630               	addwf	___ftmul@f3_as_product,f,c
  5334  001F7A  502A               	movf	___ftmul@f2+1,w,c
  5335  001F7C  2231               	addwfc	___ftmul@f3_as_product+1,f,c
  5336  001F7E  502B               	movf	___ftmul@f2+2,w,c
  5337  001F80  2232               	addwfc	___ftmul@f3_as_product+2,f,c
  5338  001F82                     l4070:
  5339  001F82  90D8               	bcf	status,0,c
  5340  001F84  3228               	rrcf	___ftmul@f1+2,f,c
  5341  001F86  3227               	rrcf	___ftmul@f1+1,f,c
  5342  001F88  3226               	rrcf	___ftmul@f1,f,c
  5343  001F8A  90D8               	bcf	status,0,c
  5344  001F8C  3629               	rlcf	___ftmul@f2,f,c
  5345  001F8E  362A               	rlcf	___ftmul@f2+1,f,c
  5346  001F90  362B               	rlcf	___ftmul@f2+2,f,c
  5347  001F92  2E33               	decfsz	___ftmul@cntr,f,c
  5348  001F94  D7EE               	goto	l4066
  5349  001F96  6E2C               	movwf	??___ftmul& (0+255),c
  5350  001F98  0E09               	movlw	9
  5351  001F9A  6E33               	movwf	___ftmul@cntr,c
  5352  001F9C  502C               	movf	??___ftmul& (0+255),w,c
  5353  001F9E                     l4076:
  5354  001F9E  A026               	btfss	___ftmul@f1,0,c
  5355  001FA0  D006               	goto	l4080
  5356  001FA2  5029               	movf	___ftmul@f2,w,c
  5357  001FA4  2630               	addwf	___ftmul@f3_as_product,f,c
  5358  001FA6  502A               	movf	___ftmul@f2+1,w,c
  5359  001FA8  2231               	addwfc	___ftmul@f3_as_product+1,f,c
  5360  001FAA  502B               	movf	___ftmul@f2+2,w,c
  5361  001FAC  2232               	addwfc	___ftmul@f3_as_product+2,f,c
  5362  001FAE                     l4080:
  5363  001FAE  90D8               	bcf	status,0,c
  5364  001FB0  3228               	rrcf	___ftmul@f1+2,f,c
  5365  001FB2  3227               	rrcf	___ftmul@f1+1,f,c
  5366  001FB4  3226               	rrcf	___ftmul@f1,f,c
  5367  001FB6  90D8               	bcf	status,0,c
  5368  001FB8  3232               	rrcf	___ftmul@f3_as_product+2,f,c
  5369  001FBA  3231               	rrcf	___ftmul@f3_as_product+1,f,c
  5370  001FBC  3230               	rrcf	___ftmul@f3_as_product,f,c
  5371  001FBE  2E33               	decfsz	___ftmul@cntr,f,c
  5372  001FC0  D7EE               	goto	l4076
  5373  001FC2  C030  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  5374  001FC6  C031  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5375  001FCA  C032  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5376  001FCE  C02F  F004         	movff	___ftmul@exp,___ftpack@exp
  5377  001FD2  C034  F005         	movff	___ftmul@sign,___ftpack@sign
  5378  001FD6  EC23  F011         	call	___ftpack	;wreg free
  5379  001FDA  C001  F026         	movff	?___ftpack,?___ftmul
  5380  001FDE  C002  F027         	movff	?___ftpack+1,?___ftmul+1
  5381  001FE2  C003  F028         	movff	?___ftpack+2,?___ftmul+2
  5382  001FE6                     l749:
  5383  001FE6  0012               	return	
  5384  001FE8                     __end_of___ftmul:
  5385                           	opt stack 0
  5386                           tblptru	equ	0xFF8
  5387                           tblptrh	equ	0xFF7
  5388                           tblptrl	equ	0xFF6
  5389                           tablat	equ	0xFF5
  5390                           prodh	equ	0xFF4
  5391                           prodl	equ	0xFF3
  5392                           wreg	equ	0xFE8
  5393                           indf2	equ	0xFDF
  5394                           postinc2	equ	0xFDE
  5395                           postdec2	equ	0xFDD
  5396                           fsr2h	equ	0xFDA
  5397                           fsr2l	equ	0xFD9
  5398                           status	equ	0xFD8
  5399                           
  5400 ;; *************** function ___asftadd *****************
  5401 ;; Defined at:
  5402 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/pic18/asftadd.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  f1p             2   62[COMRAM] PTR float 
  5405 ;;		 -> sprintf@fval(3), 
  5406 ;;  f2              3   64[COMRAM] float 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  3   62[COMRAM] float 
  5411 ;; Registers used:
  5412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:         5       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5421 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:        5 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    2
  5425 ;; This function calls:
  5426 ;;		___ftadd
  5427 ;; This function is called by:
  5428 ;;		_sprintf
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text20
  5433  002822                     __ptext20:
  5434                           	opt stack 0
  5435  002822                     ___asftadd:
  5436                           	opt stack 27
  5437                           
  5438                           ;	Return value of ___asftadd is never used
  5439                           
  5440                           ;incstack = 0
  5441  002822  C03F  FFD9         	movff	___asftadd@f1p,fsr2l
  5442  002826  C040  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5443  00282A  CFDE F009          	movff	postinc2,___ftadd@f1
  5444  00282E  CFDE F00A          	movff	postinc2,___ftadd@f1+1
  5445  002832  CFDD F00B          	movff	postdec2,___ftadd@f1+2
  5446  002836  C041  F00C         	movff	___asftadd@f2,___ftadd@f2
  5447  00283A  C042  F00D         	movff	___asftadd@f2+1,___ftadd@f2+1
  5448  00283E  C043  F00E         	movff	___asftadd@f2+2,___ftadd@f2+2
  5449  002842  ECB6  F00C         	call	___ftadd	;wreg free
  5450  002846  C03F  FFD9         	movff	___asftadd@f1p,fsr2l
  5451  00284A  C040  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5452  00284E  C009  FFDE         	movff	?___ftadd,postinc2
  5453  002852  C00A  FFDE         	movff	?___ftadd+1,postinc2
  5454  002856  C00B  FFDD         	movff	?___ftadd+2,postdec2
  5455  00285A  52DD               	movf	postdec2,f,c
  5456  00285C  0012               	return	
  5457  00285E                     __end_of___asftadd:
  5458                           	opt stack 0
  5459                           tblptru	equ	0xFF8
  5460                           tblptrh	equ	0xFF7
  5461                           tblptrl	equ	0xFF6
  5462                           tablat	equ	0xFF5
  5463                           prodh	equ	0xFF4
  5464                           prodl	equ	0xFF3
  5465                           wreg	equ	0xFE8
  5466                           indf2	equ	0xFDF
  5467                           postinc2	equ	0xFDE
  5468                           postdec2	equ	0xFDD
  5469                           fsr2h	equ	0xFDA
  5470                           fsr2l	equ	0xFD9
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function ___ftadd *****************
  5474 ;; Defined at:
  5475 ;;		line 86 in file "/opt/microchip/xc8/v1.30/sources/common/ftadd.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  f1              3    8[COMRAM] float 
  5478 ;;  f2              3   11[COMRAM] float 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  exp1            1   19[COMRAM] unsigned char 
  5481 ;;  exp2            1   18[COMRAM] unsigned char 
  5482 ;;  sign            1   17[COMRAM] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  3    8[COMRAM] float 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5492 ;;      Params:         6       0       0       0       0       0       0       0       0
  5493 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5494 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5495 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5496 ;;Total ram usage:       12 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    1
  5499 ;; This function calls:
  5500 ;;		___ftpack
  5501 ;; This function is called by:
  5502 ;;		___asftadd
  5503 ;;		___ftsub
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text21
  5508  00196C                     __ptext21:
  5509                           	opt stack 0
  5510  00196C                     ___ftadd:
  5511                           	opt stack 26
  5512                           
  5513                           ;incstack = 0
  5514  00196C  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  5515  001970  6A10               	clrf	(??___ftadd+1)& (0+255),c
  5516  001972  6A11               	clrf	(??___ftadd+2)& (0+255),c
  5517  001974  340A               	rlcf	___ftadd@f1+1,w,c
  5518  001976  360F               	rlcf	??___ftadd& (0+255),f,c
  5519  001978  E301               	bnc	u2071
  5520  00197A  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  5521  00197C                     u2071:
  5522  00197C  500F               	movf	??___ftadd,w,c
  5523  00197E  6E14               	movwf	___ftadd@exp1,c
  5524  001980  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  5525  001984  6A10               	clrf	(??___ftadd+1)& (0+255),c
  5526  001986  6A11               	clrf	(??___ftadd+2)& (0+255),c
  5527  001988  340D               	rlcf	___ftadd@f2+1,w,c
  5528  00198A  360F               	rlcf	??___ftadd& (0+255),f,c
  5529  00198C  E301               	bnc	u2081
  5530  00198E  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  5531  001990                     u2081:
  5532  001990  500F               	movf	??___ftadd,w,c
  5533  001992  6E13               	movwf	___ftadd@exp2,c
  5534  001994  5014               	movf	___ftadd@exp1,w,c
  5535  001996  B4D8               	btfsc	status,2,c
  5536  001998  D00C               	goto	l685
  5537  00199A  5013               	movf	___ftadd@exp2,w,c
  5538  00199C  5C14               	subwf	___ftadd@exp1,w,c
  5539  00199E  B0D8               	btfsc	status,0,c
  5540  0019A0  D00F               	goto	l3714
  5541  0019A2  5014               	movf	___ftadd@exp1,w,c
  5542  0019A4  0800               	sublw	0
  5543  0019A6  2413               	addwf	___ftadd@exp2,w,c
  5544  0019A8  6E0F               	movwf	??___ftadd& (0+255),c
  5545  0019AA  0E19               	movlw	25
  5546  0019AC  5C0F               	subwf	??___ftadd,w,c
  5547  0019AE  A0D8               	btfss	status,0,c
  5548  0019B0  D007               	goto	l3714
  5549  0019B2                     l685:
  5550  0019B2  C00C  F009         	movff	___ftadd@f2,?___ftadd
  5551  0019B6  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  5552  0019BA  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  5553  0019BE  D0B1               	goto	l686
  5554  0019C0                     l3714:
  5555  0019C0  5013               	movf	___ftadd@exp2,w,c
  5556  0019C2  B4D8               	btfsc	status,2,c
  5557  0019C4  D00C               	goto	l689
  5558  0019C6  5014               	movf	___ftadd@exp1,w,c
  5559  0019C8  5C13               	subwf	___ftadd@exp2,w,c
  5560  0019CA  B0D8               	btfsc	status,0,c
  5561  0019CC  D00F               	goto	l3720
  5562  0019CE  5013               	movf	___ftadd@exp2,w,c
  5563  0019D0  0800               	sublw	0
  5564  0019D2  2414               	addwf	___ftadd@exp1,w,c
  5565  0019D4  6E0F               	movwf	??___ftadd& (0+255),c
  5566  0019D6  0E19               	movlw	25
  5567  0019D8  5C0F               	subwf	??___ftadd,w,c
  5568  0019DA  A0D8               	btfss	status,0,c
  5569  0019DC  D007               	goto	l3720
  5570  0019DE                     l689:
  5571  0019DE  C009  F009         	movff	___ftadd@f1,?___ftadd
  5572  0019E2  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  5573  0019E6  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  5574  0019EA  D09B               	goto	l686
  5575  0019EC                     l3720:
  5576  0019EC  6E0F               	movwf	??___ftadd& (0+255),c
  5577  0019EE  0E06               	movlw	6
  5578  0019F0  6E12               	movwf	___ftadd@sign,c
  5579  0019F2  500F               	movf	??___ftadd& (0+255),w,c
  5580  0019F4  BE0B               	btfsc	___ftadd@f1+2,7,c
  5581  0019F6  8E12               	bsf	___ftadd@sign,7,c
  5582  0019F8  BE0E               	btfsc	___ftadd@f2+2,7,c
  5583  0019FA  8C12               	bsf	___ftadd@sign,6,c
  5584  0019FC  8E0A               	bsf	___ftadd@f1+1,7,c
  5585  0019FE  0EFF               	movlw	255
  5586  001A00  1609               	andwf	___ftadd@f1,f,c
  5587  001A02  0EFF               	movlw	255
  5588  001A04  160A               	andwf	___ftadd@f1+1,f,c
  5589  001A06  0E00               	movlw	0
  5590  001A08  160B               	andwf	___ftadd@f1+2,f,c
  5591  001A0A  8E0D               	bsf	___ftadd@f2+1,7,c
  5592  001A0C  0EFF               	movlw	255
  5593  001A0E  160C               	andwf	___ftadd@f2,f,c
  5594  001A10  0EFF               	movlw	255
  5595  001A12  160D               	andwf	___ftadd@f2+1,f,c
  5596  001A14  0E00               	movlw	0
  5597  001A16  160E               	andwf	___ftadd@f2+2,f,c
  5598  001A18  5013               	movf	___ftadd@exp2,w,c
  5599  001A1A  5C14               	subwf	___ftadd@exp1,w,c
  5600  001A1C  B0D8               	btfsc	status,0,c
  5601  001A1E  D01A               	goto	l3746
  5602  001A20                     l3736:
  5603  001A20  90D8               	bcf	status,0,c
  5604  001A22  360C               	rlcf	___ftadd@f2,f,c
  5605  001A24  360D               	rlcf	___ftadd@f2+1,f,c
  5606  001A26  360E               	rlcf	___ftadd@f2+2,f,c
  5607  001A28  0613               	decf	___ftadd@exp2,f,c
  5608  001A2A  5013               	movf	___ftadd@exp2,w,c
  5609  001A2C  1814               	xorwf	___ftadd@exp1,w,c
  5610  001A2E  B4D8               	btfsc	status,2,c
  5611  001A30  D00D               	goto	l3744
  5612  001A32  0612               	decf	___ftadd@sign,f,c
  5613  001A34  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5614  001A38  0E07               	movlw	7
  5615  001A3A  160F               	andwf	??___ftadd,f,c
  5616  001A3C  B4D8               	btfsc	status,2,c
  5617  001A3E  D006               	goto	l3744
  5618  001A40  D7EF               	goto	l3736
  5619  001A42                     l3742:
  5620  001A42  90D8               	bcf	status,0,c
  5621  001A44  320B               	rrcf	___ftadd@f1+2,f,c
  5622  001A46  320A               	rrcf	___ftadd@f1+1,f,c
  5623  001A48  3209               	rrcf	___ftadd@f1,f,c
  5624  001A4A  2A14               	incf	___ftadd@exp1,f,c
  5625  001A4C                     l3744:
  5626  001A4C  5013               	movf	___ftadd@exp2,w,c
  5627  001A4E  6214               	cpfseq	___ftadd@exp1,c
  5628  001A50  D7F8               	goto	l3742
  5629  001A52  D01D               	goto	l700
  5630  001A54                     l3746:
  5631  001A54  5014               	movf	___ftadd@exp1,w,c
  5632  001A56  5C13               	subwf	___ftadd@exp2,w,c
  5633  001A58  B0D8               	btfsc	status,0,c
  5634  001A5A  D019               	goto	l700
  5635  001A5C                     l3748:
  5636  001A5C  90D8               	bcf	status,0,c
  5637  001A5E  3609               	rlcf	___ftadd@f1,f,c
  5638  001A60  360A               	rlcf	___ftadd@f1+1,f,c
  5639  001A62  360B               	rlcf	___ftadd@f1+2,f,c
  5640  001A64  0614               	decf	___ftadd@exp1,f,c
  5641  001A66  5013               	movf	___ftadd@exp2,w,c
  5642  001A68  1814               	xorwf	___ftadd@exp1,w,c
  5643  001A6A  B4D8               	btfsc	status,2,c
  5644  001A6C  D00D               	goto	l3756
  5645  001A6E  0612               	decf	___ftadd@sign,f,c
  5646  001A70  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5647  001A74  0E07               	movlw	7
  5648  001A76  160F               	andwf	??___ftadd,f,c
  5649  001A78  B4D8               	btfsc	status,2,c
  5650  001A7A  D006               	goto	l3756
  5651  001A7C  D7EF               	goto	l3748
  5652  001A7E                     l3754:
  5653  001A7E  90D8               	bcf	status,0,c
  5654  001A80  320E               	rrcf	___ftadd@f2+2,f,c
  5655  001A82  320D               	rrcf	___ftadd@f2+1,f,c
  5656  001A84  320C               	rrcf	___ftadd@f2,f,c
  5657  001A86  2A13               	incf	___ftadd@exp2,f,c
  5658  001A88                     l3756:
  5659  001A88  5013               	movf	___ftadd@exp2,w,c
  5660  001A8A  6214               	cpfseq	___ftadd@exp1,c
  5661  001A8C  D7F8               	goto	l3754
  5662  001A8E                     l700:
  5663  001A8E  AE12               	btfss	___ftadd@sign,7,c
  5664  001A90  D00C               	goto	l709
  5665  001A92  0EFF               	movlw	255
  5666  001A94  1A09               	xorwf	___ftadd@f1,f,c
  5667  001A96  0EFF               	movlw	255
  5668  001A98  1A0A               	xorwf	___ftadd@f1+1,f,c
  5669  001A9A  0EFF               	movlw	255
  5670  001A9C  1A0B               	xorwf	___ftadd@f1+2,f,c
  5671  001A9E  0E01               	movlw	1
  5672  001AA0  2609               	addwf	___ftadd@f1,f,c
  5673  001AA2  0E00               	movlw	0
  5674  001AA4  220A               	addwfc	___ftadd@f1+1,f,c
  5675  001AA6  0E00               	movlw	0
  5676  001AA8  220B               	addwfc	___ftadd@f1+2,f,c
  5677  001AAA                     l709:
  5678  001AAA  AC12               	btfss	___ftadd@sign,6,c
  5679  001AAC  D00C               	goto	l3762
  5680  001AAE  0EFF               	movlw	255
  5681  001AB0  1A0C               	xorwf	___ftadd@f2,f,c
  5682  001AB2  0EFF               	movlw	255
  5683  001AB4  1A0D               	xorwf	___ftadd@f2+1,f,c
  5684  001AB6  0EFF               	movlw	255
  5685  001AB8  1A0E               	xorwf	___ftadd@f2+2,f,c
  5686  001ABA  0E01               	movlw	1
  5687  001ABC  260C               	addwf	___ftadd@f2,f,c
  5688  001ABE  0E00               	movlw	0
  5689  001AC0  220D               	addwfc	___ftadd@f2+1,f,c
  5690  001AC2  0E00               	movlw	0
  5691  001AC4  220E               	addwfc	___ftadd@f2+2,f,c
  5692  001AC6                     l3762:
  5693  001AC6  6E0F               	movwf	??___ftadd& (0+255),c
  5694  001AC8  0E00               	movlw	0
  5695  001ACA  6E12               	movwf	___ftadd@sign,c
  5696  001ACC  500F               	movf	??___ftadd& (0+255),w,c
  5697  001ACE  5009               	movf	___ftadd@f1,w,c
  5698  001AD0  260C               	addwf	___ftadd@f2,f,c
  5699  001AD2  500A               	movf	___ftadd@f1+1,w,c
  5700  001AD4  220D               	addwfc	___ftadd@f2+1,f,c
  5701  001AD6  500B               	movf	___ftadd@f1+2,w,c
  5702  001AD8  220E               	addwfc	___ftadd@f2+2,f,c
  5703  001ADA  AE0E               	btfss	___ftadd@f2+2,7,c
  5704  001ADC  D010               	goto	l3772
  5705  001ADE  0EFF               	movlw	255
  5706  001AE0  1A0C               	xorwf	___ftadd@f2,f,c
  5707  001AE2  0EFF               	movlw	255
  5708  001AE4  1A0D               	xorwf	___ftadd@f2+1,f,c
  5709  001AE6  0EFF               	movlw	255
  5710  001AE8  1A0E               	xorwf	___ftadd@f2+2,f,c
  5711  001AEA  0E01               	movlw	1
  5712  001AEC  260C               	addwf	___ftadd@f2,f,c
  5713  001AEE  0E00               	movlw	0
  5714  001AF0  220D               	addwfc	___ftadd@f2+1,f,c
  5715  001AF2  0E00               	movlw	0
  5716  001AF4  220E               	addwfc	___ftadd@f2+2,f,c
  5717  001AF6  6E0F               	movwf	??___ftadd& (0+255),c
  5718  001AF8  0E01               	movlw	1
  5719  001AFA  6E12               	movwf	___ftadd@sign,c
  5720  001AFC  500F               	movf	??___ftadd& (0+255),w,c
  5721  001AFE                     l3772:
  5722  001AFE  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  5723  001B02  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5724  001B06  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5725  001B0A  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  5726  001B0E  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  5727  001B12  EC23  F011         	call	___ftpack	;wreg free
  5728  001B16  C001  F009         	movff	?___ftpack,?___ftadd
  5729  001B1A  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  5730  001B1E  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  5731  001B22                     l686:
  5732  001B22  0012               	return	
  5733  001B24                     __end_of___ftadd:
  5734                           	opt stack 0
  5735                           tblptru	equ	0xFF8
  5736                           tblptrh	equ	0xFF7
  5737                           tblptrl	equ	0xFF6
  5738                           tablat	equ	0xFF5
  5739                           prodh	equ	0xFF4
  5740                           prodl	equ	0xFF3
  5741                           wreg	equ	0xFE8
  5742                           indf2	equ	0xFDF
  5743                           postinc2	equ	0xFDE
  5744                           postdec2	equ	0xFDD
  5745                           fsr2h	equ	0xFDA
  5746                           fsr2l	equ	0xFD9
  5747                           status	equ	0xFD8
  5748                           
  5749 ;; *************** function _setupMCU *****************
  5750 ;; Defined at:
  5751 ;;		line 45 in file "sensor_temp01_main.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		wreg, status,2
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5768 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5769 ;;Total ram usage:        0 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_main
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text22
  5779  0029D6                     __ptext22:
  5780                           	opt stack 0
  5781  0029D6                     _setupMCU:
  5782                           	opt stack 30
  5783                           
  5784                           ;sensor_temp01_main.c: 48: CMCONbits.CM2 = 1;
  5785                           
  5786                           ;incstack = 0
  5787  0029D6  84B4               	bsf	4020,2,c	;volatile
  5788                           
  5789                           ;sensor_temp01_main.c: 49: CMCONbits.CM1 = 1;
  5790  0029D8  82B4               	bsf	4020,1,c	;volatile
  5791                           
  5792                           ;sensor_temp01_main.c: 50: CMCONbits.CM0 = 1;
  5793  0029DA  80B4               	bsf	4020,0,c	;volatile
  5794                           
  5795                           ;sensor_temp01_main.c: 51: TRISB = 0;
  5796  0029DC  0E00               	movlw	0
  5797  0029DE  6E93               	movwf	3987,c	;volatile
  5798                           
  5799                           ;sensor_temp01_main.c: 52: TRISAbits.RA0 = 1;
  5800  0029E0  8092               	bsf	3986,0,c	;volatile
  5801                           
  5802                           ;sensor_temp01_main.c: 53: TRISAbits.RA1 = 1;
  5803  0029E2  8292               	bsf	3986,1,c	;volatile
  5804                           
  5805                           ;sensor_temp01_main.c: 54: TRISAbits.RA2 = 1;
  5806  0029E4  8492               	bsf	3986,2,c	;volatile
  5807                           
  5808                           ;sensor_temp01_main.c: 57: ADCON0 = 0b00000001;
  5809  0029E6  0E01               	movlw	1
  5810  0029E8  6EC2               	movwf	4034,c	;volatile
  5811                           
  5812                           ;sensor_temp01_main.c: 58: ADCON0bits.ADON = 1;
  5813  0029EA  80C2               	bsf	4034,0,c	;volatile
  5814                           
  5815                           ;sensor_temp01_main.c: 60: ADCON1 = 0b00001100;
  5816  0029EC  0E0C               	movlw	12
  5817  0029EE  6EC1               	movwf	4033,c	;volatile
  5818  0029F0  0012               	return	
  5819  0029F2                     __end_of_setupMCU:
  5820                           	opt stack 0
  5821                           tblptru	equ	0xFF8
  5822                           tblptrh	equ	0xFF7
  5823                           tblptrl	equ	0xFF6
  5824                           tablat	equ	0xFF5
  5825                           prodh	equ	0xFF4
  5826                           prodl	equ	0xFF3
  5827                           wreg	equ	0xFE8
  5828                           indf2	equ	0xFDF
  5829                           postinc2	equ	0xFDE
  5830                           postdec2	equ	0xFDD
  5831                           fsr2h	equ	0xFDA
  5832                           fsr2l	equ	0xFD9
  5833                           status	equ	0xFD8
  5834                           
  5835 ;; *************** function _putrsXLCD *****************
  5836 ;; Defined at:
  5837 ;;		line 16 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/putrxlcd.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  5840 ;;		 -> main@buffer(6), STR_2(2), STR_1(7), 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;		None               void
  5845 ;; Registers used:
  5846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5852 ;;      Params:         2       0       0       0       0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5855 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5856 ;;Total ram usage:        2 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    2
  5859 ;; This function calls:
  5860 ;;		_BusyXLCD
  5861 ;;		_WriteDataXLCD
  5862 ;; This function is called by:
  5863 ;;		_main
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text23
  5868  002674                     __ptext23:
  5869                           	opt stack 0
  5870  002674                     _putrsXLCD:
  5871                           	opt stack 28
  5872                           
  5873                           ;incstack = 0
  5874  002674  D019               	goto	l4162
  5875  002676                     l4156:
  5876  002676  EC4C  F014         	call	_BusyXLCD	;wreg free
  5877  00267A  0900               	iorlw	0
  5878  00267C  A4D8               	btfss	status,2,c
  5879  00267E  D7FB               	goto	l4156
  5880  002680  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  5881  002684  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  5882  002688  6AF8               	clrf	tblptru,c
  5883  00268A  0E07               	movlw	(high __ramtop+-1)
  5884  00268C  64F7               	cpfsgt	tblptrh,c
  5885  00268E  D003               	bra	u2647
  5886  002690  0008               	tblrd		*
  5887  002692  50F5               	movf	tablat,w,c
  5888  002694  D005               	bra	u2640
  5889  002696                     u2647:
  5890  002696  CFF6 FFE9          	movff	tblptrl,fsr0l
  5891  00269A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5892  00269E  50EF               	movf	indf0,w,c
  5893  0026A0                     u2640:
  5894  0026A0  EC95  F013         	call	_WriteDataXLCD
  5895  0026A4  4A02               	infsnz	putrsXLCD@buffer,f,c
  5896  0026A6  2A03               	incf	putrsXLCD@buffer+1,f,c
  5897  0026A8                     l4162:
  5898  0026A8  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  5899  0026AC  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  5900  0026B0  6AF8               	clrf	tblptru,c
  5901  0026B2  0E07               	movlw	(high __ramtop+-1)
  5902  0026B4  64F7               	cpfsgt	tblptrh,c
  5903  0026B6  D003               	bra	u2657
  5904  0026B8  0008               	tblrd		*
  5905  0026BA  50F5               	movf	tablat,w,c
  5906  0026BC  D005               	bra	u2650
  5907  0026BE                     u2657:
  5908  0026BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5909  0026C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5910  0026C6  50EF               	movf	indf0,w,c
  5911  0026C8                     u2650:
  5912  0026C8  0900               	iorlw	0
  5913  0026CA  B4D8               	btfsc	status,2,c
  5914  0026CC  0012               	return	
  5915  0026CE  D7D3               	goto	l4156
  5916  0026D0                     __end_of_putrsXLCD:
  5917                           	opt stack 0
  5918                           tblptru	equ	0xFF8
  5919                           tblptrh	equ	0xFF7
  5920                           tblptrl	equ	0xFF6
  5921                           tablat	equ	0xFF5
  5922                           prodh	equ	0xFF4
  5923                           prodl	equ	0xFF3
  5924                           indf0	equ	0xFEF
  5925                           fsr0h	equ	0xFEA
  5926                           fsr0l	equ	0xFE9
  5927                           wreg	equ	0xFE8
  5928                           indf2	equ	0xFDF
  5929                           postinc2	equ	0xFDE
  5930                           postdec2	equ	0xFDD
  5931                           fsr2h	equ	0xFDA
  5932                           fsr2l	equ	0xFD9
  5933                           status	equ	0xFD8
  5934                           
  5935 ;; *************** function _WriteDataXLCD *****************
  5936 ;; Defined at:
  5937 ;;		line 16 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/writdata.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  data            1    wreg     unsigned char 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  data            1    0[COMRAM] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;		None               void
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5951 ;;      Params:         0       0       0       0       0       0       0       0       0
  5952 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5954 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5955 ;;Total ram usage:        1 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    1
  5958 ;; This function calls:
  5959 ;;		_DelayFor18TCY
  5960 ;; This function is called by:
  5961 ;;		_putrsXLCD
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text24
  5966  00272A                     __ptext24:
  5967                           	opt stack 0
  5968  00272A                     _WriteDataXLCD:
  5969                           	opt stack 28
  5970                           
  5971                           ;incstack = 0
  5972                           ;WriteDataXLCD@data stored from wreg
  5973  00272A  CFE8 F001          	movff	wreg,WriteDataXLCD@data
  5974  00272E  0EF0               	movlw	240
  5975  002730  1693               	andwf	3987,f,c	;volatile
  5976  002732  0EF0               	movlw	240
  5977  002734  1681               	andwf	3969,f,c	;volatile
  5978  002736  3801               	swapf	WriteDataXLCD@data,w,c
  5979  002738  0B0F               	andlw	15
  5980  00273A  0B0F               	andlw	15
  5981  00273C  1281               	iorwf	3969,f,c	;volatile
  5982  00273E  8A8A               	bsf	3978,5,c	;volatile
  5983  002740  9C8A               	bcf	3978,6,c	;volatile
  5984  002742  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  5985  002746  888A               	bsf	3978,4,c	;volatile
  5986  002748  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  5987  00274C  988A               	bcf	3978,4,c	;volatile
  5988  00274E  0EF0               	movlw	240
  5989  002750  1681               	andwf	3969,f,c	;volatile
  5990  002752  5001               	movf	WriteDataXLCD@data,w,c
  5991  002754  0B0F               	andlw	15
  5992  002756  1281               	iorwf	3969,f,c	;volatile
  5993  002758  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  5994  00275C  888A               	bsf	3978,4,c	;volatile
  5995  00275E  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  5996  002762  988A               	bcf	3978,4,c	;volatile
  5997  002764  0E0F               	movlw	15
  5998  002766  1293               	iorwf	3987,f,c	;volatile
  5999  002768  0012               	return	
  6000  00276A                     __end_of_WriteDataXLCD:
  6001                           	opt stack 0
  6002                           tblptru	equ	0xFF8
  6003                           tblptrh	equ	0xFF7
  6004                           tblptrl	equ	0xFF6
  6005                           tablat	equ	0xFF5
  6006                           prodh	equ	0xFF4
  6007                           prodl	equ	0xFF3
  6008                           indf0	equ	0xFEF
  6009                           fsr0h	equ	0xFEA
  6010                           fsr0l	equ	0xFE9
  6011                           wreg	equ	0xFE8
  6012                           indf2	equ	0xFDF
  6013                           postinc2	equ	0xFDE
  6014                           postdec2	equ	0xFDD
  6015                           fsr2h	equ	0xFDA
  6016                           fsr2l	equ	0xFD9
  6017                           status	equ	0xFD8
  6018                           
  6019 ;; *************** function ___lwtoft *****************
  6020 ;; Defined at:
  6021 ;;		line 28 in file "/opt/microchip/xc8/v1.30/sources/common/lwtoft.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  c               2    8[COMRAM] unsigned int 
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;		None
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  3    8[COMRAM] float 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2, status,0, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6035 ;;      Params:         3       0       0       0       0       0       0       0       0
  6036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6037 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6038 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6039 ;;Total ram usage:        5 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    1
  6042 ;; This function calls:
  6043 ;;		___ftpack
  6044 ;; This function is called by:
  6045 ;;		_main
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text25
  6050  002908                     __ptext25:
  6051                           	opt stack 0
  6052  002908                     ___lwtoft:
  6053                           	opt stack 29
  6054                           
  6055                           ;incstack = 0
  6056  002908  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  6057  00290C  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  6058  002910  6A03               	clrf	___ftpack@arg+2,c
  6059  002912  6E0C               	movwf	??___lwtoft& (0+255),c
  6060  002914  0E8E               	movlw	142
  6061  002916  6E04               	movwf	___ftpack@exp,c
  6062  002918  500C               	movf	??___lwtoft& (0+255),w,c
  6063  00291A  6E0D               	movwf	(??___lwtoft+1)& (0+255),c
  6064  00291C  0E00               	movlw	0
  6065  00291E  6E05               	movwf	___ftpack@sign,c
  6066  002920  500D               	movf	(??___lwtoft+1)& (0+255),w,c
  6067  002922  EC23  F011         	call	___ftpack	;wreg free
  6068  002926  C001  F009         	movff	?___ftpack,?___lwtoft
  6069  00292A  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  6070  00292E  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  6071  002932  0012               	return	
  6072  002934                     __end_of___lwtoft:
  6073                           	opt stack 0
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           prodh	equ	0xFF4
  6079                           prodl	equ	0xFF3
  6080                           indf0	equ	0xFEF
  6081                           fsr0h	equ	0xFEA
  6082                           fsr0l	equ	0xFE9
  6083                           wreg	equ	0xFE8
  6084                           indf2	equ	0xFDF
  6085                           postinc2	equ	0xFDE
  6086                           postdec2	equ	0xFDD
  6087                           fsr2h	equ	0xFDA
  6088                           fsr2l	equ	0xFD9
  6089                           status	equ	0xFD8
  6090                           
  6091 ;; *************** function ___ftpack *****************
  6092 ;; Defined at:
  6093 ;;		line 62 in file "/opt/microchip/xc8/v1.30/sources/common/float.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  arg             3    0[COMRAM] unsigned um
  6096 ;;  exp             1    3[COMRAM] unsigned char 
  6097 ;;  sign            1    4[COMRAM] unsigned char 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  3    0[COMRAM] float 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6109 ;;      Params:         5       0       0       0       0       0       0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6111 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6112 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6113 ;;Total ram usage:        8 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		___ftadd
  6119 ;;		___ftdiv
  6120 ;;		___ftmul
  6121 ;;		___lltoft
  6122 ;;		___lwtoft
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text26
  6127  002246                     __ptext26:
  6128                           	opt stack 0
  6129  002246                     ___ftpack:
  6130                           	opt stack 27
  6131                           
  6132                           ;incstack = 0
  6133  002246  5004               	movf	___ftpack@exp,w,c
  6134  002248  B4D8               	btfsc	status,2,c
  6135  00224A  D005               	goto	l3560
  6136  00224C  5001               	movf	___ftpack@arg,w,c
  6137  00224E  1002               	iorwf	___ftpack@arg+1,w,c
  6138  002250  1003               	iorwf	___ftpack@arg+2,w,c
  6139  002252  A4D8               	btfss	status,2,c
  6140  002254  D00C               	goto	l3566
  6141  002256                     l3560:
  6142  002256  0E00               	movlw	0
  6143  002258  6E01               	movwf	?___ftpack,c
  6144  00225A  0E00               	movlw	0
  6145  00225C  6E02               	movwf	?___ftpack+1,c
  6146  00225E  0E00               	movlw	0
  6147  002260  6E03               	movwf	?___ftpack+2,c
  6148  002262  D044               	goto	l648
  6149  002264                     l3564:
  6150  002264  2A04               	incf	___ftpack@exp,f,c
  6151  002266  90D8               	bcf	status,0,c
  6152  002268  3203               	rrcf	___ftpack@arg+2,f,c
  6153  00226A  3202               	rrcf	___ftpack@arg+1,f,c
  6154  00226C  3201               	rrcf	___ftpack@arg,f,c
  6155  00226E                     l3566:
  6156  00226E  0E00               	movlw	0
  6157  002270  1401               	andwf	___ftpack@arg,w,c
  6158  002272  6E06               	movwf	??___ftpack& (0+255),c
  6159  002274  0E00               	movlw	0
  6160  002276  1402               	andwf	___ftpack@arg+1,w,c
  6161  002278  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6162  00227A  0EFE               	movlw	254
  6163  00227C  1403               	andwf	___ftpack@arg+2,w,c
  6164  00227E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6165  002280  5006               	movf	??___ftpack,w,c
  6166  002282  1007               	iorwf	??___ftpack+1,w,c
  6167  002284  1008               	iorwf	??___ftpack+2,w,c
  6168  002286  B4D8               	btfsc	status,2,c
  6169  002288  D00C               	goto	l3572
  6170  00228A  D7EC               	goto	l3564
  6171  00228C                     l3568:
  6172  00228C  2A04               	incf	___ftpack@exp,f,c
  6173  00228E  0E01               	movlw	1
  6174  002290  2601               	addwf	___ftpack@arg,f,c
  6175  002292  0E00               	movlw	0
  6176  002294  2202               	addwfc	___ftpack@arg+1,f,c
  6177  002296  0E00               	movlw	0
  6178  002298  2203               	addwfc	___ftpack@arg+2,f,c
  6179  00229A  90D8               	bcf	status,0,c
  6180  00229C  3203               	rrcf	___ftpack@arg+2,f,c
  6181  00229E  3202               	rrcf	___ftpack@arg+1,f,c
  6182  0022A0  3201               	rrcf	___ftpack@arg,f,c
  6183  0022A2                     l3572:
  6184  0022A2  0E00               	movlw	0
  6185  0022A4  1401               	andwf	___ftpack@arg,w,c
  6186  0022A6  6E06               	movwf	??___ftpack& (0+255),c
  6187  0022A8  0E00               	movlw	0
  6188  0022AA  1402               	andwf	___ftpack@arg+1,w,c
  6189  0022AC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6190  0022AE  0EFF               	movlw	255
  6191  0022B0  1403               	andwf	___ftpack@arg+2,w,c
  6192  0022B2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6193  0022B4  5006               	movf	??___ftpack,w,c
  6194  0022B6  1007               	iorwf	??___ftpack+1,w,c
  6195  0022B8  1008               	iorwf	??___ftpack+2,w,c
  6196  0022BA  B4D8               	btfsc	status,2,c
  6197  0022BC  D006               	goto	l3576
  6198  0022BE  D7E6               	goto	l3568
  6199  0022C0                     l3574:
  6200  0022C0  0604               	decf	___ftpack@exp,f,c
  6201  0022C2  90D8               	bcf	status,0,c
  6202  0022C4  3601               	rlcf	___ftpack@arg,f,c
  6203  0022C6  3602               	rlcf	___ftpack@arg+1,f,c
  6204  0022C8  3603               	rlcf	___ftpack@arg+2,f,c
  6205  0022CA                     l3576:
  6206  0022CA  AE02               	btfss	___ftpack@arg+1,7,c
  6207  0022CC  D7F9               	goto	l3574
  6208  0022CE  A004               	btfss	___ftpack@exp,0,c
  6209  0022D0  9E02               	bcf	___ftpack@arg+1,7,c
  6210  0022D2  90D8               	bcf	status,0,c
  6211  0022D4  3204               	rrcf	___ftpack@exp,f,c
  6212  0022D6  5004               	movf	___ftpack@exp,w,c
  6213  0022D8  1203               	iorwf	___ftpack@arg+2,f,c
  6214  0022DA  5005               	movf	___ftpack@sign,w,c
  6215  0022DC  A4D8               	btfss	status,2,c
  6216  0022DE  8E03               	bsf	___ftpack@arg+2,7,c
  6217  0022E0  C001  F001         	movff	___ftpack@arg,?___ftpack
  6218  0022E4  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6219  0022E8  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6220  0022EC                     l648:
  6221  0022EC  0012               	return	
  6222  0022EE                     __end_of___ftpack:
  6223                           	opt stack 0
  6224                           tblptru	equ	0xFF8
  6225                           tblptrh	equ	0xFF7
  6226                           tblptrl	equ	0xFF6
  6227                           tablat	equ	0xFF5
  6228                           prodh	equ	0xFF4
  6229                           prodl	equ	0xFF3
  6230                           indf0	equ	0xFEF
  6231                           fsr0h	equ	0xFEA
  6232                           fsr0l	equ	0xFE9
  6233                           wreg	equ	0xFE8
  6234                           indf2	equ	0xFDF
  6235                           postinc2	equ	0xFDE
  6236                           postdec2	equ	0xFDD
  6237                           fsr2h	equ	0xFDA
  6238                           fsr2l	equ	0xFD9
  6239                           status	equ	0xFD8
  6240                           
  6241 ;; *************** function ___ftdiv *****************
  6242 ;; Defined at:
  6243 ;;		line 49 in file "/opt/microchip/xc8/v1.30/sources/common/ftdiv.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  f1              3   52[COMRAM] float 
  6246 ;;  f2              3   55[COMRAM] float 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  f3              3   62[COMRAM] float 
  6249 ;;  sign            1   66[COMRAM] unsigned char 
  6250 ;;  exp             1   65[COMRAM] unsigned char 
  6251 ;;  cntr            1   61[COMRAM] unsigned char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  3   52[COMRAM] float 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6261 ;;      Params:         6       0       0       0       0       0       0       0       0
  6262 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6263 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6264 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6265 ;;Total ram usage:       15 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    1
  6268 ;; This function calls:
  6269 ;;		___ftpack
  6270 ;; This function is called by:
  6271 ;;		_main
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text27
  6276  001FE8                     __ptext27:
  6277                           	opt stack 0
  6278  001FE8                     ___ftdiv:
  6279                           	opt stack 29
  6280                           
  6281                           ;incstack = 0
  6282  001FE8  C037  F03B         	movff	___ftdiv@f1+2,??___ftdiv
  6283  001FEC  6A3C               	clrf	(??___ftdiv+1)& (0+255),c
  6284  001FEE  6A3D               	clrf	(??___ftdiv+2)& (0+255),c
  6285  001FF0  3436               	rlcf	___ftdiv@f1+1,w,c
  6286  001FF2  363B               	rlcf	??___ftdiv& (0+255),f,c
  6287  001FF4  E301               	bnc	u2281
  6288  001FF6  803C               	bsf	(??___ftdiv+1)& (0+255),0,c
  6289  001FF8                     u2281:
  6290  001FF8  503B               	movf	??___ftdiv,w,c
  6291  001FFA  6E42               	movwf	___ftdiv@exp,c
  6292  001FFC  6642               	tstfsz	___ftdiv@exp& (0+255),c
  6293  001FFE  D001               	goto	l3782
  6294  002000  D00C               	goto	u2310
  6295  002002                     l3782:
  6296  002002  C03A  F03B         	movff	___ftdiv@f2+2,??___ftdiv
  6297  002006  6A3C               	clrf	(??___ftdiv+1)& (0+255),c
  6298  002008  6A3D               	clrf	(??___ftdiv+2)& (0+255),c
  6299  00200A  3439               	rlcf	___ftdiv@f2+1,w,c
  6300  00200C  363B               	rlcf	??___ftdiv& (0+255),f,c
  6301  00200E  E301               	bnc	u2301
  6302  002010  803C               	bsf	(??___ftdiv+1)& (0+255),0,c
  6303  002012                     u2301:
  6304  002012  503B               	movf	??___ftdiv,w,c
  6305  002014  6E43               	movwf	___ftdiv@sign,c
  6306  002016  6643               	tstfsz	___ftdiv@sign& (0+255),c
  6307  002018  D007               	goto	l3788
  6308  00201A                     u2310:
  6309  00201A  0E00               	movlw	0
  6310  00201C  6E35               	movwf	?___ftdiv,c
  6311  00201E  0E00               	movlw	0
  6312  002020  6E36               	movwf	?___ftdiv+1,c
  6313  002022  0E00               	movlw	0
  6314  002024  6E37               	movwf	?___ftdiv+2,c
  6315  002026  D04C               	goto	l717
  6316  002028                     l3788:
  6317  002028  0E00               	movlw	0
  6318  00202A  6E3F               	movwf	___ftdiv@f3,c
  6319  00202C  0E00               	movlw	0
  6320  00202E  6E40               	movwf	___ftdiv@f3+1,c
  6321  002030  0E00               	movlw	0
  6322  002032  6E41               	movwf	___ftdiv@f3+2,c
  6323  002034  5043               	movf	___ftdiv@sign,w,c
  6324  002036  0F89               	addlw	137
  6325  002038  5E42               	subwf	___ftdiv@exp,f,c
  6326  00203A  C037  F043         	movff	___ftdiv@f1+2,___ftdiv@sign
  6327  00203E  503A               	movf	___ftdiv@f2+2,w,c
  6328  002040  1A43               	xorwf	___ftdiv@sign,f,c
  6329  002042  0E80               	movlw	128
  6330  002044  1643               	andwf	___ftdiv@sign,f,c
  6331  002046  8E36               	bsf	___ftdiv@f1+1,7,c
  6332  002048  0EFF               	movlw	255
  6333  00204A  1635               	andwf	___ftdiv@f1,f,c
  6334  00204C  0EFF               	movlw	255
  6335  00204E  1636               	andwf	___ftdiv@f1+1,f,c
  6336  002050  0E00               	movlw	0
  6337  002052  1637               	andwf	___ftdiv@f1+2,f,c
  6338  002054  8E39               	bsf	___ftdiv@f2+1,7,c
  6339  002056  0EFF               	movlw	255
  6340  002058  1638               	andwf	___ftdiv@f2,f,c
  6341  00205A  0EFF               	movlw	255
  6342  00205C  1639               	andwf	___ftdiv@f2+1,f,c
  6343  00205E  0E00               	movlw	0
  6344  002060  163A               	andwf	___ftdiv@f2+2,f,c
  6345  002062  6E3B               	movwf	??___ftdiv& (0+255),c
  6346  002064  0E18               	movlw	24
  6347  002066  6E3E               	movwf	___ftdiv@cntr,c
  6348  002068  503B               	movf	??___ftdiv& (0+255),w,c
  6349  00206A                     l719:
  6350  00206A  90D8               	bcf	status,0,c
  6351  00206C  363F               	rlcf	___ftdiv@f3,f,c
  6352  00206E  3640               	rlcf	___ftdiv@f3+1,f,c
  6353  002070  3641               	rlcf	___ftdiv@f3+2,f,c
  6354  002072  5038               	movf	___ftdiv@f2,w,c
  6355  002074  5C35               	subwf	___ftdiv@f1,w,c
  6356  002076  5039               	movf	___ftdiv@f2+1,w,c
  6357  002078  5836               	subwfb	___ftdiv@f1+1,w,c
  6358  00207A  503A               	movf	___ftdiv@f2+2,w,c
  6359  00207C  5837               	subwfb	___ftdiv@f1+2,w,c
  6360  00207E  A0D8               	btfss	status,0,c
  6361  002080  D007               	goto	l720
  6362  002082  5038               	movf	___ftdiv@f2,w,c
  6363  002084  5E35               	subwf	___ftdiv@f1,f,c
  6364  002086  5039               	movf	___ftdiv@f2+1,w,c
  6365  002088  5A36               	subwfb	___ftdiv@f1+1,f,c
  6366  00208A  503A               	movf	___ftdiv@f2+2,w,c
  6367  00208C  5A37               	subwfb	___ftdiv@f1+2,f,c
  6368  00208E  803F               	bsf	___ftdiv@f3,0,c
  6369  002090                     l720:
  6370  002090  90D8               	bcf	status,0,c
  6371  002092  3635               	rlcf	___ftdiv@f1,f,c
  6372  002094  3636               	rlcf	___ftdiv@f1+1,f,c
  6373  002096  3637               	rlcf	___ftdiv@f1+2,f,c
  6374  002098  2E3E               	decfsz	___ftdiv@cntr,f,c
  6375  00209A  D7E7               	goto	l719
  6376  00209C  C03F  F001         	movff	___ftdiv@f3,___ftpack@arg
  6377  0020A0  C040  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6378  0020A4  C041  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6379  0020A8  C042  F004         	movff	___ftdiv@exp,___ftpack@exp
  6380  0020AC  C043  F005         	movff	___ftdiv@sign,___ftpack@sign
  6381  0020B0  EC23  F011         	call	___ftpack	;wreg free
  6382  0020B4  C001  F035         	movff	?___ftpack,?___ftdiv
  6383  0020B8  C002  F036         	movff	?___ftpack+1,?___ftdiv+1
  6384  0020BC  C003  F037         	movff	?___ftpack+2,?___ftdiv+2
  6385  0020C0                     l717:
  6386  0020C0  0012               	return	
  6387  0020C2                     __end_of___ftdiv:
  6388                           	opt stack 0
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           indf0	equ	0xFEF
  6396                           fsr0h	equ	0xFEA
  6397                           fsr0l	equ	0xFE9
  6398                           wreg	equ	0xFE8
  6399                           indf2	equ	0xFDF
  6400                           postinc2	equ	0xFDE
  6401                           postdec2	equ	0xFDD
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406 ;; *************** function _ReadADC *****************
  6407 ;; Defined at:
  6408 ;;		line 24 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  2    0[COMRAM] int 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6422 ;;      Params:         2       0       0       0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6425 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6426 ;;Total ram usage:        2 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_main
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text28
  6436  002A44                     __ptext28:
  6437                           	opt stack 0
  6438  002A44                     _ReadADC:
  6439                           	opt stack 30
  6440                           
  6441                           ;incstack = 0
  6442  002A44  50C4               	movf	4036,w,c	;volatile
  6443  002A46  6E02               	movwf	?_ReadADC+1,c
  6444  002A48  50C3               	movf	4035,w,c	;volatile
  6445  002A4A  6E01               	movwf	?_ReadADC,c
  6446  002A4C  0012               	return	
  6447  002A4E                     __end_of_ReadADC:
  6448                           	opt stack 0
  6449                           tblptru	equ	0xFF8
  6450                           tblptrh	equ	0xFF7
  6451                           tblptrl	equ	0xFF6
  6452                           tablat	equ	0xFF5
  6453                           prodh	equ	0xFF4
  6454                           prodl	equ	0xFF3
  6455                           indf0	equ	0xFEF
  6456                           fsr0h	equ	0xFEA
  6457                           fsr0l	equ	0xFE9
  6458                           wreg	equ	0xFE8
  6459                           indf2	equ	0xFDF
  6460                           postinc2	equ	0xFDE
  6461                           postdec2	equ	0xFDD
  6462                           fsr2h	equ	0xFDA
  6463                           fsr2l	equ	0xFD9
  6464                           status	equ	0xFD8
  6465                           
  6466 ;; *************** function _OpenXLCD *****************
  6467 ;; Defined at:
  6468 ;;		line 19 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/openxlcd.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  lcdtype         1    wreg     unsigned char 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  lcdtype         1    4[COMRAM] unsigned char 
  6473 ;; Return value:  Size  Location     Type
  6474 ;;		None               void
  6475 ;; Registers used:
  6476 ;;		wreg, status,2, status,0, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0
  6483 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6485 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6486 ;;Total ram usage:        1 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:    2
  6489 ;; This function calls:
  6490 ;;		_BusyXLCD
  6491 ;;		_Delay10KTCYx
  6492 ;;		_DelayPORXLCD
  6493 ;;		_SetDDRamAddr
  6494 ;;		_WriteCmdXLCD
  6495 ;; This function is called by:
  6496 ;;		_main
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text29
  6501  0022EE                     __ptext29:
  6502                           	opt stack 0
  6503  0022EE                     _OpenXLCD:
  6504                           	opt stack 28
  6505                           
  6506                           ;incstack = 0
  6507                           ;OpenXLCD@lcdtype stored from wreg
  6508  0022EE  CFE8 F005          	movff	wreg,OpenXLCD@lcdtype
  6509  0022F2  0EF0               	movlw	240
  6510  0022F4  1681               	andwf	3969,f,c	;volatile
  6511  0022F6  0EF0               	movlw	240
  6512  0022F8  1693               	andwf	3987,f,c	;volatile
  6513  0022FA  9C93               	bcf	3987,6,c	;volatile
  6514  0022FC  9A93               	bcf	3987,5,c	;volatile
  6515  0022FE  9893               	bcf	3987,4,c	;volatile
  6516  002300  9C8A               	bcf	3978,6,c	;volatile
  6517  002302  9A8A               	bcf	3978,5,c	;volatile
  6518  002304  988A               	bcf	3978,4,c	;volatile
  6519  002306  EC27  F015         	call	_DelayPORXLCD	;wreg free
  6520  00230A  0E30               	movlw	48
  6521  00230C  ECB5  F013         	call	_WriteCmdXLCD
  6522  002310  0E05               	movlw	5
  6523  002312  ECF9  F014         	call	_Delay10KTCYx
  6524  002316  0E30               	movlw	48
  6525  002318  ECB5  F013         	call	_WriteCmdXLCD
  6526  00231C  0E01               	movlw	1
  6527  00231E  ECF9  F014         	call	_Delay10KTCYx
  6528  002322  0E32               	movlw	50
  6529  002324  ECB5  F013         	call	_WriteCmdXLCD
  6530  002328                     l4126:
  6531  002328  EC4C  F014         	call	_BusyXLCD	;wreg free
  6532  00232C  0900               	iorlw	0
  6533  00232E  A4D8               	btfss	status,2,c
  6534  002330  D7FB               	goto	l4126
  6535  002332                     l4128:
  6536  002332  EC4C  F014         	call	_BusyXLCD	;wreg free
  6537  002336  0900               	iorlw	0
  6538  002338  A4D8               	btfss	status,2,c
  6539  00233A  D7FB               	goto	l4128
  6540  00233C  5005               	movf	OpenXLCD@lcdtype,w,c
  6541  00233E  ECB5  F013         	call	_WriteCmdXLCD
  6542  002342                     l4132:
  6543  002342  EC4C  F014         	call	_BusyXLCD	;wreg free
  6544  002346  0900               	iorlw	0
  6545  002348  A4D8               	btfss	status,2,c
  6546  00234A  D7FB               	goto	l4132
  6547  00234C  0E08               	movlw	8
  6548  00234E  ECB5  F013         	call	_WriteCmdXLCD
  6549  002352                     l4136:
  6550  002352  EC4C  F014         	call	_BusyXLCD	;wreg free
  6551  002356  0900               	iorlw	0
  6552  002358  A4D8               	btfss	status,2,c
  6553  00235A  D7FB               	goto	l4136
  6554  00235C  0E0F               	movlw	15
  6555  00235E  ECB5  F013         	call	_WriteCmdXLCD
  6556  002362                     l4140:
  6557  002362  EC4C  F014         	call	_BusyXLCD	;wreg free
  6558  002366  0900               	iorlw	0
  6559  002368  A4D8               	btfss	status,2,c
  6560  00236A  D7FB               	goto	l4140
  6561  00236C  0E01               	movlw	1
  6562  00236E  ECB5  F013         	call	_WriteCmdXLCD
  6563  002372                     l4144:
  6564  002372  EC4C  F014         	call	_BusyXLCD	;wreg free
  6565  002376  0900               	iorlw	0
  6566  002378  A4D8               	btfss	status,2,c
  6567  00237A  D7FB               	goto	l4144
  6568  00237C  0E04               	movlw	4
  6569  00237E  ECB5  F013         	call	_WriteCmdXLCD
  6570  002382                     l4148:
  6571  002382  EC4C  F014         	call	_BusyXLCD	;wreg free
  6572  002386  0900               	iorlw	0
  6573  002388  A4D8               	btfss	status,2,c
  6574  00238A  D7FB               	goto	l4148
  6575  00238C  0E80               	movlw	128
  6576  00238E  EC68  F013         	call	_SetDDRamAddr
  6577  002392  0012               	return	
  6578  002394                     __end_of_OpenXLCD:
  6579                           	opt stack 0
  6580                           tblptru	equ	0xFF8
  6581                           tblptrh	equ	0xFF7
  6582                           tblptrl	equ	0xFF6
  6583                           tablat	equ	0xFF5
  6584                           prodh	equ	0xFF4
  6585                           prodl	equ	0xFF3
  6586                           indf0	equ	0xFEF
  6587                           fsr0h	equ	0xFEA
  6588                           fsr0l	equ	0xFE9
  6589                           wreg	equ	0xFE8
  6590                           indf2	equ	0xFDF
  6591                           postinc2	equ	0xFDE
  6592                           postdec2	equ	0xFDD
  6593                           fsr2h	equ	0xFDA
  6594                           fsr2l	equ	0xFD9
  6595                           status	equ	0xFD8
  6596                           
  6597 ;; *************** function _WriteCmdXLCD *****************
  6598 ;; Defined at:
  6599 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/wcmdxlcd.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  cmd             1    wreg     unsigned char 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  cmd             1    0[COMRAM] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;		None               void
  6606 ;; Registers used:
  6607 ;;		wreg, status,2, status,0, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6613 ;;      Params:         0       0       0       0       0       0       0       0       0
  6614 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6616 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6617 ;;Total ram usage:        1 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    1
  6620 ;; This function calls:
  6621 ;;		_DelayFor18TCY
  6622 ;; This function is called by:
  6623 ;;		_main
  6624 ;;		_OpenXLCD
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text30
  6629  00276A                     __ptext30:
  6630                           	opt stack 0
  6631  00276A                     _WriteCmdXLCD:
  6632                           	opt stack 29
  6633                           
  6634                           ;incstack = 0
  6635                           ;WriteCmdXLCD@cmd stored from wreg
  6636  00276A  CFE8 F001          	movff	wreg,WriteCmdXLCD@cmd
  6637  00276E  0EF0               	movlw	240
  6638  002770  1693               	andwf	3987,f,c	;volatile
  6639  002772  0EF0               	movlw	240
  6640  002774  1681               	andwf	3969,f,c	;volatile
  6641  002776  3801               	swapf	WriteCmdXLCD@cmd,w,c
  6642  002778  0B0F               	andlw	15
  6643  00277A  0B0F               	andlw	15
  6644  00277C  1281               	iorwf	3969,f,c	;volatile
  6645  00277E  9C8A               	bcf	3978,6,c	;volatile
  6646  002780  9A8A               	bcf	3978,5,c	;volatile
  6647  002782  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  6648  002786  888A               	bsf	3978,4,c	;volatile
  6649  002788  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  6650  00278C  988A               	bcf	3978,4,c	;volatile
  6651  00278E  0EF0               	movlw	240
  6652  002790  1681               	andwf	3969,f,c	;volatile
  6653  002792  5001               	movf	WriteCmdXLCD@cmd,w,c
  6654  002794  0B0F               	andlw	15
  6655  002796  1281               	iorwf	3969,f,c	;volatile
  6656  002798  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  6657  00279C  888A               	bsf	3978,4,c	;volatile
  6658  00279E  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  6659  0027A2  988A               	bcf	3978,4,c	;volatile
  6660  0027A4  0E0F               	movlw	15
  6661  0027A6  1293               	iorwf	3987,f,c	;volatile
  6662  0027A8  0012               	return	
  6663  0027AA                     __end_of_WriteCmdXLCD:
  6664                           	opt stack 0
  6665                           tblptru	equ	0xFF8
  6666                           tblptrh	equ	0xFF7
  6667                           tblptrl	equ	0xFF6
  6668                           tablat	equ	0xFF5
  6669                           prodh	equ	0xFF4
  6670                           prodl	equ	0xFF3
  6671                           indf0	equ	0xFEF
  6672                           fsr0h	equ	0xFEA
  6673                           fsr0l	equ	0xFE9
  6674                           wreg	equ	0xFE8
  6675                           indf2	equ	0xFDF
  6676                           postinc2	equ	0xFDE
  6677                           postdec2	equ	0xFDD
  6678                           fsr2h	equ	0xFDA
  6679                           fsr2l	equ	0xFD9
  6680                           status	equ	0xFD8
  6681                           
  6682 ;; *************** function _SetDDRamAddr *****************
  6683 ;; Defined at:
  6684 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/setddram.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  DDaddr          1    wreg     unsigned char 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  DDaddr          1    3[COMRAM] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;		None               void
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0
  6699 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6700 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6701 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6702 ;;Total ram usage:        4 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    1
  6705 ;; This function calls:
  6706 ;;		_DelayFor18TCY
  6707 ;; This function is called by:
  6708 ;;		_main
  6709 ;;		_OpenXLCD
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text31
  6714  0026D0                     __ptext31:
  6715                           	opt stack 0
  6716  0026D0                     _SetDDRamAddr:
  6717                           	opt stack 29
  6718                           
  6719                           ;incstack = 0
  6720                           ;SetDDRamAddr@DDaddr stored from wreg
  6721  0026D0  CFE8 F004          	movff	wreg,SetDDRamAddr@DDaddr
  6722  0026D4  0EF0               	movlw	240
  6723  0026D6  1693               	andwf	3987,f,c	;volatile
  6724  0026D8  0EF0               	movlw	240
  6725  0026DA  1681               	andwf	3969,f,c	;volatile
  6726  0026DC  5004               	movf	SetDDRamAddr@DDaddr,w,c
  6727  0026DE  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  6728  0026E0  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  6729  0026E2  0E80               	movlw	128
  6730  0026E4  1201               	iorwf	??_SetDDRamAddr,f,c
  6731  0026E6  0E00               	movlw	0
  6732  0026E8  1202               	iorwf	??_SetDDRamAddr+1,f,c
  6733  0026EA  0E04               	movlw	4
  6734  0026EC  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  6735  0026EE                     u2495:
  6736  0026EE  3402               	rlcf	??_SetDDRamAddr+1,w,c
  6737  0026F0  3202               	rrcf	??_SetDDRamAddr+1,f,c
  6738  0026F2  3201               	rrcf	??_SetDDRamAddr,f,c
  6739  0026F4  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  6740  0026F6  D7FB               	goto	u2495
  6741  0026F8  5001               	movf	??_SetDDRamAddr,w,c
  6742  0026FA  0B0F               	andlw	15
  6743  0026FC  1281               	iorwf	3969,f,c	;volatile
  6744  0026FE  9C8A               	bcf	3978,6,c	;volatile
  6745  002700  9A8A               	bcf	3978,5,c	;volatile
  6746  002702  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  6747  002706  888A               	bsf	3978,4,c	;volatile
  6748  002708  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  6749  00270C  988A               	bcf	3978,4,c	;volatile
  6750  00270E  0EF0               	movlw	240
  6751  002710  1681               	andwf	3969,f,c	;volatile
  6752  002712  5004               	movf	SetDDRamAddr@DDaddr,w,c
  6753  002714  0B0F               	andlw	15
  6754  002716  1281               	iorwf	3969,f,c	;volatile
  6755  002718  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  6756  00271C  888A               	bsf	3978,4,c	;volatile
  6757  00271E  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  6758  002722  988A               	bcf	3978,4,c	;volatile
  6759  002724  0E0F               	movlw	15
  6760  002726  1293               	iorwf	3987,f,c	;volatile
  6761  002728  0012               	return	
  6762  00272A                     __end_of_SetDDRamAddr:
  6763                           	opt stack 0
  6764                           tblptru	equ	0xFF8
  6765                           tblptrh	equ	0xFF7
  6766                           tblptrl	equ	0xFF6
  6767                           tablat	equ	0xFF5
  6768                           prodh	equ	0xFF4
  6769                           prodl	equ	0xFF3
  6770                           indf0	equ	0xFEF
  6771                           fsr0h	equ	0xFEA
  6772                           fsr0l	equ	0xFE9
  6773                           wreg	equ	0xFE8
  6774                           indf2	equ	0xFDF
  6775                           postinc2	equ	0xFDE
  6776                           postdec2	equ	0xFDD
  6777                           fsr2h	equ	0xFDA
  6778                           fsr2l	equ	0xFD9
  6779                           status	equ	0xFD8
  6780                           
  6781 ;; *************** function _DelayPORXLCD *****************
  6782 ;; Defined at:
  6783 ;;		line 158 in file "sensor_temp01_main.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;		None               void
  6790 ;; Registers used:
  6791 ;;		wreg, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6797 ;;      Params:         0       0       0       0       0       0       0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6800 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6801 ;;Total ram usage:        0 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    1
  6804 ;; This function calls:
  6805 ;;		_Delay1KTCYx
  6806 ;; This function is called by:
  6807 ;;		_OpenXLCD
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text32
  6812  002A4E                     __ptext32:
  6813                           	opt stack 0
  6814  002A4E                     _DelayPORXLCD:
  6815                           	opt stack 28
  6816                           
  6817                           ;sensor_temp01_main.c: 164: Delay1KTCYx(110);
  6818                           
  6819                           ;incstack = 0
  6820  002A4E  0E6E               	movlw	110
  6821  002A50  EC05  F015         	call	_Delay1KTCYx
  6822                           
  6823                           ;sensor_temp01_main.c: 166: return;
  6824  002A54  0012               	return	
  6825  002A56                     __end_of_DelayPORXLCD:
  6826                           	opt stack 0
  6827                           tblptru	equ	0xFF8
  6828                           tblptrh	equ	0xFF7
  6829                           tblptrl	equ	0xFF6
  6830                           tablat	equ	0xFF5
  6831                           prodh	equ	0xFF4
  6832                           prodl	equ	0xFF3
  6833                           indf0	equ	0xFEF
  6834                           fsr0h	equ	0xFEA
  6835                           fsr0l	equ	0xFE9
  6836                           wreg	equ	0xFE8
  6837                           indf2	equ	0xFDF
  6838                           postinc2	equ	0xFDE
  6839                           postdec2	equ	0xFDD
  6840                           fsr2h	equ	0xFDA
  6841                           fsr2l	equ	0xFD9
  6842                           status	equ	0xFD8
  6843                           
  6844 ;; *************** function _Delay1KTCYx *****************
  6845 ;; Defined at:
  6846 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  unit            1    wreg     unsigned char 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  unit            1    0[COMRAM] unsigned char 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;		None               void
  6853 ;; Registers used:
  6854 ;;		wreg
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6860 ;;      Params:         0       0       0       0       0       0       0       0       0
  6861 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6863 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6864 ;;Total ram usage:        1 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_DelayPORXLCD
  6870 ;;		_DelayXLCD
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text33
  6875  002A0A                     __ptext33:
  6876                           	opt stack 0
  6877  002A0A                     _Delay1KTCYx:
  6878                           	opt stack 28
  6879                           
  6880                           ;incstack = 0
  6881                           ;Delay1KTCYx@unit stored from wreg
  6882  002A0A  CFE8 F001          	movff	wreg,Delay1KTCYx@unit
  6883  002A0E                     l541:
  6884  002A0E  0EFA               	movlw	250
  6885  002A10                     u3247:
  6886  002A10  F000               	nop	
  6887  002A12  2EE8               	decfsz	wreg,f,c
  6888  002A14  D7FD               	goto	u3247
  6889  002A16  2E01               	decfsz	Delay1KTCYx@unit,f,c
  6890  002A18  D7FA               	goto	l541
  6891  002A1A  0012               	return	
  6892  002A1C                     __end_of_Delay1KTCYx:
  6893                           	opt stack 0
  6894                           tblptru	equ	0xFF8
  6895                           tblptrh	equ	0xFF7
  6896                           tblptrl	equ	0xFF6
  6897                           tablat	equ	0xFF5
  6898                           prodh	equ	0xFF4
  6899                           prodl	equ	0xFF3
  6900                           indf0	equ	0xFEF
  6901                           fsr0h	equ	0xFEA
  6902                           fsr0l	equ	0xFE9
  6903                           wreg	equ	0xFE8
  6904                           indf2	equ	0xFDF
  6905                           postinc2	equ	0xFDE
  6906                           postdec2	equ	0xFDD
  6907                           fsr2h	equ	0xFDA
  6908                           fsr2l	equ	0xFD9
  6909                           status	equ	0xFD8
  6910                           
  6911 ;; *************** function _Delay10KTCYx *****************
  6912 ;; Defined at:
  6913 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/pic18/d10ktcyx.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  unit            1    wreg     unsigned char 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  unit            1    1[COMRAM] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;		None               void
  6920 ;; Registers used:
  6921 ;;		wreg
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0
  6928 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6929 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6930 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6931 ;;Total ram usage:        2 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_OpenXLCD
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text34
  6941  0029F2                     __ptext34:
  6942                           	opt stack 0
  6943  0029F2                     _Delay10KTCYx:
  6944                           	opt stack 29
  6945                           
  6946                           ;incstack = 0
  6947                           ;Delay10KTCYx@unit stored from wreg
  6948  0029F2  CFE8 F002          	movff	wreg,Delay10KTCYx@unit
  6949  0029F6                     l527:
  6950  0029F6  0E0D               	movlw	13
  6951  0029F8  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  6952  0029FA  0EFC               	movlw	252
  6953  0029FC                     u3257:
  6954  0029FC  2EE8               	decfsz	wreg,f,c
  6955  0029FE  D7FE               	goto	u3257
  6956  002A00  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  6957  002A02  D7FC               	goto	u3257
  6958  002A04  2E02               	decfsz	Delay10KTCYx@unit,f,c
  6959  002A06  D7F7               	goto	l527
  6960  002A08  0012               	return	
  6961  002A0A                     __end_of_Delay10KTCYx:
  6962                           	opt stack 0
  6963                           tblptru	equ	0xFF8
  6964                           tblptrh	equ	0xFF7
  6965                           tblptrl	equ	0xFF6
  6966                           tablat	equ	0xFF5
  6967                           prodh	equ	0xFF4
  6968                           prodl	equ	0xFF3
  6969                           indf0	equ	0xFEF
  6970                           fsr0h	equ	0xFEA
  6971                           fsr0l	equ	0xFE9
  6972                           wreg	equ	0xFE8
  6973                           indf2	equ	0xFDF
  6974                           postinc2	equ	0xFDE
  6975                           postdec2	equ	0xFDD
  6976                           fsr2h	equ	0xFDA
  6977                           fsr2l	equ	0xFD9
  6978                           status	equ	0xFD8
  6979                           
  6980 ;; *************** function _BusyXLCD *****************
  6981 ;; Defined at:
  6982 ;;		line 11 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/busyxlcd.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;		None
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      unsigned char 
  6989 ;; Registers used:
  6990 ;;		wreg, cstack
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6996 ;;      Params:         0       0       0       0       0       0       0       0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6999 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7000 ;;Total ram usage:        0 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    1
  7003 ;; This function calls:
  7004 ;;		_DelayFor18TCY
  7005 ;; This function is called by:
  7006 ;;		_main
  7007 ;;		_OpenXLCD
  7008 ;;		_putrsXLCD
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text35
  7013  002898                     __ptext35:
  7014                           	opt stack 0
  7015  002898                     _BusyXLCD:
  7016                           	opt stack 28
  7017                           
  7018                           ;incstack = 0
  7019  002898  8C8A               	bsf	3978,6,c	;volatile
  7020  00289A  9A8A               	bcf	3978,5,c	;volatile
  7021  00289C  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  7022  0028A0  888A               	bsf	3978,4,c	;volatile
  7023  0028A2  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  7024  0028A6  A681               	btfss	3969,3,c	;volatile
  7025  0028A8  D00A               	goto	l226
  7026  0028AA  988A               	bcf	3978,4,c	;volatile
  7027  0028AC  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  7028  0028B0  888A               	bsf	3978,4,c	;volatile
  7029  0028B2  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  7030  0028B6  988A               	bcf	3978,4,c	;volatile
  7031  0028B8  9C8A               	bcf	3978,6,c	;volatile
  7032  0028BA  0E01               	movlw	1
  7033  0028BC  D009               	goto	l227
  7034  0028BE                     l226:
  7035  0028BE  988A               	bcf	3978,4,c	;volatile
  7036  0028C0  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  7037  0028C4  888A               	bsf	3978,4,c	;volatile
  7038  0028C6  ECD8  F014         	call	_DelayFor18TCY	;wreg free
  7039  0028CA  988A               	bcf	3978,4,c	;volatile
  7040  0028CC  9C8A               	bcf	3978,6,c	;volatile
  7041  0028CE  0E00               	movlw	0
  7042  0028D0                     l227:
  7043  0028D0  0012               	return	
  7044  0028D2                     __end_of_BusyXLCD:
  7045                           	opt stack 0
  7046                           tblptru	equ	0xFF8
  7047                           tblptrh	equ	0xFF7
  7048                           tblptrl	equ	0xFF6
  7049                           tablat	equ	0xFF5
  7050                           prodh	equ	0xFF4
  7051                           prodl	equ	0xFF3
  7052                           indf0	equ	0xFEF
  7053                           fsr0h	equ	0xFEA
  7054                           fsr0l	equ	0xFE9
  7055                           wreg	equ	0xFE8
  7056                           indf2	equ	0xFDF
  7057                           postinc2	equ	0xFDE
  7058                           postdec2	equ	0xFDD
  7059                           fsr2h	equ	0xFDA
  7060                           fsr2l	equ	0xFD9
  7061                           status	equ	0xFD8
  7062                           
  7063 ;; *************** function _DelayFor18TCY *****************
  7064 ;; Defined at:
  7065 ;;		line 136 in file "sensor_temp01_main.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;		None               void
  7072 ;; Registers used:
  7073 ;;		None
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7082 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7083 ;;Total ram usage:        0 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_BusyXLCD
  7089 ;;		_SetDDRamAddr
  7090 ;;		_WriteCmdXLCD
  7091 ;;		_WriteDataXLCD
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text36
  7096  0029B0                     __ptext36:
  7097                           	opt stack 0
  7098  0029B0                     _DelayFor18TCY:
  7099                           	opt stack 28
  7100                           
  7101                           ;sensor_temp01_main.c: 138: __nop();
  7102                           
  7103                           ;incstack = 0
  7104  0029B0  F000               	nop	
  7105                           
  7106                           ;sensor_temp01_main.c: 139: __nop();
  7107  0029B2  F000               	nop	
  7108                           
  7109                           ;sensor_temp01_main.c: 140: __nop();
  7110  0029B4  F000               	nop	
  7111                           
  7112                           ;sensor_temp01_main.c: 141: __nop();
  7113  0029B6  F000               	nop	
  7114                           
  7115                           ;sensor_temp01_main.c: 142: __nop();
  7116  0029B8  F000               	nop	
  7117                           
  7118                           ;sensor_temp01_main.c: 143: __nop();
  7119  0029BA  F000               	nop	
  7120                           
  7121                           ;sensor_temp01_main.c: 144: __nop();
  7122  0029BC  F000               	nop	
  7123                           
  7124                           ;sensor_temp01_main.c: 145: __nop();
  7125  0029BE  F000               	nop	
  7126                           
  7127                           ;sensor_temp01_main.c: 146: __nop();
  7128  0029C0  F000               	nop	
  7129                           
  7130                           ;sensor_temp01_main.c: 147: __nop();
  7131  0029C2  F000               	nop	
  7132                           
  7133                           ;sensor_temp01_main.c: 148: __nop();
  7134  0029C4  F000               	nop	
  7135                           
  7136                           ;sensor_temp01_main.c: 149: __nop();
  7137  0029C6  F000               	nop	
  7138                           
  7139                           ;sensor_temp01_main.c: 150: __nop();
  7140  0029C8  F000               	nop	
  7141                           
  7142                           ;sensor_temp01_main.c: 151: __nop();
  7143  0029CA  F000               	nop	
  7144                           
  7145                           ;sensor_temp01_main.c: 152: __nop();
  7146  0029CC  F000               	nop	
  7147                           
  7148                           ;sensor_temp01_main.c: 153: __nop();
  7149  0029CE  F000               	nop	
  7150                           
  7151                           ;sensor_temp01_main.c: 154: __nop();
  7152  0029D0  F000               	nop	
  7153                           
  7154                           ;sensor_temp01_main.c: 155: __nop();
  7155  0029D2  F000               	nop	
  7156  0029D4  0012               	return	
  7157  0029D6                     __end_of_DelayFor18TCY:
  7158                           	opt stack 0
  7159                           tblptru	equ	0xFF8
  7160                           tblptrh	equ	0xFF7
  7161                           tblptrl	equ	0xFF6
  7162                           tablat	equ	0xFF5
  7163                           prodh	equ	0xFF4
  7164                           prodl	equ	0xFF3
  7165                           indf0	equ	0xFEF
  7166                           fsr0h	equ	0xFEA
  7167                           fsr0l	equ	0xFE9
  7168                           wreg	equ	0xFE8
  7169                           indf2	equ	0xFDF
  7170                           postinc2	equ	0xFDE
  7171                           postdec2	equ	0xFDD
  7172                           fsr2h	equ	0xFDA
  7173                           fsr2l	equ	0xFD9
  7174                           status	equ	0xFD8
  7175                           
  7176 ;; *************** function _OpenADC *****************
  7177 ;; Defined at:
  7178 ;;		line 68 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  config          1    wreg     unsigned char 
  7181 ;;  config2         1    0[COMRAM] unsigned char 
  7182 ;;  portconfig      1    1[COMRAM] unsigned char 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;  config          1    4[COMRAM] unsigned char 
  7185 ;; Return value:  Size  Location     Type
  7186 ;;		None               void
  7187 ;; Registers used:
  7188 ;;		wreg, status,2, status,0
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7194 ;;      Params:         2       0       0       0       0       0       0       0       0
  7195 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7196 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7197 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7198 ;;Total ram usage:        5 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_main
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           	psect	text37
  7208  002614                     __ptext37:
  7209                           	opt stack 0
  7210  002614                     _OpenADC:
  7211                           	opt stack 30
  7212                           
  7213                           ;incstack = 0
  7214                           ;OpenADC@config stored from wreg
  7215  002614  CFE8 F005          	movff	wreg,OpenADC@config
  7216  002618  0E00               	movlw	0
  7217  00261A  6EC2               	movwf	4034,c	;volatile
  7218  00261C  0E00               	movlw	0
  7219  00261E  6EC0               	movwf	4032,c	;volatile
  7220  002620  90D8               	bcf	status,0,c
  7221  002622  3001               	rrcf	OpenADC@config2,w,c
  7222  002624  0B3C               	andlw	60
  7223  002626  6EC2               	movwf	4034,c	;volatile
  7224  002628  C001  F003         	movff	OpenADC@config2,??_OpenADC
  7225  00262C  3A03               	swapf	??_OpenADC,f,c
  7226  00262E  0EF0               	movlw	240
  7227  002630  1603               	andwf	??_OpenADC,f,c
  7228  002632  0E30               	movlw	48
  7229  002634  1603               	andwf	??_OpenADC,f,c
  7230  002636  5002               	movf	OpenADC@portconfig,w,c
  7231  002638  0B0F               	andlw	15
  7232  00263A  1003               	iorwf	??_OpenADC,w,c
  7233  00263C  6EC1               	movwf	4033,c	;volatile
  7234  00263E  C005  F003         	movff	OpenADC@config,??_OpenADC
  7235  002642  90D8               	bcf	status,0,c
  7236  002644  3603               	rlcf	??_OpenADC,f,c
  7237  002646  90D8               	bcf	status,0,c
  7238  002648  3603               	rlcf	??_OpenADC,f,c
  7239  00264A  0E38               	movlw	56
  7240  00264C  1603               	andwf	??_OpenADC,f,c
  7241  00264E  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  7242  002652  3A04               	swapf	??_OpenADC+1,f,c
  7243  002654  0E0F               	movlw	15
  7244  002656  1604               	andwf	??_OpenADC+1,f,c
  7245  002658  0E07               	movlw	7
  7246  00265A  1604               	andwf	??_OpenADC+1,f,c
  7247  00265C  5005               	movf	OpenADC@config,w,c
  7248  00265E  0B80               	andlw	128
  7249  002660  1004               	iorwf	??_OpenADC+1,w,c
  7250  002662  1003               	iorwf	??_OpenADC,w,c
  7251  002664  6EC0               	movwf	4032,c	;volatile
  7252  002666  AE01               	btfss	OpenADC@config2,7,c
  7253  002668  D003               	goto	l209
  7254  00266A  9C9E               	bcf	3998,6,c	;volatile
  7255  00266C  8C9D               	bsf	3997,6,c	;volatile
  7256  00266E  8CF2               	bsf	intcon,6,c	;volatile
  7257  002670                     l209:
  7258  002670  80C2               	bsf	4034,0,c	;volatile
  7259  002672  0012               	return	
  7260  002674                     __end_of_OpenADC:
  7261                           	opt stack 0
  7262                           tblptru	equ	0xFF8
  7263                           tblptrh	equ	0xFF7
  7264                           tblptrl	equ	0xFF6
  7265                           tablat	equ	0xFF5
  7266                           prodh	equ	0xFF4
  7267                           prodl	equ	0xFF3
  7268                           intcon	equ	0xFF2
  7269                           indf0	equ	0xFEF
  7270                           fsr0h	equ	0xFEA
  7271                           fsr0l	equ	0xFE9
  7272                           wreg	equ	0xFE8
  7273                           indf2	equ	0xFDF
  7274                           postinc2	equ	0xFDE
  7275                           postdec2	equ	0xFDD
  7276                           fsr2h	equ	0xFDA
  7277                           fsr2l	equ	0xFD9
  7278                           status	equ	0xFD8
  7279                           
  7280 ;; *************** function _Delay_ms *****************
  7281 ;; Defined at:
  7282 ;;		line 180 in file "sensor_temp01_main.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  ms              2    0[COMRAM] unsigned int 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  i               2    3[COMRAM] unsigned int 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;		None               void
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7296 ;;      Params:         2       0       0       0       0       0       0       0       0
  7297 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7298 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7299 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7300 ;;Total ram usage:        5 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_main
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text38
  7310  002934                     __ptext38:
  7311                           	opt stack 0
  7312  002934                     _Delay_ms:
  7313                           	opt stack 30
  7314                           
  7315                           ;sensor_temp01_main.c: 182: for (unsigned int i=0; i<ms; i++)
  7316                           
  7317                           ;incstack = 0
  7318  002934  0E00               	movlw	0
  7319  002936  6E05               	movwf	Delay_ms@i+1,c
  7320  002938  0E00               	movlw	0
  7321  00293A  6E04               	movwf	Delay_ms@i,c
  7322  00293C  D00A               	goto	l69
  7323  00293E                     l3688:
  7324                           
  7325                           ;sensor_temp01_main.c: 183: _delay((unsigned long)((1)*(20000000/4000.0)));
  7326  00293E  0E07               	movlw	7
  7327  002940  6E03               	movwf	??_Delay_ms& (0+255),c
  7328  002942  0E7D               	movlw	125
  7329  002944                     u3267:
  7330  002944  2EE8               	decfsz	wreg,f,c
  7331  002946  D7FE               	goto	u3267
  7332  002948  2E03               	decfsz	??_Delay_ms& (0+255),f,c
  7333  00294A  D7FC               	goto	u3267
  7334  00294C  F000               	nop	
  7335  00294E  4A04               	infsnz	Delay_ms@i,f,c
  7336  002950  2A05               	incf	Delay_ms@i+1,f,c
  7337  002952                     l69:
  7338  002952  5001               	movf	Delay_ms@ms,w,c
  7339  002954  5C04               	subwf	Delay_ms@i,w,c
  7340  002956  5002               	movf	Delay_ms@ms+1,w,c
  7341  002958  5805               	subwfb	Delay_ms@i+1,w,c
  7342  00295A  B0D8               	btfsc	status,0,c
  7343  00295C  0012               	return	
  7344  00295E  D7EF               	goto	l3688
  7345  002960                     __end_of_Delay_ms:
  7346                           	opt stack 0
  7347                           tblptru	equ	0xFF8
  7348                           tblptrh	equ	0xFF7
  7349                           tblptrl	equ	0xFF6
  7350                           tablat	equ	0xFF5
  7351                           prodh	equ	0xFF4
  7352                           prodl	equ	0xFF3
  7353                           intcon	equ	0xFF2
  7354                           indf0	equ	0xFEF
  7355                           fsr0h	equ	0xFEA
  7356                           fsr0l	equ	0xFE9
  7357                           wreg	equ	0xFE8
  7358                           indf2	equ	0xFDF
  7359                           postinc2	equ	0xFDE
  7360                           postdec2	equ	0xFDD
  7361                           fsr2h	equ	0xFDA
  7362                           fsr2l	equ	0xFD9
  7363                           status	equ	0xFD8
  7364                           
  7365 ;; *************** function _Delay10TCYx *****************
  7366 ;; Defined at:
  7367 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/pic18/d10tcyx.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  unit            1    wreg     unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  unit            1    0[COMRAM] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;		None               void
  7374 ;; Registers used:
  7375 ;;		wreg
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7381 ;;      Params:         0       0       0       0       0       0       0       0       0
  7382 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7384 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7385 ;;Total ram usage:        1 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_main
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text39
  7395  002A1C                     __ptext39:
  7396                           	opt stack 0
  7397  002A1C                     _Delay10TCYx:
  7398                           	opt stack 30
  7399                           
  7400                           ;incstack = 0
  7401                           ;Delay10TCYx@unit stored from wreg
  7402  002A1C  CFE8 F001          	movff	wreg,Delay10TCYx@unit
  7403  002A20                     l534:
  7404  002A20  0E03               	movlw	3
  7405  002A22                     u3277:
  7406  002A22  2EE8               	decfsz	wreg,f,c
  7407  002A24  D7FE               	goto	u3277
  7408  002A26  F000               	nop	
  7409  002A28  2E01               	decfsz	Delay10TCYx@unit,f,c
  7410  002A2A  D7FA               	goto	l534
  7411  002A2C  0012               	return	
  7412  002A2E                     __end_of_Delay10TCYx:
  7413                           	opt stack 0
  7414                           tblptru	equ	0xFF8
  7415                           tblptrh	equ	0xFF7
  7416                           tblptrl	equ	0xFF6
  7417                           tablat	equ	0xFF5
  7418                           prodh	equ	0xFF4
  7419                           prodl	equ	0xFF3
  7420                           intcon	equ	0xFF2
  7421                           indf0	equ	0xFEF
  7422                           fsr0h	equ	0xFEA
  7423                           fsr0l	equ	0xFE9
  7424                           wreg	equ	0xFE8
  7425                           indf2	equ	0xFDF
  7426                           postinc2	equ	0xFDE
  7427                           postdec2	equ	0xFDD
  7428                           fsr2h	equ	0xFDA
  7429                           fsr2l	equ	0xFD9
  7430                           status	equ	0xFD8
  7431                           
  7432 ;; *************** function _ConvertADC *****************
  7433 ;; Defined at:
  7434 ;;		line 22 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;		None
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;		None               void
  7441 ;; Registers used:
  7442 ;;		None
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7452 ;;Total ram usage:        0 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; This function calls:
  7455 ;;		Nothing
  7456 ;; This function is called by:
  7457 ;;		_main
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           	psect	text40
  7462  002A56                     __ptext40:
  7463                           	opt stack 0
  7464  002A56                     _ConvertADC:
  7465                           	opt stack 30
  7466                           
  7467                           ;incstack = 0
  7468  002A56  82C2               	bsf	4034,1,c	;volatile
  7469  002A58  0012               	return	
  7470  002A5A                     __end_of_ConvertADC:
  7471                           	opt stack 0
  7472                           tblptru	equ	0xFF8
  7473                           tblptrh	equ	0xFF7
  7474                           tblptrl	equ	0xFF6
  7475                           tablat	equ	0xFF5
  7476                           prodh	equ	0xFF4
  7477                           prodl	equ	0xFF3
  7478                           intcon	equ	0xFF2
  7479                           indf0	equ	0xFEF
  7480                           fsr0h	equ	0xFEA
  7481                           fsr0l	equ	0xFE9
  7482                           wreg	equ	0xFE8
  7483                           indf2	equ	0xFDF
  7484                           postinc2	equ	0xFDE
  7485                           postdec2	equ	0xFDD
  7486                           fsr2h	equ	0xFDA
  7487                           fsr2l	equ	0xFD9
  7488                           status	equ	0xFD8
  7489                           
  7490 ;; *************** function _BusyADC *****************
  7491 ;; Defined at:
  7492 ;;		line 26 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcbusy.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;		None
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;		None
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1    wreg      unsigned char 
  7499 ;; Registers used:
  7500 ;;		wreg
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7506 ;;      Params:         0       0       0       0       0       0       0       0       0
  7507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7509 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7510 ;;Total ram usage:        0 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_main
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text41
  7520  002A2E                     __ptext41:
  7521                           	opt stack 0
  7522  002A2E                     _BusyADC:
  7523                           	opt stack 30
  7524                           
  7525                           ;incstack = 0
  7526  002A2E  A2C2               	btfss	4034,1,c	;volatile
  7527  002A30  D002               	goto	u1620
  7528  002A32  0E01               	movlw	1
  7529  002A34  D001               	goto	l187
  7530  002A36                     u1620:
  7531  002A36  0E00               	movlw	0
  7532  002A38                     l187:
  7533  002A38  0012               	return	
  7534  002A3A                     __end_of_BusyADC:
  7535                           	opt stack 0
  7536                           tblptru	equ	0xFF8
  7537                           tblptrh	equ	0xFF7
  7538                           tblptrl	equ	0xFF6
  7539                           tablat	equ	0xFF5
  7540                           prodh	equ	0xFF4
  7541                           prodl	equ	0xFF3
  7542                           intcon	equ	0xFF2
  7543                           indf0	equ	0xFEF
  7544                           fsr0h	equ	0xFEA
  7545                           fsr0l	equ	0xFE9
  7546                           wreg	equ	0xFE8
  7547                           indf2	equ	0xFDF
  7548                           postinc2	equ	0xFDE
  7549                           postdec2	equ	0xFDD
  7550                           fsr2h	equ	0xFDA
  7551                           fsr2l	equ	0xFD9
  7552                           status	equ	0xFD8
  7553                           tblptru	equ	0xFF8
  7554                           tblptrh	equ	0xFF7
  7555                           tblptrl	equ	0xFF6
  7556                           tablat	equ	0xFF5
  7557                           prodh	equ	0xFF4
  7558                           prodl	equ	0xFF3
  7559                           intcon	equ	0xFF2
  7560                           indf0	equ	0xFEF
  7561                           fsr0h	equ	0xFEA
  7562                           fsr0l	equ	0xFE9
  7563                           wreg	equ	0xFE8
  7564                           indf2	equ	0xFDF
  7565                           postinc2	equ	0xFDE
  7566                           postdec2	equ	0xFDD
  7567                           fsr2h	equ	0xFDA
  7568                           fsr2l	equ	0xFD9
  7569                           status	equ	0xFD8
  7570                           
  7571                           	psect	rparam
  7572  0000                     tblptru	equ	0xFF8
  7573                           tblptrh	equ	0xFF7
  7574                           tblptrl	equ	0xFF6
  7575                           tablat	equ	0xFF5
  7576                           prodh	equ	0xFF4
  7577                           prodl	equ	0xFF3
  7578                           intcon	equ	0xFF2
  7579                           indf0	equ	0xFEF
  7580                           fsr0h	equ	0xFEA
  7581                           fsr0l	equ	0xFE9
  7582                           wreg	equ	0xFE8
  7583                           indf2	equ	0xFDF
  7584                           postinc2	equ	0xFDE
  7585                           postdec2	equ	0xFDD
  7586                           fsr2h	equ	0xFDA
  7587                           fsr2l	equ	0xFD9
  7588                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    118
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     82      82
    BANK0           160     53      53
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK0[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 7
		 -> main@buffer(BANK0[6]), STR_2(CODE[2]), STR_1(CODE[7]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 6
		 -> main@buffer(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S328$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___asftadd
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->___wmul
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___ftmul->___fttol
    ___asftadd->_fround
    ___ftadd->___ftpack
    _putrsXLCD->_WriteDataXLCD
    ___lwtoft->___ftpack
    ___ftdiv->___ftmul
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   50798
                                             80 COMRAM     2     2      0
                                             37 BANK0     16    16      0
                            _BusyADC
                           _BusyXLCD
                         _ConvertADC
                        _Delay10TCYx
                           _Delay_ms
                            _OpenADC
                           _OpenXLCD
                            _ReadADC
                       _SetDDRamAddr
                       _WriteCmdXLCD
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                          _putrsXLCD
                           _setupMCU
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             54    47      7   41999
                                             67 COMRAM    13     6      7
                                              0 BANK0     37    37      0
                          ___asftadd
                          ___asftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8912
                                             52 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8714
                                             52 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2067
                                             16 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMRAM     9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          16    10      6     552
                                              0 COMRAM    16    10      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1846
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     411
                                             22 COMRAM    15    11      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___asftsub                                            5     0      5    3099
                                             26 COMRAM     5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    2927
                                             20 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5    3918
                                             52 COMRAM     5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3746
                                             37 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___asftadd                                            5     0      5    2948
                                             62 COMRAM     5     0      5
                            ___ftadd
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    2776
                                              8 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _setupMCU                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     248
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             5     2      3    1799
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2190
                                             52 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     154
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _SetDDRamAddr                                         4     4      0      44
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             5     3      2     152
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delay10TCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _BusyXLCD
     _DelayFor18TCY
   _ConvertADC
   _Delay10TCYx
   _Delay_ms
   _OpenADC
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _Delay10KTCYx
     _DelayPORXLCD
       _Delay1KTCYx
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _ReadADC
   _SetDDRamAddr
     _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   ___ftdiv
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___fttol (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     ___ftpack
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _setupMCU
   _sprintf
     ___asftadd
       ___ftadd
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___asftmul
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___asftsub
       ___ftsub
         ___ftadd
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___awdiv
       ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___fttol
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     52      52       1       86.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      35       5       33.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Sep 24 02:03:03 2014

           ___asftadd@f2 0041            ___asftadd@f1p 003F                       l69 2952  
                     l99 172E             ___awdiv@sign 000E      ___wmul@multiplicand 0013  
           ___asftmul@f2 0037             ___asftsub@f2 001D             ___ftadd@exp1 0014  
           ___ftadd@exp2 0013             ___ftadd@sign 0012                      l209 2670  
                    l226 28BE                      l227 28D0                      l158 0FCA  
                    l187 2A38                      l700 1A8E                      l541 2A0E  
                    l534 2A20                      l527 29F6                      l607 1DF6  
                    l720 2090                      l616 1DE6                      l609 1D5C  
                    l717 20C0                      l709 1AAA                      l813 2534  
                    l725 1EFA                      l734 1EEA                      l719 206A  
                    l743 24BE                      l823 259E                      l648 22EC  
                    l728 1E92                      l685 19B2                      l749 1FE6  
                    l686 1B22                      l759 29A2                      l689 19DE  
                    l769 2194             __CFG_BOR$OFF 000000    __size_of_WriteCmdXLCD 0040  
           ___awmod@sign 0007                      wreg 000FE8             __CFG_FOSC$HS 000000  
          ___asftmul@f1p 0035              _sprintf$339 0063            ___asftsub@f1p 001B  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 003E             ___ftdiv@sign 0043  
           __CFG_WDT$OFF 000000                     l4202 152E                     l4140 2362  
                   l4132 2342                     l4052 1F3C                     l4220 170C  
                   l4126 2328                     l4070 1F82                     l4046 1F16  
                   l4214 165C                     l4206 153C                     l4144 2372  
                   l4136 2352                     l4128 2332                     l4080 1FAE  
                   l3512 1D16                     l3440 2982                     l4400 0F76  
                   l4320 0C00                     l4240 08BA                     l4162 26A8  
                   l4066 1F72                     l3506 1CEA                     l3450 1E12  
                   l3610 23FA                     l3602 23DC                     l4234 089C  
                   l4148 2382                     l4156 2676                     l4076 1F9E  
                   l3532 1D8C                     l4420 1002                     l4412 0FCE  
                   l4332 0CAA                     l4324 0C3E                     l4316 0BD8  
                   l4308 0B78                     l4260 0988                     l3630 2460  
                   l3542 1DAE                     l3470 1E6A                     l3622 2426  
                   l3614 240E                     l3606 23EE                     l4182 192C  
                   l4174 186C                     l4406 0F90                     l4270 09F0  
                   l4246 08F8                     l4254 095C                     l3560 2256  
                   l3720 19EC                     l3640 24BC                     l3552 1DD6  
                   l3456 1E2C                     l3608 23F6                     l4424 1056  
                   l4336 0CD0                     l4264 09C4                     l3714 19C0  
                   l3634 2490                     l3554 1DE2                     l3546 1DBE  
                   l3490 1EC2                     l3618 2418                     l4450 119C  
                   l4442 116A                     l4434 1140                     l4354 0DA8  
                   l4282 0A44                     l4274 09F8                     l4266 09DA  
                   l4530 1BE4                     l4514 1B8A                     l3572 22A2  
                   l3564 2264                     l3900 216A                     l4196 148A  
                   l4436 1150                     l4372 0E54                     l4348 0D4A  
                   l4292 0AAE                     l4444 1178                     l4276 0A22  
                   l4532 1BE8                     l3574 22C0                     l3566 226E  
                   l3742 1A42                     l3902 216E                     l3654 24E6  
                   l3486 1EB2                     l4470 127C                     l4454 11C8  
                   l4390 0ECC                     l4382 0E8C                     l3576 22CA  
                   l3568 228C                     l3744 1A4C                     l3736 1A20  
                   l3656 24F2                     l3912 25BA                     l3496 1EDA  
                   l3840 21FC                     l4480 12E6                     l4472 128A  
                   l4464 1236                     l4376 0E72                     l4368 0E02  
                   l3762 1AC6                     l3754 1A7E                     l3746 1A54  
                   l3906 2184                     l3666 2526                     l3658 24F6  
                   l3682 2590                     l3674 255C                     l3914 25C6  
                   l3498 1EE6                     l3842 2204                     l3834 21E2  
                   l4458 1204                     l3772 1AFE                     l3756 1A88  
                   l3748 1A5C                     l3676 2568                     l3860 223C  
                   l3852 2224                     l3844 2208                     l3828 21C2  
                   l4476 12CC                     l4492 1336                     l3782 2002  
                   l3870 20DC                     l3678 256C                     l3598 23C0  
                   l4486 130A                     l4478 12DA                     l4398 0F66  
                   l4494 1352                     l3688 293E                     l3856 222E  
                   l3788 2028                     l3892 2146                     l3888 2136  
                   l3898 215E                     STR_1 0877                     STR_2 0884  
                   STR_3 087E                     u2301 2012                     u2310 201A  
                   u2071 197C                     u2081 1990                     u2410 20FA  
                   u1620 2A36                     u2501 1F0C                     u2415 20F2  
                   u2440 214C                     u1720 1EC8                     u2281 1FF8  
                   u2521 1F26                     u3217 1BA6                     u2530 1F2E  
                   u1810 1DC4                     u1651 1E08                     u3227 1BB8  
                   u1740 1CDC                     u3237 1BCC                     u3247 2A10  
                   u2391 20D2                     u1671 1E22                     u2640 26A0  
                   u1760 1D08                     u3257 29FC                     u1745 1CD2  
                   u2650 26C8                     u3267 2944                     u3277 2A22  
                   u1765 1CFE                     u2830 0AFE                     u2495 26EE  
                   u2647 2696                     u2815 0A86                     u2657 26BE  
                   u2835 0AF4                     _main 1B24             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     fsr0h 000FEA                     indf0 000FEF  
                   fsr0l 000FE9                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9   __size_of_WriteDataXLCD 0040                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
           _sprintf$1608 0060            __CFG_MCLRE$ON 000000             ___ftmul@cntr 0033  
           ___ftmul@sign 0034          __end_of_BusyADC 2A3A          __end_of_ReadADC 2A4E  
            _Delay10TCYx 2A1C          __end_of_OpenADC 2674             ___fttol@exp1 0025  
           ___fttol@lval 0021             _WriteCmdXLCD 276A              _Delay1KTCYx 2A0A  
          __CFG_PLLDIV$1 000000            ?_SetDDRamAddr 0001                    ?_main 0001  
        __end_of___awdiv 2246          __end_of___ftadd 1B24          __end_of___awmod 2430  
        __end_of___ftdiv 20C2          __end_of___ftneg 29B0          __end_of___lldiv 2546  
        __end_of___ftmul 1FE8          ___awdiv@divisor 000A          __end_of___llmod 25B0  
        __end_of___ftsub 2908          __end_of___fttol 2196          ___awdiv@counter 000D  
                  _PORTB 000F81            __CFG_USBDIV$1 000000                    _TRISB 000F93  
  __size_of_Delay10KTCYx 0018            __CFG_PWRT$OFF 000000             ___lltoft@exp 0011  
         __CFG_FCMEN$OFF 000000          __end_of_dpowers 0829                    _scale 1360  
        __end_of_isdigit 298A            ___ftpack@sign 0005               _ConvertADC 2A56  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 1360  
       __end_of_Delay_ms 2960          __initialization 2A3A             __end_of_main 1CBE  
       __end_of_BusyXLCD 28D2             _Delay10KTCYx 29F2    __size_of_DelayPORXLCD 0008  
         ??_SetDDRamAddr 0001         __end_of_OpenXLCD 2394                   ??_main 0051  
          ___fttol@sign1 0020            __activetblptr 000002            _WriteDataXLCD 272A  
   __size_of__tdiv_to_l_ 0104                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0         ___llmod@dividend 0001                   ?_scale 0035  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0008  
       __end_of___ftpack 22EE         __end_of___lltoft 2614         __end_of___lwtoft 2934  
              ??_BusyADC 0001                ??_ReadADC 0003                ??_OpenADC 0003  
           _DelayPORXLCD 2A4E           __CFG_XINST$OFF 000000         __end_of__powers_ 0877  
                 ___ftge 2430                   ___wmul 285E                ??___awdiv 000C  
              ??___ftadd 000F           __CFG_STVREN$ON 000000                ??___awmod 0005  
              ??___ftdiv 003B                ??___ftneg 0004                ??___lldiv 0009  
              ??___ftmul 002C                ??___llmod 0009                ??___ftsub 001B  
              ??___fttol 001B                   _fround 1730         ___awdiv@quotient 000F  
        ___awmod@divisor 0003          ___awmod@counter 0006           ?_WriteDataXLCD 0001  
  ___ftmul@f3_as_product 0030                ??_isdigit 0001         __end_of_setupMCU 29F2  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_sprintf 004B              ?_ConvertADC 0001  
     __size_of___asftadd 003C       __size_of___asftmul 003C       __size_of___asftsub 003C  
             __accesstop 0060  __end_of__initialization 2A3A          __CFG_PBADEN$OFF 000000  
             ___ftadd@f1 0009               ___ftadd@f2 000C               ___ftge@ff1 0001  
             ___ftge@ff2 0004               ___ftdiv@f1 0035               ___ftdiv@f2 0038  
             ___ftdiv@f3 003F               ___ftneg@f1 0001               ___ftmul@f1 0026  
             ___ftmul@f2 0029               ___ftsub@f1 0015               ___ftsub@f2 0018  
             ___fttol@f1 0017           __pcstackCOMRAM 0001               ___lltoft@c 0009  
          __end_of_scale 1730               ___lwtoft@c 0009               __div_to_l_ 1CBE  
              ?_Delay_ms 0001          __div_to_l_@exp1 0010          __div_to_l_@cntr 000F  
           sprintf@integ 0076                  ??_scale 0038   __size_of_DelayFor18TCY 0026  
        __div_to_l_@quot 000B             sprintf@width 007B                ?_BusyXLCD 0001  
        WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 272A                ?_OpenXLCD 0001  
          __div_to_l_@f1 0001            __div_to_l_@f2 0004                  ?___ftge 0001  
      WriteDataXLCD@data 0001             ?_Delay10TCYx 0001                  ?___wmul 0011  
        ??_WriteDataXLCD 0001             ?_Delay1KTCYx 0001        __end_of___asftadd 285E  
                ?_fround 0035        __end_of___asftmul 2822        __end_of___asftsub 27E6  
    __size_of_ConvertADC 0004                ?___ftpack 0001                ?___lltoft 0009  
              ?___lwtoft 0009               ??_Delay_ms 0003       __size_of_putrsXLCD 005C  
             ??_BusyXLCD 0001          __CFG_VREGEN$OFF 000000                  _BusyADC 2A2E  
                _ReadADC 2A44               ??_OpenXLCD 0005                  _OpenADC 2614  
      __end_of__npowers_ 0850                  __Hparam 0000               _scale$1607 0038  
                __Lparam 0000                ?_setupMCU 0001          __size_of___ftge 0090  
                ___awdiv 2196            _DelayFor18TCY 29B0                  ___ftadd 196C  
                ___awmod 2394                  ___ftdiv 1FE8                  ___ftneg 298A  
                ___lldiv 24C0          __size_of___wmul 003A                  ___ftmul 1EFC  
                ___llmod 2546                  ___ftsub 28D2                  ___fttol 20C2  
              _CMCONbits 000FB4             __psmallconst 0800                  __pcinit 2A3A  
             ??___ftpack 0006          putrsXLCD@buffer 0002          __size_of_fround 023C  
        Delay10TCYx@unit 0001                  __ramtop 0800               ??___lltoft 000D  
                __ptext0 1B24                  __ptext1 0888                  __ptext2 1360  
                __ptext3 2960                  __ptext4 1730                  __ptext5 285E  
                __ptext6 2394                  __ptext7 2196                  __ptext8 1DF8  
                __ptext9 1CBE               ??___lwtoft 000C              ?__div_to_l_ 0001  
                _dpowers 0801                  _isdigit 2960         ___awmod@dividend 0001  
         OpenADC@config2 0001                  main@max 0085                  _sprintf 0888  
   end_of_initialization 2A3A                Delay_ms@i 0004            __Lmediumconst 0000  
        ___lldiv@divisor 0005          ___lldiv@counter 000E               ??_setupMCU 0001  
         ?_DelayFor18TCY 0001                  postdec2 000FDD                  postinc2 000FDE  
         __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0004        __end_of_putrsXLCD 26D0  
          ??__tdiv_to_l_ 0007                _TRISAbits 000F92                _TRISBbits 000F93  
  __size_of_SetDDRamAddr 005A             ??_ConvertADC 0001              ___ftdiv@exp 0042  
             main@buffer 0087               main@result 0093      __size_of__div_to_l_ 013A  
            ___ftmul@exp 002F           __end_of___ftge 24C0           __end_of___wmul 2898  
   __size_of_Delay10TCYx 0012       __end_of_ConvertADC 2A5A           __end_of_fround 196C  
           _SetDDRamAddr 26D0     __size_of_Delay1KTCYx 0012       SetDDRamAddr@DDaddr 0004  
    start_initialization 2A3A      __end_of__tdiv_to_l_ 1EFC        __size_of_Delay_ms 002C  
        ___llmod@divisor 0005        __size_of_BusyXLCD 003A          ___llmod@counter 000A  
        ??_DelayFor18TCY 0001        __size_of_OpenXLCD 00A6                 ??___ftge 0007  
               ??___wmul 0015            sprintf@vd_341 006D            ?_WriteCmdXLCD 0001  
       __CFG_LPT1OSC$OFF 000000                 ??_fround 0038               fround@prec 003E  
      __size_of___ftpack 00A8                ___asftadd 2822                ___asftmul 27E6  
              ___asftsub 27AA        __size_of___lltoft 0064        __size_of___lwtoft 002C  
          __pcstackBANK0 0060      __end_of__stringdata 0886             _isdigit$1286 0002  
        Delay1KTCYx@unit 0001              sprintf@_val 0071              sprintf@flag 0079  
            sprintf@fval 007F              sprintf@prec 0082                 ?_BusyADC 0001  
               ?_ReadADC 0001        OpenADC@portconfig 0002                 ?_OpenADC 0001  
              _main$1604 008D           ??_WriteCmdXLCD 0001                 ?___awdiv 0008  
               ?___ftadd 0009                 ?___awmod 0001                 ?___ftdiv 0035  
               ?___ftneg 0001                 ?___lldiv 0001                 ?___ftmul 0026  
               ?___llmod 0001                 ?___ftsub 0015                __npowers_ 0829  
               ?___fttol 0017            ?_Delay10KTCYx 0001        __size_of_setupMCU 001C  
            __tdiv_to_l_ 1DF8    __end_of_WriteDataXLCD 276A             ??__div_to_l_ 0007  
            __smallconst 0800               ?___asftadd 003F                 ?_isdigit 0001  
             ?___asftmul 0035               ?___asftsub 001B                 ?_sprintf 0044  
         __size_of_scale 03D0           ___wmul@product 0015            OpenADC@config 0005  
               _LATBbits 000F8A                 _PIE1bits 000F9D            ?_DelayPORXLCD 0001  
               _PIR1bits 000F9E          OpenXLCD@lcdtype 0005       __end_of__div_to_l_ 1DF8  
       __CFG_WDTPS$32768 000000           ??_Delay10KTCYx 0001               _ADCON0bits 000FC2  
            __stringdata 0877        ___wmul@multiplier 0011                _putrsXLCD 2674  
               _Delay_ms 2934         Delay10KTCYx@unit 0002                 _BusyXLCD 2898  
         ??_DelayPORXLCD 0002                 _OpenXLCD 22EE         __size_of_BusyADC 000C  
       __size_of_ReadADC 000A                 __Hrparam 0000         __size_of_OpenADC 0060  
               __Lrparam 0000         __size_of___awdiv 00B0         __size_of___ftadd 01B8  
       __size_of___awmod 009C         __size_of___ftdiv 00DA         __size_of___ftneg 0026  
       __size_of___lldiv 0086         __size_of___ftmul 00EC         __size_of___llmod 006A  
       __size_of___ftsub 0036         __size_of___fttol 00D4                 ___ftpack 2246  
            _fround$1605 003B              _fround$1606 0038                 ___lltoft 25B0  
               ___lwtoft 2908              ??___asftadd 0044               sprintf@exp 007D  
            ??___asftmul 003A              ??___asftsub 0020               ?_putrsXLCD 0002  
       __size_of_isdigit 002A                 __ptext10 25B0                 __ptext11 2546  
               __ptext20 2822                 __ptext12 24C0                 __ptext21 196C  
               __ptext13 20C2                 __ptext30 276A                 __ptext22 29D6  
               __ptext14 298A                 __ptext31 26D0                 __ptext23 2674  
               __ptext15 2430                 __ptext40 2A56                 __ptext32 2A4E  
               __ptext24 272A                 __ptext16 27AA                 __ptext41 2A2E  
               __ptext33 2A0A                 __ptext25 2908                 __ptext17 28D2  
               __ptext34 29F2                 __ptext26 2246                 __ptext18 27E6  
               __ptext35 2898                 __ptext27 1FE8                 __ptext19 1EFC  
               __ptext36 29B0                 __ptext28 2A44                 __ptext37 2614  
               __ptext29 22EE                 __ptext38 2934                 __ptext39 2A1C  
               __powers_ 0850     __end_of_WriteCmdXLCD 27AA         __size_of_sprintf 0AD8  
          __size_of_main 019A                 _setupMCU 29D6            ??_Delay10TCYx 0001  
          ??_Delay1KTCYx 0001                 main@temp 0090    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2               Delay_ms@ms 0001                 isdigit@c 0003  
               scale@scl 003B     __end_of_Delay10KTCYx 2A0A                sprintf@ap 0067  
       __tdiv_to_l_@exp1 000F                sprintf@vd 0069                sprintf@sp 0044  
       __tdiv_to_l_@cntr 000E         __tdiv_to_l_@quot 000A         ___lldiv@dividend 0001  
  __end_of_DelayFor18TCY 29D6             ?__tdiv_to_l_ 0001      __end_of_Delay10TCYx 2A2E  
               sprintf@c 0084                 sprintf@f 0046     __end_of_DelayPORXLCD 2A56  
            ??_putrsXLCD 0004         ___lldiv@quotient 000A      __end_of_Delay1KTCYx 2A1C  
