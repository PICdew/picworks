

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Sep 13 22:44:50 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	smallconst
    29  000800                     __psmallconst:
    30                           	opt stack 0
    31  000800  00                 	db	0
    32  000801                     _dpowers:
    33                           	opt stack 0
    34  000801  0001               	dw	1
    35  000803  000A               	dw	10
    36  000805  0064               	dw	100
    37  000807  03E8               	dw	1000
    38  000809  2710               	dw	10000
    39  00080B                     __end_of_dpowers:
    40                           	opt stack 0
    41  0000                     _ADCON0bits	set	4034
    42  0000                     _ADCON1	set	4033
    43  0000                     _ADCON1bits	set	4033
    44  0000                     _CMCONbits	set	4020
    45  0000                     _LATBbits	set	3978
    46  0000                     _PORTB	set	3969
    47  0000                     _TRISB	set	3987
    48  0000                     _TRISBbits	set	3987
    49  00080B                     __stringdata:
    50                           	opt stack 0
    51  00080B                     STR_1:
    52  00080B  25                 	db	37
    53  00080C  30                 	db	48	;'0'
    54  00080D  35                 	db	53	;'5'
    55  00080E  64                 	db	100	;'d'
    56  00080F  00                 	db	0
    57  000810                     __end_of__stringdata:
    58                           	opt stack 0
    59                           
    60                           ; #config settings
    61  000810  00                 	db	0	; dummy byte at the end
    62  0000                     
    63                           	psect	cinit
    64  000ED4                     __pcinit:
    65                           	opt stack 0
    66  000ED4                     start_initialization:
    67                           	opt stack 0
    68  000ED4                     __initialization:
    69                           	opt stack 0
    70  000ED4                     end_of_initialization:
    71                           	opt stack 0
    72  000ED4                     __end_of__initialization:
    73                           	opt stack 0
    74  000ED4  0E00               	movlw	low (__Lmediumconst shr (0+16))
    75  000ED6  6EF8               	movwf	tblptru,c
    76  000ED8  0100               	movlb	0
    77  000EDA  EF5F  F005         	goto	_main	;jump to C main() function
    78                           tblptru	equ	0xFF8
    79                           
    80                           	psect	cstackCOMRAM
    81  000001                     __pcstackCOMRAM:
    82                           	opt stack 0
    83  000001                     ??_SetDDRamAddr:
    84  000001                     ??_isdigit:
    85  000001                     ??_Delay10KTCYx:
    86  000001                     ?___lwdiv:
    87                           	opt stack 0
    88  000001                     ?___wmul:
    89                           	opt stack 0
    90  000001                     WriteCmdXLCD@cmd:
    91                           	opt stack 0
    92  000001                     WriteDataXLCD@data:
    93                           	opt stack 0
    94  000001                     Delay1KTCYx@unit:
    95                           	opt stack 0
    96  000001                     Delay_ms@ms:
    97                           	opt stack 0
    98  000001                     ___lwdiv@dividend:
    99                           	opt stack 0
   100  000001                     ___wmul@multiplier:
   101                           	opt stack 0
   102                           
   103                           ; 2 bytes @ 0x0
   104  000001                     	ds	1
   105  000002                     Delay10KTCYx@unit:
   106                           	opt stack 0
   107  000002                     _isdigit$907:
   108                           	opt stack 0
   109  000002                     putrsXLCD@buffer:
   110                           	opt stack 0
   111                           
   112                           ; 2 bytes @ 0x1
   113  000002                     	ds	1
   114  000003                     ??_Delay_ms:
   115  000003                     isdigit@c:
   116                           	opt stack 0
   117  000003                     ___lwdiv@divisor:
   118                           	opt stack 0
   119  000003                     ___wmul@multiplicand:
   120                           	opt stack 0
   121                           
   122                           ; 2 bytes @ 0x2
   123  000003                     	ds	1
   124  000004                     SetDDRamAddr@DDaddr:
   125                           	opt stack 0
   126  000004                     Delay_ms@i:
   127                           	opt stack 0
   128                           
   129                           ; 2 bytes @ 0x3
   130  000004                     	ds	1
   131  000005                     ??___lwdiv:
   132  000005                     OpenXLCD@lcdtype:
   133                           	opt stack 0
   134  000005                     ___wmul@product:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x4
   138  000005                     	ds	1
   139  000006                     ___lwdiv@quotient:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0x5
   143  000006                     	ds	2
   144  000008                     ___lwdiv@counter:
   145                           	opt stack 0
   146                           
   147                           ; 1 bytes @ 0x7
   148  000008                     	ds	1
   149  000009                     ?___lwmod:
   150                           	opt stack 0
   151  000009                     ___lwmod@dividend:
   152                           	opt stack 0
   153                           
   154                           ; 2 bytes @ 0x8
   155  000009                     	ds	2
   156  00000B                     ___lwmod@divisor:
   157                           	opt stack 0
   158                           
   159                           ; 2 bytes @ 0xA
   160  00000B                     	ds	2
   161  00000D                     ??___lwmod:
   162                           
   163                           ; 0 bytes @ 0xC
   164  00000D                     	ds	1
   165  00000E                     ___lwmod@counter:
   166                           	opt stack 0
   167                           
   168                           ; 1 bytes @ 0xD
   169  00000E                     	ds	1
   170  00000F                     ?_sprintf:
   171                           	opt stack 0
   172  00000F                     sprintf@sp:
   173                           	opt stack 0
   174                           
   175                           ; 2 bytes @ 0xE
   176  00000F                     	ds	2
   177  000011                     sprintf@f:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0x10
   181  000011                     	ds	4
   182  000015                     ??_sprintf:
   183                           
   184                           ; 0 bytes @ 0x14
   185  000015                     	ds	4
   186  000019                     sprintf@ap:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x18
   190  000019                     	ds	2
   191  00001B                     sprintf@prec:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x1A
   195  00001B                     	ds	1
   196  00001C                     sprintf@_val:
   197                           	opt stack 0
   198                           
   199                           ; 5 bytes @ 0x1B
   200  00001C                     	ds	5
   201  000021                     sprintf@flag:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0x20
   205  000021                     	ds	1
   206  000022                     sprintf@width:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x21
   210  000022                     	ds	2
   211  000024                     sprintf@c:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x23
   215  000024                     	ds	1
   216  000025                     
   217                           ; 2 bytes @ 0x24
   218  000025                     	ds	2
   219  000027                     
   220                           ; 3 bytes @ 0x26
   221  000027                     	ds	3
   222  00002A                     ??_main:
   223                           
   224                           ; 0 bytes @ 0x29
   225  00002A                     	ds	1
   226  00002B                     main@max:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x2A
   230  00002B                     	ds	2
   231  00002D                     main@buffer:
   232                           	opt stack 0
   233                           
   234                           ; 6 bytes @ 0x2C
   235  00002D                     	ds	6
   236  000033                     main@cont:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x32
   240  000033                     	ds	2
   241                           tblptru	equ	0xFF8
   242                           
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 36 in file "xlcd_dyn_display_main.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;  argc            2   36[COMRAM] int 
   251 ;;  argv            3   38[COMRAM] PTR PTR unsigned char 
   252 ;; Auto vars:     Size  Location     Type
   253 ;;  buffer          6   44[COMRAM] unsigned char [6]
   254 ;;  cont            2   50[COMRAM] unsigned int 
   255 ;;  max             2   42[COMRAM] unsigned int 
   256 ;; Return value:  Size  Location     Type
   257 ;;		None               void
   258 ;; Registers used:
   259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   265 ;;      Params:         5       0       0       0       0       0       0       0       0
   266 ;;      Locals:        10       0       0       0       0       0       0       0       0
   267 ;;      Temps:          1       0       0       0       0       0       0       0       0
   268 ;;      Totals:        16       0       0       0       0       0       0       0       0
   269 ;;Total ram usage:       16 bytes
   270 ;; Hardware stack levels required when called:    3
   271 ;; This function calls:
   272 ;;		_BusyXLCD
   273 ;;		_Delay_ms
   274 ;;		_OpenXLCD
   275 ;;		_SetDDRamAddr
   276 ;;		_WriteCmdXLCD
   277 ;;		_putrsXLCD
   278 ;;		_sprintf
   279 ;; This function is called by:
   280 ;;		Startup code after reset
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text0
   285  000ABE                     __ptext0:
   286                           	opt stack 0
   287  000ABE                     _main:
   288                           	opt stack 28
   289                           
   290                           ;xlcd_dyn_display_main.c: 50: ADCON1bits.PCFG0 = 1;
   291                           
   292                           ;incstack = 0
   293  000ABE  80C1               	bsf	4033,0,c	;volatile
   294                           
   295                           ;xlcd_dyn_display_main.c: 51: ADCON1bits.PCFG1 = 1;
   296  000AC0  82C1               	bsf	4033,1,c	;volatile
   297                           
   298                           ;xlcd_dyn_display_main.c: 52: ADCON1bits.PCFG2 = 1;
   299  000AC2  84C1               	bsf	4033,2,c	;volatile
   300                           
   301                           ;xlcd_dyn_display_main.c: 53: ADCON1bits.PCFG3 = 1;
   302  000AC4  86C1               	bsf	4033,3,c	;volatile
   303                           
   304                           ;xlcd_dyn_display_main.c: 54: ADCON0bits.ADON = 0;
   305  000AC6  90C2               	bcf	4034,0,c	;volatile
   306                           
   307                           ;xlcd_dyn_display_main.c: 55: ADCON1 = 0b00001111;
   308  000AC8  0E0F               	movlw	15
   309  000ACA  6EC1               	movwf	4033,c	;volatile
   310                           
   311                           ;xlcd_dyn_display_main.c: 58: CMCONbits.CM2 = 1;
   312  000ACC  84B4               	bsf	4020,2,c	;volatile
   313                           
   314                           ;xlcd_dyn_display_main.c: 59: CMCONbits.CM1 = 1;
   315  000ACE  82B4               	bsf	4020,1,c	;volatile
   316                           
   317                           ;xlcd_dyn_display_main.c: 60: CMCONbits.CM0 = 1;
   318  000AD0  80B4               	bsf	4020,0,c	;volatile
   319                           
   320                           ;xlcd_dyn_display_main.c: 61: TRISB = 0;
   321  000AD2  0E00               	movlw	0
   322  000AD4  6E93               	movwf	3987,c	;volatile
   323                           
   324                           ;xlcd_dyn_display_main.c: 66: unsigned int cont = 0;
   325  000AD6  0E00               	movlw	0
   326  000AD8  6E34               	movwf	main@cont+1,c
   327  000ADA  0E00               	movlw	0
   328  000ADC  6E33               	movwf	main@cont,c
   329                           
   330                           ;xlcd_dyn_display_main.c: 67: char buffer[6];
   331                           ;xlcd_dyn_display_main.c: 68: unsigned int max = 99999;
   332  000ADE  0E86               	movlw	134
   333  000AE0  6E2C               	movwf	main@max+1,c
   334  000AE2  0E9F               	movlw	159
   335  000AE4  6E2B               	movwf	main@max,c
   336                           
   337                           ;xlcd_dyn_display_main.c: 70: Delay_ms(1000);
   338  000AE6  0E03               	movlw	3
   339  000AE8  6E02               	movwf	Delay_ms@ms+1,c
   340  000AEA  0EE8               	movlw	232
   341  000AEC  6E01               	movwf	Delay_ms@ms,c
   342  000AEE  EC17  F007         	call	_Delay_ms	;wreg free
   343                           
   344                           ;xlcd_dyn_display_main.c: 72: OpenXLCD(0b00101100 & 0b00111000);
   345  000AF2  0E28               	movlw	40
   346  000AF4  ECB8  F005         	call	_OpenXLCD
   347  000AF8                     l1406:
   348  000AF8  ECE3  F006         	call	_BusyXLCD	;wreg free
   349  000AFC  0900               	iorlw	0
   350  000AFE  A4D8               	btfss	status,2,c
   351  000B00  D7FB               	goto	l1406
   352                           
   353                           ;xlcd_dyn_display_main.c: 77: WriteCmdXLCD(0x06);
   354  000B02  0E06               	movlw	6
   355  000B04  ECA6  F006         	call	_WriteCmdXLCD
   356                           
   357                           ;xlcd_dyn_display_main.c: 79: WriteCmdXLCD(0x0C);
   358  000B08  0E0C               	movlw	12
   359  000B0A  ECA6  F006         	call	_WriteCmdXLCD
   360                           
   361                           ;xlcd_dyn_display_main.c: 80: _delay((unsigned long)((10)*(20000000/4000.0)));
   362  000B0E  0E41               	movlw	65
   363  000B10  6E2A               	movwf	??_main& (0+255),c
   364  000B12  0EEE               	movlw	238
   365  000B14                     u657:
   366  000B14  2EE8               	decfsz	wreg,f,c
   367  000B16  D7FE               	goto	u657
   368  000B18  2E2A               	decfsz	??_main& (0+255),f,c
   369  000B1A  D7FC               	goto	u657
   370  000B1C  D000               	nop2	
   371  000B1E                     l1412:
   372                           
   373                           ;xlcd_dyn_display_main.c: 86: {
   374                           ;xlcd_dyn_display_main.c: 87: cont++;
   375  000B1E  4A33               	infsnz	main@cont,f,c
   376  000B20  2A34               	incf	main@cont+1,f,c
   377                           
   378                           ;xlcd_dyn_display_main.c: 89: SetDDRamAddr(0x05);
   379  000B22  0E05               	movlw	5
   380  000B24  EC0B  F006         	call	_SetDDRamAddr
   381                           
   382                           ;xlcd_dyn_display_main.c: 90: sprintf(buffer, "%05d", cont);
   383  000B28  0E00               	movlw	high main@buffer
   384  000B2A  6E10               	movwf	sprintf@sp+1,c
   385  000B2C  0E2D               	movlw	low main@buffer
   386  000B2E  6E0F               	movwf	sprintf@sp,c
   387  000B30  0E08               	movlw	high STR_1
   388  000B32  6E12               	movwf	sprintf@f+1,c
   389  000B34  0E0B               	movlw	low STR_1
   390  000B36  6E11               	movwf	sprintf@f,c
   391  000B38  C033  F013         	movff	main@cont,?_sprintf+4
   392  000B3C  C034  F014         	movff	main@cont+1,?_sprintf+5
   393  000B40  EC09  F004         	call	_sprintf	;wreg free
   394                           
   395                           ;xlcd_dyn_display_main.c: 91: putrsXLCD(buffer);
   396  000B44  0E00               	movlw	high main@buffer
   397  000B46  6E03               	movwf	putrsXLCD@buffer+1,c
   398  000B48  0E2D               	movlw	low main@buffer
   399  000B4A  6E02               	movwf	putrsXLCD@buffer,c
   400  000B4C  EC00  F007         	call	_putrsXLCD	;wreg free
   401                           
   402                           ;xlcd_dyn_display_main.c: 92: Delay_ms(1000);
   403  000B50  0E03               	movlw	3
   404  000B52  6E02               	movwf	Delay_ms@ms+1,c
   405  000B54  0EE8               	movlw	232
   406  000B56  6E01               	movwf	Delay_ms@ms,c
   407  000B58  EC17  F007         	call	_Delay_ms	;wreg free
   408                           
   409                           ;xlcd_dyn_display_main.c: 93: if ( cont==65535 ) cont=0;
   410  000B5C  2833               	incf	main@cont,w,c
   411  000B5E  B4D8               	btfsc	status,2,c
   412  000B60  2834               	incf	main@cont+1,w,c
   413  000B62  A4D8               	btfss	status,2,c
   414  000B64  D7DC               	goto	l1412
   415  000B66  0E00               	movlw	0
   416  000B68  6E34               	movwf	main@cont+1,c
   417  000B6A  0E00               	movlw	0
   418  000B6C  6E33               	movwf	main@cont,c
   419  000B6E  D7D7               	goto	l1412
   420  000B70                     __end_of_main:
   421                           	opt stack 0
   422                           tblptru	equ	0xFF8
   423                           wreg	equ	0xFE8
   424                           status	equ	0xFD8
   425                           
   426 ;; *************** function _sprintf *****************
   427 ;; Defined at:
   428 ;;		line 492 in file "/opt/microchip/xc8/v1.30/sources/common/doprnt.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  sp              2   14[COMRAM] PTR unsigned char 
   431 ;;		 -> main@buffer(6), 
   432 ;;  f               2   16[COMRAM] PTR const unsigned char 
   433 ;;		 -> STR_1(5), 
   434 ;; Auto vars:     Size  Location     Type
   435 ;;  _val            5   27[COMRAM] struct .
   436 ;;  width           2   33[COMRAM] int 
   437 ;;  ap              2   24[COMRAM] PTR void [1]
   438 ;;		 -> ?_sprintf(2), 
   439 ;;  c               1   35[COMRAM] char 
   440 ;;  flag            1   32[COMRAM] unsigned char 
   441 ;;  prec            1   26[COMRAM] char 
   442 ;; Return value:  Size  Location     Type
   443 ;;                  2   14[COMRAM] int 
   444 ;; Registers used:
   445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   451 ;;      Params:         6       0       0       0       0       0       0       0       0
   452 ;;      Locals:        12       0       0       0       0       0       0       0       0
   453 ;;      Temps:          4       0       0       0       0       0       0       0       0
   454 ;;      Totals:        22       0       0       0       0       0       0       0       0
   455 ;;Total ram usage:       22 bytes
   456 ;; Hardware stack levels used:    1
   457 ;; Hardware stack levels required when called:    1
   458 ;; This function calls:
   459 ;;		___lwdiv
   460 ;;		___lwmod
   461 ;;		___wmul
   462 ;;		_isdigit
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text1
   469  000812                     __ptext1:
   470                           	opt stack 0
   471  000812                     _sprintf:
   472                           	opt stack 29
   473                           
   474                           ;doprnt.c: 494: va_list ap;
   475                           ;doprnt.c: 499: signed char c;
   476                           ;doprnt.c: 501: int width;
   477                           ;doprnt.c: 506: signed char prec;
   478                           ;doprnt.c: 508: unsigned char flag;
   479                           ;doprnt.c: 527: union {
   480                           ;doprnt.c: 528: unsigned int _val;
   481                           ;doprnt.c: 529: struct {
   482                           ;doprnt.c: 530: const char * _cp;
   483                           ;doprnt.c: 531: unsigned _len;
   484                           ;doprnt.c: 532: } _str;
   485                           ;doprnt.c: 533: } _val;
   486                           ;doprnt.c: 542: *ap = __va_start();
   487                           
   488                           ;incstack = 0
   489  000812  0E00               	movlw	high (?_sprintf+4)
   490  000814  6E1A               	movwf	sprintf@ap+1,c
   491  000816  0E13               	movlw	low (?_sprintf+4)
   492  000818  6E19               	movwf	sprintf@ap,c
   493                           
   494                           ;doprnt.c: 545: while(c = *f++) {
   495  00081A  D13F               	goto	l1386
   496  00081C                     l1278:
   497                           
   498                           ;doprnt.c: 547: if(c != '%')
   499  00081C  5024               	movf	sprintf@c,w,c
   500  00081E  0A25               	xorlw	37
   501  000820  B4D8               	btfsc	status,2,c
   502  000822  D009               	goto	l1284
   503                           
   504                           ;doprnt.c: 549: {
   505                           ;doprnt.c: 550: ((*sp++ = (c)));
   506  000824  C00F  FFD9         	movff	sprintf@sp,fsr2l
   507  000828  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   508  00082C  C024  FFDF         	movff	sprintf@c,indf2
   509  000830  4A0F               	infsnz	sprintf@sp,f,c
   510  000832  2A10               	incf	sprintf@sp+1,f,c
   511                           
   512                           ;doprnt.c: 551: continue;
   513  000834  D132               	goto	l1386
   514  000836                     l1284:
   515                           
   516                           ;doprnt.c: 552: }
   517                           ;doprnt.c: 555: width = 0;
   518  000836  0E00               	movlw	0
   519  000838  6E23               	movwf	sprintf@width+1,c
   520  00083A  0E00               	movlw	0
   521  00083C  6E22               	movwf	sprintf@width,c
   522                           
   523                           ;doprnt.c: 557: flag = 0;
   524  00083E  6E15               	movwf	??_sprintf& (0+255),c
   525  000840  0E00               	movlw	0
   526  000842  6E21               	movwf	sprintf@flag,c
   527  000844  5015               	movf	??_sprintf& (0+255),w,c
   528  000846  D003               	goto	l1292
   529  000848                     l1288:
   530                           
   531                           ;doprnt.c: 589: flag |= 0x04;
   532  000848  8421               	bsf	sprintf@flag,2,c
   533                           
   534                           ;doprnt.c: 590: f++;
   535  00084A  4A11               	infsnz	sprintf@f,f,c
   536  00084C  2A12               	incf	sprintf@f+1,f,c
   537  00084E                     l1292:
   538  00084E  C011  FFF6         	movff	sprintf@f,tblptrl
   539  000852  C012  FFF7         	movff	sprintf@f+1,tblptrh
   540  000856  0008               	tblrd		*
   541  000858  50F5               	movf	tablat,w,c
   542                           
   543                           ; Switch size 1, requested type "space"
   544                           ; Number of cases is 1, Range of values is 48 to 48
   545                           ; switch strategies available:
   546                           ; Name         Instructions Cycles
   547                           ; simple_byte            4     3 (average)
   548                           ;	Chosen strategy is simple_byte
   549  00085A  0A30               	xorlw	48	; case 48
   550  00085C  B4D8               	btfsc	status,2,c
   551  00085E  D7F4               	goto	l1288
   552                           
   553                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
   554                           
   555                           ;doprnt.c: 595: }
   556                           
   557                           ;doprnt.c: 594: break;
   558  000860  C011  FFF6         	movff	sprintf@f,tblptrl
   559  000864  C012  FFF7         	movff	sprintf@f+1,tblptrh
   560  000868  0008               	tblrd		*
   561  00086A  50F5               	movf	tablat,w,c
   562  00086C  EC2D  F007         	call	_isdigit
   563  000870  A0D8               	btfss	status,0,c
   564  000872  D032               	goto	l1308
   565                           
   566                           ;doprnt.c: 607: width = 0;
   567  000874  0E00               	movlw	0
   568  000876  6E23               	movwf	sprintf@width+1,c
   569  000878  0E00               	movlw	0
   570  00087A  6E22               	movwf	sprintf@width,c
   571  00087C                     l1298:
   572                           
   573                           ;doprnt.c: 609: width *= 10;
   574  00087C  C022  F001         	movff	sprintf@width,___wmul@multiplier
   575  000880  C023  F002         	movff	sprintf@width+1,___wmul@multiplier+1
   576  000884  0E00               	movlw	0
   577  000886  6E04               	movwf	___wmul@multiplicand+1,c
   578  000888  0E0A               	movlw	10
   579  00088A  6E03               	movwf	___wmul@multiplicand,c
   580  00088C  ECC6  F006         	call	___wmul	;wreg free
   581  000890  C001  F022         	movff	?___wmul,sprintf@width
   582  000894  C002  F023         	movff	?___wmul+1,sprintf@width+1
   583                           
   584                           ;doprnt.c: 610: width += *f++ - '0';
   585  000898  0ED0               	movlw	208
   586  00089A  6E15               	movwf	??_sprintf& (0+255),c
   587  00089C  0EFF               	movlw	255
   588  00089E  6E16               	movwf	(??_sprintf+1)& (0+255),c
   589  0008A0  C011  FFF6         	movff	sprintf@f,tblptrl
   590  0008A4  C012  FFF7         	movff	sprintf@f+1,tblptrh
   591  0008A8  0008               	tblrd		*
   592  0008AA  50F5               	movf	tablat,w,c
   593  0008AC  6E17               	movwf	(??_sprintf+2)& (0+255),c
   594  0008AE  6A18               	clrf	(??_sprintf+3)& (0+255),c
   595  0008B0  5015               	movf	??_sprintf,w,c
   596  0008B2  2617               	addwf	??_sprintf+2,f,c
   597  0008B4  5016               	movf	??_sprintf+1,w,c
   598  0008B6  2218               	addwfc	??_sprintf+3,f,c
   599  0008B8  5017               	movf	??_sprintf+2,w,c
   600  0008BA  2622               	addwf	sprintf@width,f,c
   601  0008BC  5018               	movf	??_sprintf+3,w,c
   602  0008BE  2223               	addwfc	sprintf@width+1,f,c
   603  0008C0  4A11               	infsnz	sprintf@f,f,c
   604  0008C2  2A12               	incf	sprintf@f+1,f,c
   605                           
   606                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
   607  0008C4  C011  FFF6         	movff	sprintf@f,tblptrl
   608  0008C8  C012  FFF7         	movff	sprintf@f+1,tblptrh
   609  0008CC  0008               	tblrd		*
   610  0008CE  50F5               	movf	tablat,w,c
   611  0008D0  EC2D  F007         	call	_isdigit
   612  0008D4  B0D8               	btfsc	status,0,c
   613  0008D6  D7D2               	goto	l1298
   614  0008D8                     l1308:
   615  0008D8  C011  FFF6         	movff	sprintf@f,tblptrl
   616  0008DC  C012  FFF7         	movff	sprintf@f+1,tblptrh
   617  0008E0  4A11               	infsnz	sprintf@f,f,c
   618  0008E2  2A12               	incf	sprintf@f+1,f,c
   619  0008E4  0008               	tblrd		*
   620  0008E6  CFF5 F024          	movff	tablat,sprintf@c
   621  0008EA  5024               	movf	sprintf@c& (0+255),w,c
   622                           
   623                           ; Switch size 1, requested type "space"
   624                           ; Number of cases is 3, Range of values is 0 to 105
   625                           ; switch strategies available:
   626                           ; Name         Instructions Cycles
   627                           ; simple_byte           10     6 (average)
   628                           ;	Chosen strategy is simple_byte
   629  0008EC  0A00               	xorlw	0	; case 0
   630  0008EE  B4D8               	btfsc	status,2,c
   631  0008F0  D0DF               	goto	l1388
   632  0008F2  0A64               	xorlw	100	; case 100
   633  0008F4  B4D8               	btfsc	status,2,c
   634  0008F6  D003               	goto	l1310
   635  0008F8  0A0D               	xorlw	13	; case 105
   636  0008FA  A4D8               	btfss	status,2,c
   637  0008FC  D0CE               	goto	l1386
   638  0008FE                     l1310:
   639                           
   640                           ;doprnt.c: 1262: {
   641                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   642  0008FE  C019  FFD9         	movff	sprintf@ap,fsr2l
   643  000902  C01A  FFDA         	movff	sprintf@ap+1,fsr2h
   644  000906  CFDE F01C          	movff	postinc2,sprintf@_val
   645  00090A  CFDD F01D          	movff	postdec2,sprintf@_val+1
   646  00090E  0E02               	movlw	2
   647  000910  2619               	addwf	sprintf@ap,f,c
   648  000912  0E00               	movlw	0
   649  000914  221A               	addwfc	sprintf@ap+1,f,c
   650                           
   651                           ;doprnt.c: 1270: if((int)_val._val < 0) {
   652  000916  501D               	movf	sprintf@_val+1,w,c
   653  000918  0A80               	xorlw	128
   654  00091A  6EF3               	movwf	prodl,c
   655  00091C  0E80               	movlw	128
   656  00091E  5CF3               	subwf	prodl,w,c
   657  000920  0E00               	movlw	0
   658  000922  B4D8               	btfsc	status,2,c
   659  000924  5C1C               	subwf	sprintf@_val,w,c
   660  000926  B0D8               	btfsc	status,0,c
   661  000928  D006               	goto	l1320
   662                           
   663                           ;doprnt.c: 1271: flag |= 0x03;
   664  00092A  0E03               	movlw	3
   665  00092C  1221               	iorwf	sprintf@flag,f,c
   666                           
   667                           ;doprnt.c: 1272: _val._val = -_val._val;
   668  00092E  6C1C               	negf	sprintf@_val,c
   669  000930  1E1D               	comf	sprintf@_val+1,f,c
   670  000932  B0D8               	btfsc	status,0,c
   671  000934  2A1D               	incf	sprintf@_val+1,f,c
   672  000936                     l1320:
   673                           
   674                           ;doprnt.c: 1273: }
   675                           ;doprnt.c: 1275: }
   676                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   677  000936  6E15               	movwf	??_sprintf& (0+255),c
   678  000938  0E01               	movlw	1
   679  00093A  6E24               	movwf	sprintf@c,c
   680  00093C  5015               	movf	??_sprintf& (0+255),w,c
   681  00093E  5024               	movf	sprintf@c,w,c
   682  000940  0A05               	xorlw	5
   683  000942  B4D8               	btfsc	status,2,c
   684  000944  D016               	goto	l1334
   685                           
   686                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
   687  000946  5024               	movf	sprintf@c,w,c
   688  000948  0D02               	mullw	2
   689  00094A  0E01               	movlw	low _dpowers
   690  00094C  24F3               	addwf	prodl,w,c
   691  00094E  6EF6               	movwf	tblptrl,c
   692  000950  0E08               	movlw	high _dpowers
   693  000952  20F4               	addwfc	prodh,w,c
   694  000954  6EF7               	movwf	tblptrh,c
   695  000956  0009               	tblrd		*+
   696  000958  CFF5 F015          	movff	tablat,??_sprintf
   697  00095C  0009               	tblrd		*+
   698  00095E  CFF5 F016          	movff	tablat,??_sprintf+1
   699  000962  5015               	movf	??_sprintf,w,c
   700  000964  5C1C               	subwf	sprintf@_val,w,c
   701  000966  5016               	movf	??_sprintf+1,w,c
   702  000968  581D               	subwfb	sprintf@_val+1,w,c
   703  00096A  A0D8               	btfss	status,0,c
   704  00096C  D002               	goto	l1334
   705                           
   706                           ;doprnt.c: 1316: break;
   707  00096E  2A24               	incf	sprintf@c,f,c
   708  000970  D7E6               	goto	L1
   709  000972                     l1334:
   710                           
   711                           ;doprnt.c: 1354: if(width && flag & 0x03)
   712  000972  5023               	movf	sprintf@width+1,w,c
   713  000974  1022               	iorwf	sprintf@width,w,c
   714  000976  B4D8               	btfsc	status,2,c
   715  000978  D009               	goto	l1340
   716  00097A  C021  F015         	movff	sprintf@flag,??_sprintf
   717  00097E  0E03               	movlw	3
   718  000980  1615               	andwf	??_sprintf,f,c
   719  000982  B4D8               	btfsc	status,2,c
   720  000984  D003               	goto	l1340
   721                           
   722                           ;doprnt.c: 1355: width--;
   723  000986  0622               	decf	sprintf@width,f,c
   724  000988  A0D8               	btfss	status,0,c
   725  00098A  0623               	decf	sprintf@width+1,f,c
   726  00098C                     l1340:
   727                           
   728                           ;doprnt.c: 1390: if(width > c)
   729  00098C  0E80               	movlw	128
   730  00098E  BE24               	btfsc	sprintf@c,7,c
   731  000990  0E7F               	movlw	127
   732  000992  6E15               	movwf	??_sprintf& (0+255),c
   733  000994  5022               	movf	sprintf@width,w,c
   734  000996  5C24               	subwf	sprintf@c,w,c
   735  000998  5023               	movf	sprintf@width+1,w,c
   736  00099A  0A80               	xorlw	128
   737  00099C  5815               	subwfb	??_sprintf& (0+255),w,c
   738  00099E  B0D8               	btfsc	status,0,c
   739  0009A0  D007               	goto	l1344
   740                           
   741                           ;doprnt.c: 1391: width -= c;
   742  0009A2  5024               	movf	sprintf@c,w,c
   743  0009A4  5E22               	subwf	sprintf@width,f,c
   744  0009A6  0E00               	movlw	0
   745  0009A8  BE24               	btfsc	sprintf@c,7,c
   746  0009AA  0EFF               	movlw	255
   747  0009AC  5A23               	subwfb	sprintf@width+1,f,c
   748  0009AE  D004               	goto	l1346
   749  0009B0                     l1344:
   750                           
   751                           ;doprnt.c: 1392: else
   752                           ;doprnt.c: 1393: width = 0;
   753  0009B0  0E00               	movlw	0
   754  0009B2  6E23               	movwf	sprintf@width+1,c
   755  0009B4  0E00               	movlw	0
   756  0009B6  6E22               	movwf	sprintf@width,c
   757  0009B8                     l1346:
   758                           
   759                           ;doprnt.c: 1396: if(flag & 0x04) {
   760  0009B8  A421               	btfss	sprintf@flag,2,c
   761  0009BA  D01E               	goto	l1362
   762                           
   763                           ;doprnt.c: 1401: if(flag & 0x03)
   764  0009BC  C021  F015         	movff	sprintf@flag,??_sprintf
   765  0009C0  0E03               	movlw	3
   766  0009C2  1615               	andwf	??_sprintf,f,c
   767  0009C4  B4D8               	btfsc	status,2,c
   768  0009C6  D008               	goto	l1354
   769                           
   770                           ;doprnt.c: 1402: ((*sp++ = ('-')));
   771  0009C8  C00F  FFD9         	movff	sprintf@sp,fsr2l
   772  0009CC  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   773  0009D0  0E2D               	movlw	45
   774  0009D2  6EDF               	movwf	indf2,c
   775  0009D4  4A0F               	infsnz	sprintf@sp,f,c
   776  0009D6  2A10               	incf	sprintf@sp+1,f,c
   777  0009D8                     l1354:
   778                           
   779                           ;doprnt.c: 1424: if(width)
   780  0009D8  5023               	movf	sprintf@width+1,w,c
   781  0009DA  1022               	iorwf	sprintf@width,w,c
   782  0009DC  B4D8               	btfsc	status,2,c
   783  0009DE  D02D               	goto	l1376
   784                           
   785                           ;doprnt.c: 1426: ((*sp++ = ('0')));
   786                           
   787                           ;doprnt.c: 1425: do
   788  0009E0  C00F  FFD9         	movff	sprintf@sp,fsr2l
   789  0009E4  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   790  0009E8  0E30               	movlw	48
   791  0009EA  6EDF               	movwf	indf2,c
   792  0009EC  4A0F               	infsnz	sprintf@sp,f,c
   793  0009EE  2A10               	incf	sprintf@sp+1,f,c
   794                           
   795                           ;doprnt.c: 1427: while(--width);
   796  0009F0  0622               	decf	sprintf@width,f,c
   797  0009F2  A0D8               	btfss	status,0,c
   798  0009F4  0623               	decf	sprintf@width+1,f,c
   799  0009F6  D7F0               	goto	l1354
   800  0009F8                     l1362:
   801                           
   802                           ;doprnt.c: 1431: {
   803                           ;doprnt.c: 1433: if(width
   804                           ;doprnt.c: 1437: )
   805  0009F8  5023               	movf	sprintf@width+1,w,c
   806  0009FA  1022               	iorwf	sprintf@width,w,c
   807  0009FC  B4D8               	btfsc	status,2,c
   808  0009FE  D00F               	goto	l1370
   809  000A00                     l1364:
   810                           
   811                           ;doprnt.c: 1439: ((*sp++ = (' ')));
   812  000A00  C00F  FFD9         	movff	sprintf@sp,fsr2l
   813  000A04  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   814  000A08  0E20               	movlw	32
   815  000A0A  6EDF               	movwf	indf2,c
   816  000A0C  4A0F               	infsnz	sprintf@sp,f,c
   817  000A0E  2A10               	incf	sprintf@sp+1,f,c
   818                           
   819                           ;doprnt.c: 1440: while(--width);
   820  000A10  0622               	decf	sprintf@width,f,c
   821  000A12  A0D8               	btfss	status,0,c
   822  000A14  0623               	decf	sprintf@width+1,f,c
   823  000A16  5023               	movf	(sprintf@width+1)& (0+255),w,c
   824  000A18  1022               	iorwf	sprintf@width& (0+255),w,c
   825  000A1A  A4D8               	btfss	status,2,c
   826  000A1C  D7F1               	goto	l1364
   827  000A1E                     l1370:
   828                           
   829                           ;doprnt.c: 1447: if(flag & 0x03)
   830  000A1E  C021  F015         	movff	sprintf@flag,??_sprintf
   831  000A22  0E03               	movlw	3
   832  000A24  1615               	andwf	??_sprintf,f,c
   833  000A26  B4D8               	btfsc	status,2,c
   834  000A28  D008               	goto	l1376
   835                           
   836                           ;doprnt.c: 1448: ((*sp++ = ('-')));
   837  000A2A  C00F  FFD9         	movff	sprintf@sp,fsr2l
   838  000A2E  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   839  000A32  0E2D               	movlw	45
   840  000A34  6EDF               	movwf	indf2,c
   841  000A36  4A0F               	infsnz	sprintf@sp,f,c
   842  000A38  2A10               	incf	sprintf@sp+1,f,c
   843  000A3A                     l1376:
   844                           
   845                           ;doprnt.c: 1478: }
   846                           ;doprnt.c: 1481: prec = c;
   847  000A3A  C024  F01B         	movff	sprintf@c,sprintf@prec
   848                           
   849                           ;doprnt.c: 1483: while(prec--) {
   850  000A3E  D029               	goto	l1384
   851  000A40                     l1378:
   852                           
   853                           ;doprnt.c: 1487: {
   854                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
   855  000A40  501B               	movf	sprintf@prec,w,c
   856  000A42  0D02               	mullw	2
   857  000A44  0E01               	movlw	low _dpowers
   858  000A46  24F3               	addwf	prodl,w,c
   859  000A48  6EF6               	movwf	tblptrl,c
   860  000A4A  0E08               	movlw	high _dpowers
   861  000A4C  20F4               	addwfc	prodh,w,c
   862  000A4E  6EF7               	movwf	tblptrh,c
   863  000A50  0009               	tblrd		*+
   864  000A52  CFF5 F003          	movff	tablat,___lwdiv@divisor
   865  000A56  000A               	tblrd		*-
   866  000A58  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   867  000A5C  C01C  F001         	movff	sprintf@_val,___lwdiv@dividend
   868  000A60  C01D  F002         	movff	sprintf@_val+1,___lwdiv@dividend+1
   869  000A64  EC38  F006         	call	___lwdiv	;wreg free
   870  000A68  C001  F009         	movff	?___lwdiv,___lwmod@dividend
   871  000A6C  C002  F00A         	movff	?___lwdiv+1,___lwmod@dividend+1
   872  000A70  0E00               	movlw	0
   873  000A72  6E0C               	movwf	___lwmod@divisor+1,c
   874  000A74  0E0A               	movlw	10
   875  000A76  6E0B               	movwf	___lwmod@divisor,c
   876  000A78  EC63  F006         	call	___lwmod	;wreg free
   877  000A7C  5009               	movf	?___lwmod,w,c
   878  000A7E  0F30               	addlw	48
   879  000A80  6E24               	movwf	sprintf@c,c
   880                           
   881                           ;doprnt.c: 1532: }
   882                           ;doprnt.c: 1533: ((*sp++ = (c)));
   883  000A82  C00F  FFD9         	movff	sprintf@sp,fsr2l
   884  000A86  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   885  000A8A  C024  FFDF         	movff	sprintf@c,indf2
   886  000A8E  4A0F               	infsnz	sprintf@sp,f,c
   887  000A90  2A10               	incf	sprintf@sp+1,f,c
   888  000A92                     l1384:
   889  000A92  061B               	decf	sprintf@prec,f,c
   890  000A94  281B               	incf	sprintf@prec& (0+255),w,c
   891  000A96  A4D8               	btfss	status,2,c
   892  000A98  D7D3               	goto	l1378
   893  000A9A                     l1386:
   894  000A9A  C011  FFF6         	movff	sprintf@f,tblptrl
   895  000A9E  C012  FFF7         	movff	sprintf@f+1,tblptrh
   896  000AA2  4A11               	infsnz	sprintf@f,f,c
   897  000AA4  2A12               	incf	sprintf@f+1,f,c
   898  000AA6  0008               	tblrd		*
   899  000AA8  CFF5 F024          	movff	tablat,sprintf@c
   900  000AAC  6624               	tstfsz	sprintf@c& (0+255),c
   901  000AAE  D6B6               	goto	l1278
   902  000AB0                     l1388:
   903                           
   904                           ;doprnt.c: 1547: *sp = 0;
   905  000AB0  C00F  FFD9         	movff	sprintf@sp,fsr2l
   906  000AB4  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   907  000AB8  0E00               	movlw	0
   908  000ABA  6EDF               	movwf	indf2,c
   909                           
   910                           ;doprnt.c: 1549: return 0;
   911                           ;	Return value of _sprintf is never used
   912  000ABC  0012               	return	
   913  000ABE                     __end_of_sprintf:
   914                           	opt stack 0
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           prodh	equ	0xFF4
   920                           prodl	equ	0xFF3
   921                           wreg	equ	0xFE8
   922                           indf2	equ	0xFDF
   923                           postinc2	equ	0xFDE
   924                           postdec2	equ	0xFDD
   925                           fsr2h	equ	0xFDA
   926                           fsr2l	equ	0xFD9
   927                           status	equ	0xFD8
   928                           
   929 ;; *************** function _isdigit *****************
   930 ;; Defined at:
   931 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/isdigit.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  c               1    wreg     unsigned char 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  c               1    2[COMRAM] unsigned char 
   936 ;; Return value:  Size  Location     Type
   937 ;;		None               void
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   945 ;;      Params:         0       0       0       0       0       0       0       0       0
   946 ;;      Locals:         2       0       0       0       0       0       0       0       0
   947 ;;      Temps:          1       0       0       0       0       0       0       0       0
   948 ;;      Totals:         3       0       0       0       0       0       0       0       0
   949 ;;Total ram usage:        3 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_sprintf
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text2
   959  000E5A                     __ptext2:
   960                           	opt stack 0
   961  000E5A                     _isdigit:
   962                           	opt stack 29
   963                           
   964                           ;incstack = 0
   965                           ;isdigit@c stored from wreg
   966  000E5A  CFE8 F003          	movff	wreg,isdigit@c
   967  000E5E  6E01               	movwf	??_isdigit& (0+255),c
   968  000E60  0E00               	movlw	0
   969  000E62  6E02               	movwf	_isdigit$907,c
   970  000E64  5001               	movf	??_isdigit& (0+255),w,c
   971  000E66  0E3A               	movlw	58
   972  000E68  5C03               	subwf	isdigit@c,w,c
   973  000E6A  B0D8               	btfsc	status,0,c
   974  000E6C  D007               	goto	l1272
   975  000E6E  0E2F               	movlw	47
   976  000E70  6403               	cpfsgt	isdigit@c,c
   977  000E72  D004               	goto	l1272
   978  000E74  6E01               	movwf	??_isdigit& (0+255),c
   979  000E76  0E01               	movlw	1
   980  000E78  6E02               	movwf	_isdigit$907,c
   981  000E7A  5001               	movf	??_isdigit& (0+255),w,c
   982  000E7C                     l1272:
   983  000E7C  C002  F001         	movff	_isdigit$907,??_isdigit
   984  000E80  3001               	rrcf	??_isdigit,w,c
   985  000E82  0012               	return	
   986  000E84                     __end_of_isdigit:
   987                           	opt stack 0
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           prodh	equ	0xFF4
   993                           prodl	equ	0xFF3
   994                           wreg	equ	0xFE8
   995                           indf2	equ	0xFDF
   996                           postinc2	equ	0xFDE
   997                           postdec2	equ	0xFDD
   998                           fsr2h	equ	0xFDA
   999                           fsr2l	equ	0xFD9
  1000                           status	equ	0xFD8
  1001                           
  1002 ;; *************** function ___wmul *****************
  1003 ;; Defined at:
  1004 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/wmul.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  multiplier      2    0[COMRAM] unsigned int 
  1007 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  product         2    4[COMRAM] unsigned int 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  2    0[COMRAM] unsigned int 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, prodl, prodh
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1019 ;;      Params:         4       0       0       0       0       0       0       0       0
  1020 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1022 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1023 ;;Total ram usage:        6 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_sprintf
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text3
  1033  000D8C                     __ptext3:
  1034                           	opt stack 0
  1035  000D8C                     ___wmul:
  1036                           	opt stack 29
  1037                           
  1038                           ;incstack = 0
  1039  000D8C  5001               	movf	___wmul@multiplier,w,c
  1040  000D8E  0203               	mulwf	___wmul@multiplicand,c
  1041  000D90  CFF3 F005          	movff	prodl,___wmul@product
  1042  000D94  CFF4 F006          	movff	prodh,___wmul@product+1
  1043  000D98  5001               	movf	___wmul@multiplier,w,c
  1044  000D9A  0204               	mulwf	___wmul@multiplicand+1,c
  1045  000D9C  CFF3 FFF4          	movff	prodl,prodh
  1046  000DA0  6AF3               	clrf	prodl,c
  1047  000DA2  50F3               	movf	prodl,w,c
  1048  000DA4  2605               	addwf	___wmul@product,f,c
  1049  000DA6  50F4               	movf	prodh,w,c
  1050  000DA8  2206               	addwfc	___wmul@product+1,f,c
  1051  000DAA  5002               	movf	___wmul@multiplier+1,w,c
  1052  000DAC  0203               	mulwf	___wmul@multiplicand,c
  1053  000DAE  CFF3 FFF4          	movff	prodl,prodh
  1054  000DB2  6AF3               	clrf	prodl,c
  1055  000DB4  50F3               	movf	prodl,w,c
  1056  000DB6  2605               	addwf	___wmul@product,f,c
  1057  000DB8  50F4               	movf	prodh,w,c
  1058  000DBA  2206               	addwfc	___wmul@product+1,f,c
  1059  000DBC  C005  F001         	movff	___wmul@product,?___wmul
  1060  000DC0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1061  000DC4  0012               	return	
  1062  000DC6                     __end_of___wmul:
  1063                           	opt stack 0
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           prodh	equ	0xFF4
  1069                           prodl	equ	0xFF3
  1070                           wreg	equ	0xFE8
  1071                           indf2	equ	0xFDF
  1072                           postinc2	equ	0xFDE
  1073                           postdec2	equ	0xFDD
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function ___lwmod *****************
  1079 ;; Defined at:
  1080 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/lwmod.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  dividend        2    8[COMRAM] unsigned int 
  1083 ;;  divisor         2   10[COMRAM] unsigned int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  counter         1   13[COMRAM] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    8[COMRAM] unsigned int 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1095 ;;      Params:         4       0       0       0       0       0       0       0       0
  1096 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1097 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1098 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1099 ;;Total ram usage:        6 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_sprintf
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text4
  1109  000CC6                     __ptext4:
  1110                           	opt stack 0
  1111  000CC6                     ___lwmod:
  1112                           	opt stack 29
  1113                           
  1114                           ;incstack = 0
  1115  000CC6  500C               	movf	___lwmod@divisor+1,w,c
  1116  000CC8  100B               	iorwf	___lwmod@divisor,w,c
  1117  000CCA  B4D8               	btfsc	status,2,c
  1118  000CCC  D01A               	goto	l740
  1119  000CCE  6E0D               	movwf	??___lwmod& (0+255),c
  1120  000CD0  0E01               	movlw	1
  1121  000CD2  6E0E               	movwf	___lwmod@counter,c
  1122  000CD4  500D               	movf	??___lwmod& (0+255),w,c
  1123  000CD6  D004               	goto	l922
  1124  000CD8                     l920:
  1125  000CD8  90D8               	bcf	status,0,c
  1126  000CDA  360B               	rlcf	___lwmod@divisor,f,c
  1127  000CDC  360C               	rlcf	___lwmod@divisor+1,f,c
  1128  000CDE  2A0E               	incf	___lwmod@counter,f,c
  1129  000CE0                     l922:
  1130  000CE0  AE0C               	btfss	___lwmod@divisor+1,7,c
  1131  000CE2  D7FA               	goto	l920
  1132  000CE4                     l924:
  1133  000CE4  500B               	movf	___lwmod@divisor,w,c
  1134  000CE6  5C09               	subwf	___lwmod@dividend,w,c
  1135  000CE8  500C               	movf	___lwmod@divisor+1,w,c
  1136  000CEA  580A               	subwfb	___lwmod@dividend+1,w,c
  1137  000CEC  A0D8               	btfss	status,0,c
  1138  000CEE  D004               	goto	l928
  1139  000CF0  500B               	movf	___lwmod@divisor,w,c
  1140  000CF2  5E09               	subwf	___lwmod@dividend,f,c
  1141  000CF4  500C               	movf	___lwmod@divisor+1,w,c
  1142  000CF6  5A0A               	subwfb	___lwmod@dividend+1,f,c
  1143  000CF8                     l928:
  1144  000CF8  90D8               	bcf	status,0,c
  1145  000CFA  320C               	rrcf	___lwmod@divisor+1,f,c
  1146  000CFC  320B               	rrcf	___lwmod@divisor,f,c
  1147  000CFE  2E0E               	decfsz	___lwmod@counter,f,c
  1148  000D00  D7F1               	goto	l924
  1149  000D02                     l740:
  1150  000D02  C009  F009         	movff	___lwmod@dividend,?___lwmod
  1151  000D06  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  1152  000D0A  0012               	return	
  1153  000D0C                     __end_of___lwmod:
  1154                           	opt stack 0
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           prodh	equ	0xFF4
  1160                           prodl	equ	0xFF3
  1161                           wreg	equ	0xFE8
  1162                           indf2	equ	0xFDF
  1163                           postinc2	equ	0xFDE
  1164                           postdec2	equ	0xFDD
  1165                           fsr2h	equ	0xFDA
  1166                           fsr2l	equ	0xFD9
  1167                           status	equ	0xFD8
  1168                           
  1169 ;; *************** function ___lwdiv *****************
  1170 ;; Defined at:
  1171 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/lwdiv.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  dividend        2    0[COMRAM] unsigned int 
  1174 ;;  divisor         2    2[COMRAM] unsigned int 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  quotient        2    5[COMRAM] unsigned int 
  1177 ;;  counter         1    7[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  2    0[COMRAM] unsigned int 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1187 ;;      Params:         4       0       0       0       0       0       0       0       0
  1188 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1189 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1190 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1191 ;;Total ram usage:        8 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_sprintf
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text5
  1201  000C70                     __ptext5:
  1202                           	opt stack 0
  1203  000C70                     ___lwdiv:
  1204                           	opt stack 29
  1205                           
  1206                           ;incstack = 0
  1207  000C70  0E00               	movlw	0
  1208  000C72  6E07               	movwf	___lwdiv@quotient+1,c
  1209  000C74  0E00               	movlw	0
  1210  000C76  6E06               	movwf	___lwdiv@quotient,c
  1211  000C78  5004               	movf	___lwdiv@divisor+1,w,c
  1212  000C7A  1003               	iorwf	___lwdiv@divisor,w,c
  1213  000C7C  B4D8               	btfsc	status,2,c
  1214  000C7E  D01E               	goto	l730
  1215  000C80  6E05               	movwf	??___lwdiv& (0+255),c
  1216  000C82  0E01               	movlw	1
  1217  000C84  6E08               	movwf	___lwdiv@counter,c
  1218  000C86  5005               	movf	??___lwdiv& (0+255),w,c
  1219  000C88  D004               	goto	l880
  1220  000C8A                     l878:
  1221  000C8A  90D8               	bcf	status,0,c
  1222  000C8C  3603               	rlcf	___lwdiv@divisor,f,c
  1223  000C8E  3604               	rlcf	___lwdiv@divisor+1,f,c
  1224  000C90  2A08               	incf	___lwdiv@counter,f,c
  1225  000C92                     l880:
  1226  000C92  AE04               	btfss	___lwdiv@divisor+1,7,c
  1227  000C94  D7FA               	goto	l878
  1228  000C96                     l882:
  1229  000C96  90D8               	bcf	status,0,c
  1230  000C98  3606               	rlcf	___lwdiv@quotient,f,c
  1231  000C9A  3607               	rlcf	___lwdiv@quotient+1,f,c
  1232  000C9C  5003               	movf	___lwdiv@divisor,w,c
  1233  000C9E  5C01               	subwf	___lwdiv@dividend,w,c
  1234  000CA0  5004               	movf	___lwdiv@divisor+1,w,c
  1235  000CA2  5802               	subwfb	___lwdiv@dividend+1,w,c
  1236  000CA4  A0D8               	btfss	status,0,c
  1237  000CA6  D005               	goto	l890
  1238  000CA8  5003               	movf	___lwdiv@divisor,w,c
  1239  000CAA  5E01               	subwf	___lwdiv@dividend,f,c
  1240  000CAC  5004               	movf	___lwdiv@divisor+1,w,c
  1241  000CAE  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1242  000CB0  8006               	bsf	___lwdiv@quotient,0,c
  1243  000CB2                     l890:
  1244  000CB2  90D8               	bcf	status,0,c
  1245  000CB4  3204               	rrcf	___lwdiv@divisor+1,f,c
  1246  000CB6  3203               	rrcf	___lwdiv@divisor,f,c
  1247  000CB8  2E08               	decfsz	___lwdiv@counter,f,c
  1248  000CBA  D7ED               	goto	l882
  1249  000CBC                     l730:
  1250  000CBC  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  1251  000CC0  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1252  000CC4  0012               	return	
  1253  000CC6                     __end_of___lwdiv:
  1254                           	opt stack 0
  1255                           tblptru	equ	0xFF8
  1256                           tblptrh	equ	0xFF7
  1257                           tblptrl	equ	0xFF6
  1258                           tablat	equ	0xFF5
  1259                           prodh	equ	0xFF4
  1260                           prodl	equ	0xFF3
  1261                           wreg	equ	0xFE8
  1262                           indf2	equ	0xFDF
  1263                           postinc2	equ	0xFDE
  1264                           postdec2	equ	0xFDD
  1265                           fsr2h	equ	0xFDA
  1266                           fsr2l	equ	0xFD9
  1267                           status	equ	0xFD8
  1268                           
  1269 ;; *************** function _putrsXLCD *****************
  1270 ;; Defined at:
  1271 ;;		line 16 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/putrxlcd.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  1274 ;;		 -> main@buffer(6), 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;		None               void
  1279 ;; Registers used:
  1280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1286 ;;      Params:         2       0       0       0       0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1289 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1290 ;;Total ram usage:        2 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    2
  1293 ;; This function calls:
  1294 ;;		_BusyXLCD
  1295 ;;		_WriteDataXLCD
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text6
  1302  000E00                     __ptext6:
  1303                           	opt stack 0
  1304  000E00                     _putrsXLCD:
  1305                           	opt stack 28
  1306                           
  1307                           ;incstack = 0
  1308  000E00  D00E               	goto	l1222
  1309  000E02                     l1216:
  1310  000E02  ECE3  F006         	call	_BusyXLCD	;wreg free
  1311  000E06  0900               	iorlw	0
  1312  000E08  A4D8               	btfss	status,2,c
  1313  000E0A  D7FB               	goto	l1216
  1314  000E0C  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
  1315  000E10  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  1316  000E14  50DF               	movf	indf2,w,c
  1317  000E16  EC86  F006         	call	_WriteDataXLCD
  1318  000E1A  4A02               	infsnz	putrsXLCD@buffer,f,c
  1319  000E1C  2A03               	incf	putrsXLCD@buffer+1,f,c
  1320  000E1E                     l1222:
  1321  000E1E  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
  1322  000E22  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  1323  000E26  50DF               	movf	indf2,w,c
  1324  000E28  B4D8               	btfsc	status,2,c
  1325  000E2A  0012               	return	
  1326  000E2C  D7EA               	goto	l1216
  1327  000E2E                     __end_of_putrsXLCD:
  1328                           	opt stack 0
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           prodh	equ	0xFF4
  1334                           prodl	equ	0xFF3
  1335                           wreg	equ	0xFE8
  1336                           indf2	equ	0xFDF
  1337                           postinc2	equ	0xFDE
  1338                           postdec2	equ	0xFDD
  1339                           fsr2h	equ	0xFDA
  1340                           fsr2l	equ	0xFD9
  1341                           status	equ	0xFD8
  1342                           
  1343 ;; *************** function _WriteDataXLCD *****************
  1344 ;; Defined at:
  1345 ;;		line 16 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/writdata.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  data            1    wreg     unsigned char 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  data            1    0[COMRAM] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;		None               void
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1359 ;;      Params:         0       0       0       0       0       0       0       0       0
  1360 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1362 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1363 ;;Total ram usage:        1 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    1
  1366 ;; This function calls:
  1367 ;;		_DelayFor18TCY
  1368 ;; This function is called by:
  1369 ;;		_putrsXLCD
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text7
  1374  000D0C                     __ptext7:
  1375                           	opt stack 0
  1376  000D0C                     _WriteDataXLCD:
  1377                           	opt stack 28
  1378                           
  1379                           ;incstack = 0
  1380                           ;WriteDataXLCD@data stored from wreg
  1381  000D0C  CFE8 F001          	movff	wreg,WriteDataXLCD@data
  1382  000D10  0EF0               	movlw	240
  1383  000D12  1693               	andwf	3987,f,c	;volatile
  1384  000D14  0EF0               	movlw	240
  1385  000D16  1681               	andwf	3969,f,c	;volatile
  1386  000D18  3801               	swapf	WriteDataXLCD@data,w,c
  1387  000D1A  0B0F               	andlw	15
  1388  000D1C  0B0F               	andlw	15
  1389  000D1E  1281               	iorwf	3969,f,c	;volatile
  1390  000D20  8A8A               	bsf	3978,5,c	;volatile
  1391  000D22  9C8A               	bcf	3978,6,c	;volatile
  1392  000D24  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1393  000D28  888A               	bsf	3978,4,c	;volatile
  1394  000D2A  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1395  000D2E  988A               	bcf	3978,4,c	;volatile
  1396  000D30  0EF0               	movlw	240
  1397  000D32  1681               	andwf	3969,f,c	;volatile
  1398  000D34  5001               	movf	WriteDataXLCD@data,w,c
  1399  000D36  0B0F               	andlw	15
  1400  000D38  1281               	iorwf	3969,f,c	;volatile
  1401  000D3A  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1402  000D3E  888A               	bsf	3978,4,c	;volatile
  1403  000D40  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1404  000D44  988A               	bcf	3978,4,c	;volatile
  1405  000D46  0E0F               	movlw	15
  1406  000D48  1293               	iorwf	3987,f,c	;volatile
  1407  000D4A  0012               	return	
  1408  000D4C                     __end_of_WriteDataXLCD:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           prodh	equ	0xFF4
  1415                           prodl	equ	0xFF3
  1416                           wreg	equ	0xFE8
  1417                           indf2	equ	0xFDF
  1418                           postinc2	equ	0xFDE
  1419                           postdec2	equ	0xFDD
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _OpenXLCD *****************
  1425 ;; Defined at:
  1426 ;;		line 19 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/openxlcd.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  lcdtype         1    wreg     unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  lcdtype         1    4[COMRAM] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0
  1441 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1443 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1444 ;;Total ram usage:        1 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    2
  1447 ;; This function calls:
  1448 ;;		_BusyXLCD
  1449 ;;		_Delay10KTCYx
  1450 ;;		_DelayPORXLCD
  1451 ;;		_SetDDRamAddr
  1452 ;;		_WriteCmdXLCD
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text8
  1459  000B70                     __ptext8:
  1460                           	opt stack 0
  1461  000B70                     _OpenXLCD:
  1462                           	opt stack 28
  1463                           
  1464                           ;incstack = 0
  1465                           ;OpenXLCD@lcdtype stored from wreg
  1466  000B70  CFE8 F005          	movff	wreg,OpenXLCD@lcdtype
  1467  000B74  0EF0               	movlw	240
  1468  000B76  1681               	andwf	3969,f,c	;volatile
  1469  000B78  0EF0               	movlw	240
  1470  000B7A  1693               	andwf	3987,f,c	;volatile
  1471  000B7C  9C93               	bcf	3987,6,c	;volatile
  1472  000B7E  9A93               	bcf	3987,5,c	;volatile
  1473  000B80  9893               	bcf	3987,4,c	;volatile
  1474  000B82  9C8A               	bcf	3978,6,c	;volatile
  1475  000B84  9A8A               	bcf	3978,5,c	;volatile
  1476  000B86  988A               	bcf	3978,4,c	;volatile
  1477  000B88  EC6F  F007         	call	_DelayPORXLCD	;wreg free
  1478  000B8C  0E30               	movlw	48
  1479  000B8E  ECA6  F006         	call	_WriteCmdXLCD
  1480  000B92  0E05               	movlw	5
  1481  000B94  EC55  F007         	call	_Delay10KTCYx
  1482  000B98  0E30               	movlw	48
  1483  000B9A  ECA6  F006         	call	_WriteCmdXLCD
  1484  000B9E  0E01               	movlw	1
  1485  000BA0  EC55  F007         	call	_Delay10KTCYx
  1486  000BA4  0E32               	movlw	50
  1487  000BA6  ECA6  F006         	call	_WriteCmdXLCD
  1488  000BAA                     l1186:
  1489  000BAA  ECE3  F006         	call	_BusyXLCD	;wreg free
  1490  000BAE  0900               	iorlw	0
  1491  000BB0  A4D8               	btfss	status,2,c
  1492  000BB2  D7FB               	goto	l1186
  1493  000BB4                     l1188:
  1494  000BB4  ECE3  F006         	call	_BusyXLCD	;wreg free
  1495  000BB8  0900               	iorlw	0
  1496  000BBA  A4D8               	btfss	status,2,c
  1497  000BBC  D7FB               	goto	l1188
  1498  000BBE  5005               	movf	OpenXLCD@lcdtype,w,c
  1499  000BC0  ECA6  F006         	call	_WriteCmdXLCD
  1500  000BC4                     l1192:
  1501  000BC4  ECE3  F006         	call	_BusyXLCD	;wreg free
  1502  000BC8  0900               	iorlw	0
  1503  000BCA  A4D8               	btfss	status,2,c
  1504  000BCC  D7FB               	goto	l1192
  1505  000BCE  0E08               	movlw	8
  1506  000BD0  ECA6  F006         	call	_WriteCmdXLCD
  1507  000BD4                     l1196:
  1508  000BD4  ECE3  F006         	call	_BusyXLCD	;wreg free
  1509  000BD8  0900               	iorlw	0
  1510  000BDA  A4D8               	btfss	status,2,c
  1511  000BDC  D7FB               	goto	l1196
  1512  000BDE  0E0F               	movlw	15
  1513  000BE0  ECA6  F006         	call	_WriteCmdXLCD
  1514  000BE4                     l1200:
  1515  000BE4  ECE3  F006         	call	_BusyXLCD	;wreg free
  1516  000BE8  0900               	iorlw	0
  1517  000BEA  A4D8               	btfss	status,2,c
  1518  000BEC  D7FB               	goto	l1200
  1519  000BEE  0E01               	movlw	1
  1520  000BF0  ECA6  F006         	call	_WriteCmdXLCD
  1521  000BF4                     l1204:
  1522  000BF4  ECE3  F006         	call	_BusyXLCD	;wreg free
  1523  000BF8  0900               	iorlw	0
  1524  000BFA  A4D8               	btfss	status,2,c
  1525  000BFC  D7FB               	goto	l1204
  1526  000BFE  0E04               	movlw	4
  1527  000C00  ECA6  F006         	call	_WriteCmdXLCD
  1528  000C04                     l1208:
  1529  000C04  ECE3  F006         	call	_BusyXLCD	;wreg free
  1530  000C08  0900               	iorlw	0
  1531  000C0A  A4D8               	btfss	status,2,c
  1532  000C0C  D7FB               	goto	l1208
  1533  000C0E  0E80               	movlw	128
  1534  000C10  EC0B  F006         	call	_SetDDRamAddr
  1535  000C14  0012               	return	
  1536  000C16                     __end_of_OpenXLCD:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           prodh	equ	0xFF4
  1543                           prodl	equ	0xFF3
  1544                           wreg	equ	0xFE8
  1545                           indf2	equ	0xFDF
  1546                           postinc2	equ	0xFDE
  1547                           postdec2	equ	0xFDD
  1548                           fsr2h	equ	0xFDA
  1549                           fsr2l	equ	0xFD9
  1550                           status	equ	0xFD8
  1551                           
  1552 ;; *************** function _WriteCmdXLCD *****************
  1553 ;; Defined at:
  1554 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/wcmdxlcd.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  cmd             1    wreg     unsigned char 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  cmd             1    0[COMRAM] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;		None               void
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1568 ;;      Params:         0       0       0       0       0       0       0       0       0
  1569 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1571 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1572 ;;Total ram usage:        1 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    1
  1575 ;; This function calls:
  1576 ;;		_DelayFor18TCY
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;;		_OpenXLCD
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text9
  1584  000D4C                     __ptext9:
  1585                           	opt stack 0
  1586  000D4C                     _WriteCmdXLCD:
  1587                           	opt stack 29
  1588                           
  1589                           ;incstack = 0
  1590                           ;WriteCmdXLCD@cmd stored from wreg
  1591  000D4C  CFE8 F001          	movff	wreg,WriteCmdXLCD@cmd
  1592  000D50  0EF0               	movlw	240
  1593  000D52  1693               	andwf	3987,f,c	;volatile
  1594  000D54  0EF0               	movlw	240
  1595  000D56  1681               	andwf	3969,f,c	;volatile
  1596  000D58  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1597  000D5A  0B0F               	andlw	15
  1598  000D5C  0B0F               	andlw	15
  1599  000D5E  1281               	iorwf	3969,f,c	;volatile
  1600  000D60  9C8A               	bcf	3978,6,c	;volatile
  1601  000D62  9A8A               	bcf	3978,5,c	;volatile
  1602  000D64  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1603  000D68  888A               	bsf	3978,4,c	;volatile
  1604  000D6A  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1605  000D6E  988A               	bcf	3978,4,c	;volatile
  1606  000D70  0EF0               	movlw	240
  1607  000D72  1681               	andwf	3969,f,c	;volatile
  1608  000D74  5001               	movf	WriteCmdXLCD@cmd,w,c
  1609  000D76  0B0F               	andlw	15
  1610  000D78  1281               	iorwf	3969,f,c	;volatile
  1611  000D7A  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1612  000D7E  888A               	bsf	3978,4,c	;volatile
  1613  000D80  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1614  000D84  988A               	bcf	3978,4,c	;volatile
  1615  000D86  0E0F               	movlw	15
  1616  000D88  1293               	iorwf	3987,f,c	;volatile
  1617  000D8A  0012               	return	
  1618  000D8C                     __end_of_WriteCmdXLCD:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           prodh	equ	0xFF4
  1625                           prodl	equ	0xFF3
  1626                           wreg	equ	0xFE8
  1627                           indf2	equ	0xFDF
  1628                           postinc2	equ	0xFDE
  1629                           postdec2	equ	0xFDD
  1630                           fsr2h	equ	0xFDA
  1631                           fsr2l	equ	0xFD9
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _SetDDRamAddr *****************
  1635 ;; Defined at:
  1636 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/setddram.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  DDaddr          1    wreg     unsigned char 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;		None               void
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0
  1651 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1652 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1653 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1654 ;;Total ram usage:        4 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    1
  1657 ;; This function calls:
  1658 ;;		_DelayFor18TCY
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;;		_OpenXLCD
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text10
  1666  000C16                     __ptext10:
  1667                           	opt stack 0
  1668  000C16                     _SetDDRamAddr:
  1669                           	opt stack 29
  1670                           
  1671                           ;incstack = 0
  1672                           ;SetDDRamAddr@DDaddr stored from wreg
  1673  000C16  CFE8 F004          	movff	wreg,SetDDRamAddr@DDaddr
  1674  000C1A  0EF0               	movlw	240
  1675  000C1C  1693               	andwf	3987,f,c	;volatile
  1676  000C1E  0EF0               	movlw	240
  1677  000C20  1681               	andwf	3969,f,c	;volatile
  1678  000C22  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1679  000C24  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1680  000C26  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1681  000C28  0E80               	movlw	128
  1682  000C2A  1201               	iorwf	??_SetDDRamAddr,f,c
  1683  000C2C  0E00               	movlw	0
  1684  000C2E  1202               	iorwf	??_SetDDRamAddr+1,f,c
  1685  000C30  0E04               	movlw	4
  1686  000C32  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1687  000C34                     u115:
  1688  000C34  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1689  000C36  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1690  000C38  3201               	rrcf	??_SetDDRamAddr,f,c
  1691  000C3A  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1692  000C3C  D7FB               	goto	u115
  1693  000C3E  5001               	movf	??_SetDDRamAddr,w,c
  1694  000C40  0B0F               	andlw	15
  1695  000C42  1281               	iorwf	3969,f,c	;volatile
  1696  000C44  9C8A               	bcf	3978,6,c	;volatile
  1697  000C46  9A8A               	bcf	3978,5,c	;volatile
  1698  000C48  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1699  000C4C  888A               	bsf	3978,4,c	;volatile
  1700  000C4E  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1701  000C52  988A               	bcf	3978,4,c	;volatile
  1702  000C54  0EF0               	movlw	240
  1703  000C56  1681               	andwf	3969,f,c	;volatile
  1704  000C58  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1705  000C5A  0B0F               	andlw	15
  1706  000C5C  1281               	iorwf	3969,f,c	;volatile
  1707  000C5E  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1708  000C62  888A               	bsf	3978,4,c	;volatile
  1709  000C64  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1710  000C68  988A               	bcf	3978,4,c	;volatile
  1711  000C6A  0E0F               	movlw	15
  1712  000C6C  1293               	iorwf	3987,f,c	;volatile
  1713  000C6E  0012               	return	
  1714  000C70                     __end_of_SetDDRamAddr:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           prodh	equ	0xFF4
  1721                           prodl	equ	0xFF3
  1722                           wreg	equ	0xFE8
  1723                           indf2	equ	0xFDF
  1724                           postinc2	equ	0xFDE
  1725                           postdec2	equ	0xFDD
  1726                           fsr2h	equ	0xFDA
  1727                           fsr2l	equ	0xFD9
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _DelayPORXLCD *****************
  1731 ;; Defined at:
  1732 ;;		line 122 in file "xlcd_dyn_display_main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    1
  1753 ;; This function calls:
  1754 ;;		_Delay1KTCYx
  1755 ;; This function is called by:
  1756 ;;		_OpenXLCD
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text11
  1761  000EDE                     __ptext11:
  1762                           	opt stack 0
  1763  000EDE                     _DelayPORXLCD:
  1764                           	opt stack 28
  1765                           
  1766                           ;xlcd_dyn_display_main.c: 128: Delay1KTCYx(110);
  1767                           
  1768                           ;incstack = 0
  1769  000EDE  0E6E               	movlw	110
  1770  000EE0  EC61  F007         	call	_Delay1KTCYx
  1771                           
  1772                           ;xlcd_dyn_display_main.c: 130: return;
  1773  000EE4  0012               	return	
  1774  000EE6                     __end_of_DelayPORXLCD:
  1775                           	opt stack 0
  1776                           tblptru	equ	0xFF8
  1777                           tblptrh	equ	0xFF7
  1778                           tblptrl	equ	0xFF6
  1779                           tablat	equ	0xFF5
  1780                           prodh	equ	0xFF4
  1781                           prodl	equ	0xFF3
  1782                           wreg	equ	0xFE8
  1783                           indf2	equ	0xFDF
  1784                           postinc2	equ	0xFDE
  1785                           postdec2	equ	0xFDD
  1786                           fsr2h	equ	0xFDA
  1787                           fsr2l	equ	0xFD9
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _Delay1KTCYx *****************
  1791 ;; Defined at:
  1792 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  unit            1    wreg     unsigned char 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  unit            1    0[COMRAM] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;		None               void
  1799 ;; Registers used:
  1800 ;;		wreg
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1806 ;;      Params:         0       0       0       0       0       0       0       0       0
  1807 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1809 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1810 ;;Total ram usage:        1 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_DelayPORXLCD
  1816 ;;		_DelayXLCD
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text12
  1821  000EC2                     __ptext12:
  1822                           	opt stack 0
  1823  000EC2                     _Delay1KTCYx:
  1824                           	opt stack 28
  1825                           
  1826                           ;incstack = 0
  1827                           ;Delay1KTCYx@unit stored from wreg
  1828  000EC2  CFE8 F001          	movff	wreg,Delay1KTCYx@unit
  1829  000EC6                     l423:
  1830  000EC6  0EFA               	movlw	250
  1831  000EC8                     u667:
  1832  000EC8  F000               	nop	
  1833  000ECA  2EE8               	decfsz	wreg,f,c
  1834  000ECC  D7FD               	goto	u667
  1835  000ECE  2E01               	decfsz	Delay1KTCYx@unit,f,c
  1836  000ED0  D7FA               	goto	l423
  1837  000ED2  0012               	return	
  1838  000ED4                     __end_of_Delay1KTCYx:
  1839                           	opt stack 0
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           prodh	equ	0xFF4
  1845                           prodl	equ	0xFF3
  1846                           wreg	equ	0xFE8
  1847                           indf2	equ	0xFDF
  1848                           postinc2	equ	0xFDE
  1849                           postdec2	equ	0xFDD
  1850                           fsr2h	equ	0xFDA
  1851                           fsr2l	equ	0xFD9
  1852                           status	equ	0xFD8
  1853                           
  1854 ;; *************** function _Delay10KTCYx *****************
  1855 ;; Defined at:
  1856 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/pic18/d10ktcyx.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  unit            1    wreg     unsigned char 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  unit            1    1[COMRAM] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;		None               void
  1863 ;; Registers used:
  1864 ;;		wreg
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1870 ;;      Params:         0       0       0       0       0       0       0       0       0
  1871 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1872 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1873 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1874 ;;Total ram usage:        2 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_OpenXLCD
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text13
  1884  000EAA                     __ptext13:
  1885                           	opt stack 0
  1886  000EAA                     _Delay10KTCYx:
  1887                           	opt stack 29
  1888                           
  1889                           ;incstack = 0
  1890                           ;Delay10KTCYx@unit stored from wreg
  1891  000EAA  CFE8 F002          	movff	wreg,Delay10KTCYx@unit
  1892  000EAE                     l416:
  1893  000EAE  0E0D               	movlw	13
  1894  000EB0  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1895  000EB2  0EFC               	movlw	252
  1896  000EB4                     u677:
  1897  000EB4  2EE8               	decfsz	wreg,f,c
  1898  000EB6  D7FE               	goto	u677
  1899  000EB8  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1900  000EBA  D7FC               	goto	u677
  1901  000EBC  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1902  000EBE  D7F7               	goto	l416
  1903  000EC0  0012               	return	
  1904  000EC2                     __end_of_Delay10KTCYx:
  1905                           	opt stack 0
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           prodh	equ	0xFF4
  1911                           prodl	equ	0xFF3
  1912                           wreg	equ	0xFE8
  1913                           indf2	equ	0xFDF
  1914                           postinc2	equ	0xFDE
  1915                           postdec2	equ	0xFDD
  1916                           fsr2h	equ	0xFDA
  1917                           fsr2l	equ	0xFD9
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _BusyXLCD *****************
  1921 ;; Defined at:
  1922 ;;		line 11 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/busyxlcd.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      unsigned char 
  1929 ;; Registers used:
  1930 ;;		wreg, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    1
  1943 ;; This function calls:
  1944 ;;		_DelayFor18TCY
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;;		_OpenXLCD
  1948 ;;		_putrsXLCD
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text14
  1953  000DC6                     __ptext14:
  1954                           	opt stack 0
  1955  000DC6                     _BusyXLCD:
  1956                           	opt stack 28
  1957                           
  1958                           ;incstack = 0
  1959  000DC6  8C8A               	bsf	3978,6,c	;volatile
  1960  000DC8  9A8A               	bcf	3978,5,c	;volatile
  1961  000DCA  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1962  000DCE  888A               	bsf	3978,4,c	;volatile
  1963  000DD0  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1964  000DD4  A681               	btfss	3969,3,c	;volatile
  1965  000DD6  D00A               	goto	l115
  1966  000DD8  988A               	bcf	3978,4,c	;volatile
  1967  000DDA  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1968  000DDE  888A               	bsf	3978,4,c	;volatile
  1969  000DE0  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1970  000DE4  988A               	bcf	3978,4,c	;volatile
  1971  000DE6  9C8A               	bcf	3978,6,c	;volatile
  1972  000DE8  0E01               	movlw	1
  1973  000DEA  D009               	goto	l116
  1974  000DEC                     l115:
  1975  000DEC  988A               	bcf	3978,4,c	;volatile
  1976  000DEE  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1977  000DF2  888A               	bsf	3978,4,c	;volatile
  1978  000DF4  EC42  F007         	call	_DelayFor18TCY	;wreg free
  1979  000DF8  988A               	bcf	3978,4,c	;volatile
  1980  000DFA  9C8A               	bcf	3978,6,c	;volatile
  1981  000DFC  0E00               	movlw	0
  1982  000DFE                     l116:
  1983  000DFE  0012               	return	
  1984  000E00                     __end_of_BusyXLCD:
  1985                           	opt stack 0
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           prodh	equ	0xFF4
  1991                           prodl	equ	0xFF3
  1992                           wreg	equ	0xFE8
  1993                           indf2	equ	0xFDF
  1994                           postinc2	equ	0xFDE
  1995                           postdec2	equ	0xFDD
  1996                           fsr2h	equ	0xFDA
  1997                           fsr2l	equ	0xFD9
  1998                           status	equ	0xFD8
  1999                           
  2000 ;; *************** function _DelayFor18TCY *****************
  2001 ;; Defined at:
  2002 ;;		line 100 in file "xlcd_dyn_display_main.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;		None               void
  2009 ;; Registers used:
  2010 ;;		None
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_BusyXLCD
  2026 ;;		_SetDDRamAddr
  2027 ;;		_WriteCmdXLCD
  2028 ;;		_WriteDataXLCD
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text15
  2033  000E84                     __ptext15:
  2034                           	opt stack 0
  2035  000E84                     _DelayFor18TCY:
  2036                           	opt stack 28
  2037                           
  2038                           ;xlcd_dyn_display_main.c: 102: __nop();
  2039                           
  2040                           ;incstack = 0
  2041  000E84  F000               	nop	
  2042                           
  2043                           ;xlcd_dyn_display_main.c: 103: __nop();
  2044  000E86  F000               	nop	
  2045                           
  2046                           ;xlcd_dyn_display_main.c: 104: __nop();
  2047  000E88  F000               	nop	
  2048                           
  2049                           ;xlcd_dyn_display_main.c: 105: __nop();
  2050  000E8A  F000               	nop	
  2051                           
  2052                           ;xlcd_dyn_display_main.c: 106: __nop();
  2053  000E8C  F000               	nop	
  2054                           
  2055                           ;xlcd_dyn_display_main.c: 107: __nop();
  2056  000E8E  F000               	nop	
  2057                           
  2058                           ;xlcd_dyn_display_main.c: 108: __nop();
  2059  000E90  F000               	nop	
  2060                           
  2061                           ;xlcd_dyn_display_main.c: 109: __nop();
  2062  000E92  F000               	nop	
  2063                           
  2064                           ;xlcd_dyn_display_main.c: 110: __nop();
  2065  000E94  F000               	nop	
  2066                           
  2067                           ;xlcd_dyn_display_main.c: 111: __nop();
  2068  000E96  F000               	nop	
  2069                           
  2070                           ;xlcd_dyn_display_main.c: 112: __nop();
  2071  000E98  F000               	nop	
  2072                           
  2073                           ;xlcd_dyn_display_main.c: 113: __nop();
  2074  000E9A  F000               	nop	
  2075                           
  2076                           ;xlcd_dyn_display_main.c: 114: __nop();
  2077  000E9C  F000               	nop	
  2078                           
  2079                           ;xlcd_dyn_display_main.c: 115: __nop();
  2080  000E9E  F000               	nop	
  2081                           
  2082                           ;xlcd_dyn_display_main.c: 116: __nop();
  2083  000EA0  F000               	nop	
  2084                           
  2085                           ;xlcd_dyn_display_main.c: 117: __nop();
  2086  000EA2  F000               	nop	
  2087                           
  2088                           ;xlcd_dyn_display_main.c: 118: __nop();
  2089  000EA4  F000               	nop	
  2090                           
  2091                           ;xlcd_dyn_display_main.c: 119: __nop();
  2092  000EA6  F000               	nop	
  2093  000EA8  0012               	return	
  2094  000EAA                     __end_of_DelayFor18TCY:
  2095                           	opt stack 0
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           prodh	equ	0xFF4
  2101                           prodl	equ	0xFF3
  2102                           wreg	equ	0xFE8
  2103                           indf2	equ	0xFDF
  2104                           postinc2	equ	0xFDE
  2105                           postdec2	equ	0xFDD
  2106                           fsr2h	equ	0xFDA
  2107                           fsr2l	equ	0xFD9
  2108                           status	equ	0xFD8
  2109                           
  2110 ;; *************** function _Delay_ms *****************
  2111 ;; Defined at:
  2112 ;;		line 144 in file "xlcd_dyn_display_main.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  ms              2    0[COMRAM] unsigned int 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  i               2    3[COMRAM] unsigned int 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;		None               void
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2126 ;;      Params:         2       0       0       0       0       0       0       0       0
  2127 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2128 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2129 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2130 ;;Total ram usage:        5 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_main
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text16
  2140  000E2E                     __ptext16:
  2141                           	opt stack 0
  2142  000E2E                     _Delay_ms:
  2143                           	opt stack 30
  2144                           
  2145                           ;xlcd_dyn_display_main.c: 146: for (unsigned int i=0; i<ms; i++)
  2146                           
  2147                           ;incstack = 0
  2148  000E2E  0E00               	movlw	0
  2149  000E30  6E05               	movwf	Delay_ms@i+1,c
  2150  000E32  0E00               	movlw	0
  2151  000E34  6E04               	movwf	Delay_ms@i,c
  2152  000E36  D00A               	goto	l52
  2153  000E38                     l902:
  2154                           
  2155                           ;xlcd_dyn_display_main.c: 147: _delay((unsigned long)((1)*(20000000/4000.0)));
  2156  000E38  0E07               	movlw	7
  2157  000E3A  6E03               	movwf	??_Delay_ms& (0+255),c
  2158  000E3C  0E7D               	movlw	125
  2159  000E3E                     u687:
  2160  000E3E  2EE8               	decfsz	wreg,f,c
  2161  000E40  D7FE               	goto	u687
  2162  000E42  2E03               	decfsz	??_Delay_ms& (0+255),f,c
  2163  000E44  D7FC               	goto	u687
  2164  000E46  F000               	nop	
  2165  000E48  4A04               	infsnz	Delay_ms@i,f,c
  2166  000E4A  2A05               	incf	Delay_ms@i+1,f,c
  2167  000E4C                     l52:
  2168  000E4C  5001               	movf	Delay_ms@ms,w,c
  2169  000E4E  5C04               	subwf	Delay_ms@i,w,c
  2170  000E50  5002               	movf	Delay_ms@ms+1,w,c
  2171  000E52  5805               	subwfb	Delay_ms@i+1,w,c
  2172  000E54  B0D8               	btfsc	status,0,c
  2173  000E56  0012               	return	
  2174  000E58  D7EF               	goto	l902
  2175  000E5A                     __end_of_Delay_ms:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodh	equ	0xFF4
  2182                           prodl	equ	0xFF3
  2183                           wreg	equ	0xFE8
  2184                           indf2	equ	0xFDF
  2185                           postinc2	equ	0xFDE
  2186                           postdec2	equ	0xFDD
  2187                           fsr2h	equ	0xFDA
  2188                           fsr2l	equ	0xFD9
  2189                           status	equ	0xFD8
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           prodh	equ	0xFF4
  2195                           prodl	equ	0xFF3
  2196                           wreg	equ	0xFE8
  2197                           indf2	equ	0xFDF
  2198                           postinc2	equ	0xFDE
  2199                           postdec2	equ	0xFDD
  2200                           fsr2h	equ	0xFDA
  2201                           fsr2l	equ	0xFD9
  2202                           status	equ	0xFD8
  2203                           
  2204                           	psect	rparam
  2205  0000                     tblptru	equ	0xFF8
  2206                           tblptrh	equ	0xFF7
  2207                           tblptrl	equ	0xFF6
  2208                           tablat	equ	0xFF5
  2209                           prodh	equ	0xFF4
  2210                           prodl	equ	0xFF3
  2211                           wreg	equ	0xFE8
  2212                           indf2	equ	0xFDF
  2213                           postinc2	equ	0xFDE
  2214                           postdec2	equ	0xFDD
  2215                           fsr2h	equ	0xFDA
  2216                           fsr2l	equ	0xFD9
  2217                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 6
		 -> main@buffer(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 6
		 -> main@buffer(COMRAM[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S286$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putrsXLCD->_WriteDataXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    11      5    2147
                                             36 COMRAM    16    11      5
                           _BusyXLCD
                           _Delay_ms
                           _OpenXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    1655
                                             14 COMRAM    22    16      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     191
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     191
                                              8 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     191
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     103
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     105
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         0     0      0      15
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             5     3      2     116
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyXLCD
     _DelayFor18TCY
   _Delay_ms
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _Delay10KTCYx
     _DelayPORXLCD
       _Delay1KTCYx
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _SetDDRamAddr
     _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     34      34       1       54.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Sep 13 22:44:50 2014

                     l52 0E4C      ___wmul@multiplicand 0003                      l115 0DEC  
                    l116 0DFE                      l423 0EC6                      l416 0EAE  
                    l730 0CBC                      l740 0D02                      l902 0E38  
                    l920 0CD8                      l922 0CE0                      l924 0CE4  
                    l880 0C92                      l928 0CF8                      l890 0CB2  
                    l882 0C96                      l878 0C8A                      u115 0C34  
                    u657 0B14                      u667 0EC8                      u677 0EB4  
                    u687 0E3E             __CFG_BOR$OFF 000000    __size_of_WriteCmdXLCD 0040  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1200 0BE4                     l1204 0BF4  
                   l1222 0E1E                     l1310 08FE                     l1208 0C04  
                   l1216 0E02                     l1320 0936                     l1340 098C  
                   l1308 08D8                     l1412 0B1E                     l1334 0972  
                   l1406 0AF8                     l1192 0BC4                     l1272 0E7C  
                   l1344 09B0                     l1186 0BAA                     l1370 0A1E  
                   l1354 09D8                     l1362 09F8                     l1346 09B8  
                   l1196 0BD4                     l1188 0BB4                     l1364 0A00  
                   l1292 084E                     l1284 0836                     l1278 081C  
                   l1384 0A92                     l1376 0A3A                     l1288 0848  
                   l1378 0A40                     l1298 087C                     l1386 0A9A  
                   l1388 0AB0                     STR_1 080B                     _main 0ABE  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
 __size_of_WriteDataXLCD 0040                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           _WriteCmdXLCD 0D4C              _Delay1KTCYx 0EC2            __CFG_PLLDIV$1 000000  
          ?_SetDDRamAddr 0001                    ?_main 0025          __end_of___lwdiv 0CC6  
        __end_of___lwmod 0D0C                    _PORTB 000F81            __CFG_USBDIV$1 000000  
                  _TRISB 000F93    __size_of_Delay10KTCYx 0018            __CFG_PWRT$OFF 000000  
         __CFG_FCMEN$OFF 000000          __end_of_dpowers 080B          __end_of_isdigit 0E84  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 0ABE  
       __end_of_Delay_ms 0E5A          __initialization 0ED4             __end_of_main 0B70  
       __end_of_BusyXLCD 0E00             _Delay10KTCYx 0EAA    __size_of_DelayPORXLCD 0008  
         ??_SetDDRamAddr 0001         __end_of_OpenXLCD 0C16                   ??_main 002A  
          __activetblptr 000002            _WriteDataXLCD 0D0C                   _ADCON1 000FC1  
           _DelayPORXLCD 0EDE           __CFG_XINST$OFF 000000                   ___wmul 0D8C  
         __CFG_STVREN$ON 000000                ??___lwdiv 0005                ??___lwmod 000D  
         ?_WriteDataXLCD 0001                ??_isdigit 0001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_sprintf 0015               __accesstop 0060  __end_of__initialization 0ED4  
        __CFG_PBADEN$OFF 000000           __pcstackCOMRAM 0001                ?_Delay_ms 0001  
 __size_of_DelayFor18TCY 0026             sprintf@width 0022                ?_BusyXLCD 0001  
        WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 0C70                ?_OpenXLCD 0001  
      WriteDataXLCD@data 0001                  ?___wmul 0001          ??_WriteDataXLCD 0001  
           ?_Delay1KTCYx 0001               ??_Delay_ms 0003       __size_of_putrsXLCD 002E  
             ??_BusyXLCD 0001          __CFG_VREGEN$OFF 000000               ??_OpenXLCD 0005  
                __Hparam 0000                  __Lparam 0000            _DelayFor18TCY 0E84  
        __size_of___wmul 003A                  ___lwdiv 0C70                  ___lwmod 0CC6  
              _CMCONbits 000FB4             __psmallconst 0800                  __pcinit 0ED4  
        putrsXLCD@buffer 0002                  __ramtop 0800                  __ptext0 0ABE  
                __ptext1 0812                  __ptext2 0E5A                  __ptext3 0D8C  
                __ptext4 0CC6                  __ptext5 0C70                  __ptext6 0E00  
                __ptext7 0D0C                  __ptext8 0B70                  __ptext9 0D4C  
                _dpowers 0801                  _isdigit 0E5A                  main@max 002B  
                _sprintf 0812     end_of_initialization 0ED4                Delay_ms@i 0004  
          __Lmediumconst 0000           ?_DelayFor18TCY 0001                  postdec2 000FDD  
                postinc2 000FDE        __end_of_putrsXLCD 0E2E                _TRISBbits 000F93  
  __size_of_SetDDRamAddr 005A               main@buffer 002D           __end_of___wmul 0DC6  
           _SetDDRamAddr 0C16     __size_of_Delay1KTCYx 0012       SetDDRamAddr@DDaddr 0004  
    start_initialization 0ED4        __size_of_Delay_ms 002C        __size_of_BusyXLCD 003A  
        ??_DelayFor18TCY 0001        __size_of_OpenXLCD 00A6                 ??___wmul 0005  
          ?_WriteCmdXLCD 0001         __CFG_LPT1OSC$OFF 000000      __end_of__stringdata 0810  
        Delay1KTCYx@unit 0001              sprintf@_val 001C              sprintf@flag 0021  
            sprintf@prec 001B         ___lwdiv@dividend 0001           ??_WriteCmdXLCD 0001  
          ?_Delay10KTCYx 0001                 ?___lwdiv 0001                 ?___lwmod 0009  
  __end_of_WriteDataXLCD 0D4C              __smallconst 0800                 ?_isdigit 0001  
       ___lwdiv@quotient 0006                 ?_sprintf 000F           ___wmul@product 0005  
               _LATBbits 000F8A            ?_DelayPORXLCD 0001          OpenXLCD@lcdtype 0005  
       __CFG_WDTPS$32768 000000           ??_Delay10KTCYx 0001               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1              __stringdata 080B        ___wmul@multiplier 0001  
              _putrsXLCD 0E00                 _Delay_ms 0E2E         Delay10KTCYx@unit 0002  
               _BusyXLCD 0DC6           ??_DelayPORXLCD 0002                 _OpenXLCD 0B70  
               __Hrparam 0000                 __Lrparam 0000         __size_of___lwdiv 0056  
       __size_of___lwmod 0046              _isdigit$907 0002               ?_putrsXLCD 0002  
       __size_of_isdigit 002A          ___lwdiv@divisor 0003          ___lwdiv@counter 0008  
               __ptext10 0C16                 __ptext11 0EDE                 __ptext12 0EC2  
               __ptext13 0EAA                 __ptext14 0DC6                 __ptext15 0E84  
               __ptext16 0E2E     __end_of_WriteCmdXLCD 0D8C         __size_of_sprintf 02AC  
          __size_of_main 00B2            ??_Delay1KTCYx 0001                 main@argc 0025  
               main@argv 0027                 main@cont 0033    __CFG_CPUDIV$OSC1_PLL2 000000  
             Delay_ms@ms 0001                 isdigit@c 0003     __end_of_Delay10KTCYx 0EC2  
              sprintf@ap 0019                sprintf@sp 000F         ___lwmod@dividend 0009  
  __end_of_DelayFor18TCY 0EAA                 sprintf@c 0024                 sprintf@f 0011  
   __end_of_DelayPORXLCD 0EE6              ??_putrsXLCD 0004          ___lwmod@divisor 000B  
    __end_of_Delay1KTCYx 0ED4          ___lwmod@counter 000E  
