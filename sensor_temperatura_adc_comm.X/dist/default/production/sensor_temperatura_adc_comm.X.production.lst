

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Sep 26 02:07:57 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	smallconst
    66  000800                     __psmallconst:
    67                           	opt stack 0
    68  000800  00                 	db	0
    69  000801                     _dpowers:
    70                           	opt stack 0
    71  000801  0001               	dw	1
    72  000803  0000               	dw	0
    73  000805  000A               	dw	10
    74  000807  0000               	dw	0
    75  000809  0064               	dw	100
    76  00080B  0000               	dw	0
    77  00080D  03E8               	dw	1000
    78  00080F  0000               	dw	0
    79  000811  2710               	dw	10000
    80  000813  0000               	dw	0
    81  000815  86A0               	dw	34464
    82  000817  0001               	dw	1
    83  000819  4240               	dw	16960
    84  00081B  000F               	dw	15
    85  00081D  9680               	dw	38528
    86  00081F  0098               	dw	152
    87  000821  E100               	dw	57600
    88  000823  05F5               	dw	1525
    89  000825  CA00               	dw	51712
    90  000827  3B9A               	dw	15258
    91  000829                     __end_of_dpowers:
    92                           	opt stack 0
    93  000829                     __npowers_:
    94                           	opt stack 0
    95  000829  00                 	db	0
    96  00082A  80                 	db	128
    97  00082B  3F                 	db	63
    98  00082C  CD                 	db	205
    99  00082D  CC                 	db	204
   100  00082E  3D                 	db	61
   101  00082F  D7                 	db	215
   102  000830  23                 	db	35
   103  000831  3C                 	db	60
   104  000832  12                 	db	18
   105  000833  83                 	db	131
   106  000834  3A                 	db	58
   107  000835  B7                 	db	183
   108  000836  D1                 	db	209
   109  000837  38                 	db	56
   110  000838  C6                 	db	198
   111  000839  27                 	db	39
   112  00083A  37                 	db	55
   113  00083B  38                 	db	56
   114  00083C  86                 	db	134
   115  00083D  35                 	db	53
   116  00083E  C0                 	db	192
   117  00083F  D6                 	db	214
   118  000840  33                 	db	51
   119  000841  CC                 	db	204
   120  000842  2B                 	db	43
   121  000843  32                 	db	50
   122  000844  70                 	db	112
   123  000845  89                 	db	137
   124  000846  30                 	db	48
   125  000847  E7                 	db	231
   126  000848  DB                 	db	219
   127  000849  2E                 	db	46
   128  00084A  E5                 	db	229
   129  00084B  3C                 	db	60
   130  00084C  1E                 	db	30
   131  00084D  42                 	db	66
   132  00084E  A2                 	db	162
   133  00084F  0D                 	db	13
   134  000850                     __end_of__npowers_:
   135                           	opt stack 0
   136  000850                     __powers_:
   137                           	opt stack 0
   138  000850  00                 	db	0
   139  000851  80                 	db	128
   140  000852  3F                 	db	63
   141  000853  00                 	db	0
   142  000854  20                 	db	32
   143  000855  41                 	db	65
   144  000856  00                 	db	0
   145  000857  C8                 	db	200
   146  000858  42                 	db	66
   147  000859  00                 	db	0
   148  00085A  7A                 	db	122
   149  00085B  44                 	db	68
   150  00085C  40                 	db	64
   151  00085D  1C                 	db	28
   152  00085E  46                 	db	70
   153  00085F  50                 	db	80
   154  000860  C3                 	db	195
   155  000861  47                 	db	71
   156  000862  24                 	db	36
   157  000863  74                 	db	116
   158  000864  49                 	db	73
   159  000865  97                 	db	151
   160  000866  18                 	db	24
   161  000867  4B                 	db	75
   162  000868  BC                 	db	188
   163  000869  BE                 	db	190
   164  00086A  4C                 	db	76
   165  00086B  6B                 	db	107
   166  00086C  6E                 	db	110
   167  00086D  4E                 	db	78
   168  00086E  03                 	db	3
   169  00086F  15                 	db	21
   170  000870  50                 	db	80
   171  000871  79                 	db	121
   172  000872  AD                 	db	173
   173  000873  60                 	db	96
   174  000874  F3                 	db	243
   175  000875  49                 	db	73
   176  000876  71                 	db	113
   177  000877                     __end_of__powers_:
   178                           	opt stack 0
   179  0000                     _ADCON0	set	4034
   180  0000                     _ADCON0bits	set	4034
   181  0000                     _ADCON1	set	4033
   182  0000                     _ADCON2	set	4032
   183  0000                     _ADRESH	set	4036
   184  0000                     _ADRESL	set	4035
   185  0000                     _CMCONbits	set	4020
   186  0000                     _INTCONbits	set	4082
   187  0000                     _LATBbits	set	3978
   188  0000                     _PIE1bits	set	3997
   189  0000                     _PIR1bits	set	3998
   190  0000                     _PORTB	set	3969
   191  0000                     _RCREG	set	4014
   192  0000                     _RCSTA	set	4011
   193  0000                     _RCSTAbits	set	4011
   194  0000                     _SPBRG	set	4015
   195  0000                     _SPBRGH	set	4016
   196  0000                     _TRISAbits	set	3986
   197  0000                     _TRISB	set	3987
   198  0000                     _TRISBbits	set	3987
   199  0000                     _TRISCbits	set	3988
   200  0000                     _TXREG	set	4013
   201  0000                     _TXSTA	set	4012
   202  0000                     _TXSTAbits	set	4012
   203  0000                     _PEIE	set	32662
   204  0000                     _RCIE	set	31981
   205  0000                     _RCIF	set	31989
   206  0000                     _RCIP	set	31997
   207  000877                     __stringdata:
   208                           	opt stack 0
   209  000877                     STR_1:
   210  000877  52                 	db	82	;'R'
   211  000878  65                 	db	101	;'e'
   212  000879  61                 	db	97	;'a'
   213  00087A  64                 	db	100	;'d'
   214  00087B  79                 	db	121	;'y'
   215  00087C  20                 	db	32
   216  00087D  0A                 	db	10
   217  00087E  0D                 	db	13
   218  00087F  00                 	db	0
   219  000880                     STR_2:
   220  000880  54                 	db	84	;'T'
   221  000881  65                 	db	101	;'e'
   222  000882  6D                 	db	109	;'m'
   223  000883  70                 	db	112	;'p'
   224  000884  3A                 	db	58	;':'
   225  000885  20                 	db	32
   226  000886  00                 	db	0
   227  000887                     STR_4:
   228  000887  25                 	db	37
   229  000888  32                 	db	50	;'2'
   230  000889  2E                 	db	46
   231  00088A  31                 	db	49	;'1'
   232  00088B  66                 	db	102	;'f'
   233  00088C  00                 	db	0
   234  00088D                     STR_3:
   235  00088D  43                 	db	67	;'C'
   236  00088E  00                 	db	0
   237  00088F                     __end_of__stringdata:
   238                           	opt stack 0
   239                           
   240                           ; #config settings
   241  00088F  00                 	db	0	; dummy byte at the end
   242  0000                     
   243                           	psect	nvBANK0
   244  0000AE                     __pnvBANK0:
   245                           	opt stack 0
   246  0000AE                     _pBuffer:
   247                           	opt stack 0
   248  0000AE                     	ds	2
   249                           
   250                           	psect	cinit
   251  002D3A                     __pcinit:
   252                           	opt stack 0
   253  002D3A                     start_initialization:
   254                           	opt stack 0
   255  002D3A                     __initialization:
   256                           	opt stack 0
   257                           
   258                           ; Clear objects allocated to BANK0 (6 bytes)
   259  002D3A  0100               	movlb	0
   260  002D3C  6BAD               	clrf	(__pbssBANK0+5)& (0+255),b
   261  002D3E  6BAC               	clrf	(__pbssBANK0+4)& (0+255),b
   262  002D40  6BAB               	clrf	(__pbssBANK0+3)& (0+255),b
   263  002D42  6BAA               	clrf	(__pbssBANK0+2)& (0+255),b
   264  002D44  6BA9               	clrf	(__pbssBANK0+1)& (0+255),b
   265  002D46  6BA8               	clrf	__pbssBANK0& (0+255),b
   266                           
   267                           ; Clear objects allocated to COMRAM (1 bytes)
   268  002D48  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   269  002D4A                     end_of_initialization:
   270                           	opt stack 0
   271  002D4A                     __end_of__initialization:
   272                           	opt stack 0
   273  002D4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   274  002D4C  6EF8               	movwf	tblptru,c
   275  002D4E  0100               	movlb	0
   276  002D50  EF11  F00D         	goto	_main	;jump to C main() function
   277                           tblptru	equ	0xFF8
   278                           
   279                           	psect	bssCOMRAM
   280  00004A                     __pbssCOMRAM:
   281                           	opt stack 0
   282  00004A                     _USART_Status:
   283                           	opt stack 0
   284  00004A                     	ds	1
   285                           tblptru	equ	0xFF8
   286                           
   287                           	psect	bssBANK0
   288  0000A8                     __pbssBANK0:
   289                           	opt stack 0
   290  0000A8                     main@F4969:
   291                           	opt stack 0
   292  0000A8                     	ds	6
   293                           tblptru	equ	0xFF8
   294                           
   295                           	psect	cstackBANK0
   296  000060                     __pcstackBANK0:
   297                           	opt stack 0
   298  000060                     ___fttol@sign1:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x0
   302  000060                     	ds	1
   303  000061                     ___fttol@lval:
   304                           	opt stack 0
   305                           
   306                           ; 4 bytes @ 0x1
   307  000061                     	ds	4
   308  000065                     ___fttol@exp1:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x5
   312  000065                     	ds	1
   313  000066                     ?_sprintf:
   314                           	opt stack 0
   315  000066                     sprintf@sp:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x6
   319  000066                     	ds	2
   320  000068                     sprintf@f:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x8
   324  000068                     	ds	5
   325  00006D                     ??_sprintf:
   326                           
   327                           ; 0 bytes @ 0xD
   328  00006D                     	ds	6
   329  000073                     _sprintf$2197:
   330                           	opt stack 0
   331                           
   332                           ; 3 bytes @ 0x13
   333  000073                     	ds	3
   334  000076                     _sprintf$606:
   335                           	opt stack 0
   336                           
   337                           ; 4 bytes @ 0x16
   338  000076                     	ds	4
   339  00007A                     sprintf@ap:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x1A
   343  00007A                     	ds	2
   344  00007C                     sprintf@vd:
   345                           	opt stack 0
   346                           
   347                           ; 4 bytes @ 0x1C
   348  00007C                     	ds	4
   349  000080                     sprintf@vd_608:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0x20
   353  000080                     	ds	4
   354  000084                     sprintf@integ:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0x24
   358  000084                     	ds	3
   359  000087                     sprintf@_val:
   360                           	opt stack 0
   361                           
   362                           ; 5 bytes @ 0x27
   363  000087                     	ds	5
   364  00008C                     sprintf@flag:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x2C
   368  00008C                     	ds	2
   369  00008E                     sprintf@width:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x2E
   373  00008E                     	ds	2
   374  000090                     sprintf@exp:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x30
   378  000090                     	ds	2
   379  000092                     sprintf@fval:
   380                           	opt stack 0
   381                           
   382                           ; 3 bytes @ 0x32
   383  000092                     	ds	3
   384  000095                     sprintf@prec:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x35
   388  000095                     	ds	2
   389  000097                     sprintf@c:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x37
   393  000097                     	ds	1
   394  000098                     ??_main:
   395                           
   396                           ; 0 bytes @ 0x38
   397  000098                     	ds	2
   398  00009A                     _main$2193:
   399                           	opt stack 0
   400                           
   401                           ; 3 bytes @ 0x3A
   402  00009A                     	ds	3
   403  00009D                     main@buffer:
   404                           	opt stack 0
   405                           
   406                           ; 6 bytes @ 0x3D
   407  00009D                     	ds	6
   408  0000A3                     main@temp:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x43
   412  0000A3                     	ds	3
   413  0000A6                     main@result:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x46
   417  0000A6                     	ds	2
   418                           tblptru	equ	0xFF8
   419                           
   420                           	psect	cstackCOMRAM
   421  000001                     __pcstackCOMRAM:
   422                           	opt stack 0
   423  000001                     ReadUSART@data:
   424                           	opt stack 0
   425  000001                     i2WriteUSART@data:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x0
   429  000001                     	ds	1
   430  000002                     i2putsUSART@data:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x1
   434  000002                     	ds	2
   435  000004                     ??i2_putsUSART:
   436                           
   437                           ; 0 bytes @ 0x3
   438  000004                     	ds	2
   439  000006                     ??_SerialRxPinInterrupt:
   440                           
   441                           ; 0 bytes @ 0x5
   442  000006                     	ds	14
   443  000014                     SerialRxPinInterrupt@rx:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x13
   447  000014                     	ds	1
   448  000015                     ??_SetDDRamAddr:
   449  000015                     ??_isdigit:
   450  000015                     ??_Delay10KTCYx:
   451  000015                     ?_ReadADC:
   452                           	opt stack 0
   453  000015                     ?___awmod:
   454                           	opt stack 0
   455  000015                     ?___ftpack:
   456                           	opt stack 0
   457  000015                     ?___ftneg:
   458                           	opt stack 0
   459  000015                     ?__tdiv_to_l_:
   460                           	opt stack 0
   461  000015                     ?__div_to_l_:
   462                           	opt stack 0
   463  000015                     ?___lldiv:
   464                           	opt stack 0
   465  000015                     ?___llmod:
   466                           	opt stack 0
   467  000015                     OpenADC@config2:
   468                           	opt stack 0
   469  000015                     WriteUSART@data:
   470                           	opt stack 0
   471  000015                     WriteCmdXLCD@cmd:
   472                           	opt stack 0
   473  000015                     WriteDataXLCD@data:
   474                           	opt stack 0
   475  000015                     Delay10TCYx@unit:
   476                           	opt stack 0
   477  000015                     Delay1KTCYx@unit:
   478                           	opt stack 0
   479  000015                     Delay_ms@ms:
   480                           	opt stack 0
   481  000015                     OpenUSART@spbrg:
   482                           	opt stack 0
   483  000015                     ___awmod@dividend:
   484                           	opt stack 0
   485  000015                     __div_to_l_@f1:
   486                           	opt stack 0
   487  000015                     ___ftpack@arg:
   488                           	opt stack 0
   489  000015                     __tdiv_to_l_@f1:
   490                           	opt stack 0
   491  000015                     ___ftge@ff1:
   492                           	opt stack 0
   493  000015                     ___ftneg@f1:
   494                           	opt stack 0
   495  000015                     ___lldiv@dividend:
   496                           	opt stack 0
   497  000015                     ___llmod@dividend:
   498                           	opt stack 0
   499                           
   500                           ; 4 bytes @ 0x14
   501  000015                     	ds	1
   502  000016                     OpenADC@portconfig:
   503                           	opt stack 0
   504  000016                     Delay10KTCYx@unit:
   505                           	opt stack 0
   506  000016                     _isdigit$1861:
   507                           	opt stack 0
   508  000016                     putsUSART@data:
   509                           	opt stack 0
   510  000016                     putrsXLCD@buffer:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x15
   514  000016                     	ds	1
   515  000017                     ??_Delay_ms:
   516  000017                     ??_OpenUSART:
   517  000017                     ??_OpenADC:
   518  000017                     isdigit@c:
   519                           	opt stack 0
   520  000017                     ___awmod@divisor:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x16
   524  000017                     	ds	1
   525  000018                     ??_putsUSART:
   526  000018                     SetDDRamAddr@DDaddr:
   527                           	opt stack 0
   528  000018                     ___ftpack@exp:
   529                           	opt stack 0
   530  000018                     Delay_ms@i:
   531                           	opt stack 0
   532  000018                     __div_to_l_@f2:
   533                           	opt stack 0
   534  000018                     __tdiv_to_l_@f2:
   535                           	opt stack 0
   536  000018                     ___ftge@ff2:
   537                           	opt stack 0
   538                           
   539                           ; 3 bytes @ 0x17
   540  000018                     	ds	1
   541  000019                     ??___awmod:
   542  000019                     OpenADC@config:
   543                           	opt stack 0
   544  000019                     OpenXLCD@lcdtype:
   545                           	opt stack 0
   546  000019                     ___ftpack@sign:
   547                           	opt stack 0
   548  000019                     ___lldiv@divisor:
   549                           	opt stack 0
   550  000019                     ___llmod@divisor:
   551                           	opt stack 0
   552                           
   553                           ; 4 bytes @ 0x18
   554  000019                     	ds	1
   555  00001A                     ??___ftpack:
   556  00001A                     OpenUSART@config:
   557                           	opt stack 0
   558  00001A                     ___awmod@counter:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x19
   562  00001A                     	ds	1
   563  00001B                     ??__tdiv_to_l_:
   564  00001B                     ??__div_to_l_:
   565  00001B                     ??___ftge:
   566  00001B                     ___awmod@sign:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x1A
   570  00001B                     	ds	1
   571  00001C                     ?___awdiv:
   572                           	opt stack 0
   573  00001C                     ___awdiv@dividend:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x1B
   577  00001C                     	ds	1
   578  00001D                     ??___lldiv:
   579  00001D                     ??___llmod:
   580  00001D                     ?___ftadd:
   581                           	opt stack 0
   582  00001D                     ?___lltoft:
   583                           	opt stack 0
   584  00001D                     ?___lwtoft:
   585                           	opt stack 0
   586  00001D                     ___lwtoft@c:
   587                           	opt stack 0
   588  00001D                     ___ftadd@f1:
   589                           	opt stack 0
   590  00001D                     ___lltoft@c:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0x1C
   594  00001D                     	ds	1
   595  00001E                     ___llmod@counter:
   596                           	opt stack 0
   597  00001E                     ___awdiv@divisor:
   598                           	opt stack 0
   599  00001E                     __tdiv_to_l_@quot:
   600                           	opt stack 0
   601  00001E                     ___lldiv@quotient:
   602                           	opt stack 0
   603                           
   604                           ; 4 bytes @ 0x1D
   605  00001E                     	ds	1
   606  00001F                     __div_to_l_@quot:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0x1E
   610  00001F                     	ds	1
   611  000020                     ??___awdiv:
   612  000020                     ??___lwtoft:
   613  000020                     ___ftadd@f2:
   614                           	opt stack 0
   615                           
   616                           ; 3 bytes @ 0x1F
   617  000020                     	ds	1
   618  000021                     ??___lltoft:
   619  000021                     ___awdiv@counter:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x20
   623  000021                     	ds	1
   624  000022                     ___awdiv@sign:
   625                           	opt stack 0
   626  000022                     __tdiv_to_l_@cntr:
   627                           	opt stack 0
   628  000022                     ___lldiv@counter:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x21
   632  000022                     	ds	1
   633  000023                     ??___ftadd:
   634  000023                     __div_to_l_@cntr:
   635                           	opt stack 0
   636  000023                     __tdiv_to_l_@exp1:
   637                           	opt stack 0
   638  000023                     ___awdiv@quotient:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x22
   642  000023                     	ds	1
   643  000024                     __div_to_l_@exp1:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x23
   647  000024                     	ds	1
   648  000025                     ?___wmul:
   649                           	opt stack 0
   650  000025                     ___lltoft@exp:
   651                           	opt stack 0
   652  000025                     ___wmul@multiplier:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x24
   656  000025                     	ds	1
   657  000026                     ___ftadd@sign:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x25
   661  000026                     	ds	1
   662  000027                     ___ftadd@exp2:
   663                           	opt stack 0
   664  000027                     ___wmul@multiplicand:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x26
   668  000027                     	ds	1
   669  000028                     ___ftadd@exp1:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x27
   673  000028                     	ds	1
   674  000029                     ?___ftsub:
   675                           	opt stack 0
   676  000029                     ___wmul@product:
   677                           	opt stack 0
   678  000029                     ___ftsub@f1:
   679                           	opt stack 0
   680                           
   681                           ; 3 bytes @ 0x28
   682  000029                     	ds	2
   683  00002B                     ?___ftmul:
   684                           	opt stack 0
   685  00002B                     ___ftmul@f1:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x2A
   689  00002B                     	ds	1
   690  00002C                     ___ftsub@f2:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x2B
   694  00002C                     	ds	2
   695  00002E                     ___ftmul@f2:
   696                           	opt stack 0
   697                           
   698                           ; 3 bytes @ 0x2D
   699  00002E                     	ds	1
   700  00002F                     ___asftsub@f1p:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x2E
   704  00002F                     	ds	2
   705  000031                     ??___ftmul:
   706  000031                     ___asftsub@f2:
   707                           	opt stack 0
   708                           
   709                           ; 3 bytes @ 0x30
   710  000031                     	ds	3
   711  000034                     ___ftmul@exp:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x33
   715  000034                     	ds	1
   716  000035                     ___ftmul@f3_as_product:
   717                           	opt stack 0
   718                           
   719                           ; 3 bytes @ 0x34
   720  000035                     	ds	3
   721  000038                     ___ftmul@cntr:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x37
   725  000038                     	ds	1
   726  000039                     ___ftmul@sign:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x38
   730  000039                     	ds	1
   731  00003A                     ?___ftdiv:
   732                           	opt stack 0
   733  00003A                     ?_fround:
   734                           	opt stack 0
   735  00003A                     ?_scale:
   736                           	opt stack 0
   737  00003A                     ___asftmul@f1p:
   738                           	opt stack 0
   739  00003A                     ___ftdiv@f1:
   740                           	opt stack 0
   741                           
   742                           ; 3 bytes @ 0x39
   743  00003A                     	ds	2
   744  00003C                     ___asftmul@f2:
   745                           	opt stack 0
   746                           
   747                           ; 3 bytes @ 0x3B
   748  00003C                     	ds	1
   749  00003D                     ___ftdiv@f2:
   750                           	opt stack 0
   751  00003D                     _fround$2195:
   752                           	opt stack 0
   753  00003D                     _scale$2196:
   754                           	opt stack 0
   755                           
   756                           ; 3 bytes @ 0x3C
   757  00003D                     	ds	2
   758  00003F                     
   759                           ; 0 bytes @ 0x3E
   760  00003F                     	ds	1
   761  000040                     ??___ftdiv:
   762  000040                     scale@scl:
   763                           	opt stack 0
   764  000040                     _fround$2194:
   765                           	opt stack 0
   766                           
   767                           ; 3 bytes @ 0x3F
   768  000040                     	ds	1
   769  000041                     ?___fttol:
   770                           	opt stack 0
   771  000041                     ___fttol@f1:
   772                           	opt stack 0
   773                           
   774                           ; 3 bytes @ 0x40
   775  000041                     	ds	2
   776  000043                     fround@prec:
   777                           	opt stack 0
   778  000043                     ___ftdiv@cntr:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x42
   782  000043                     	ds	1
   783  000044                     ___asftadd@f1p:
   784                           	opt stack 0
   785  000044                     ___ftdiv@f3:
   786                           	opt stack 0
   787                           
   788                           ; 3 bytes @ 0x43
   789  000044                     	ds	1
   790  000045                     ??___fttol:
   791                           
   792                           ; 0 bytes @ 0x44
   793  000045                     	ds	1
   794  000046                     ___asftadd@f2:
   795                           	opt stack 0
   796                           
   797                           ; 3 bytes @ 0x45
   798  000046                     	ds	1
   799  000047                     ___ftdiv@exp:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x46
   803  000047                     	ds	1
   804  000048                     ___ftdiv@sign:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x47
   808  000048                     	ds	1
   809  000049                     
   810                           ; 0 bytes @ 0x48
   811  000049                     	ds	1
   812                           tblptru	equ	0xFF8
   813                           
   814 ;;
   815 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   816 ;;
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 74 in file "sensor_temp_adc_comm_main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  buffer          6   61[BANK0 ] unsigned char [6]
   824 ;;  temp            3   67[BANK0 ] float 
   825 ;;  result          2   70[BANK0 ] unsigned int 
   826 ;; Return value:  Size  Location     Type
   827 ;;		None               void
   828 ;; Registers used:
   829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   835 ;;      Params:         0       0       0       0       0       0       0       0       0
   836 ;;      Locals:         0      14       0       0       0       0       0       0       0
   837 ;;      Temps:          0       2       0       0       0       0       0       0       0
   838 ;;      Totals:         0      16       0       0       0       0       0       0       0
   839 ;;Total ram usage:       16 bytes
   840 ;; Hardware stack levels required when called:    8
   841 ;; This function calls:
   842 ;;		_BusyADC
   843 ;;		_BusyXLCD
   844 ;;		_ConvertADC
   845 ;;		_Delay10TCYx
   846 ;;		_Delay_ms
   847 ;;		_OpenADC
   848 ;;		_OpenUSART
   849 ;;		_OpenXLCD
   850 ;;		_ReadADC
   851 ;;		_SetDDRamAddr
   852 ;;		_WriteCmdXLCD
   853 ;;		___ftdiv
   854 ;;		___ftmul
   855 ;;		___lwtoft
   856 ;;		_putrsXLCD
   857 ;;		_putsUSART
   858 ;;		_setupMCU
   859 ;;		_sprintf
   860 ;; This function is called by:
   861 ;;		Startup code after reset
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text0
   866  001A22                     __ptext0:
   867                           	opt stack 0
   868  001A22                     _main:
   869                           	opt stack 23
   870                           
   871                           ;sensor_temp_adc_comm_main.c: 75: setupMCU();
   872                           
   873                           ;incstack = 0
   874  001A22  EC11  F016         	call	_setupMCU	;wreg free
   875                           
   876                           ;sensor_temp_adc_comm_main.c: 77: float temp = 0;
   877  001A26  0E00               	movlw	0
   878  001A28  0100               	movlb	0	; () banked
   879  001A2A  0100               	movlb	0	; () banked
   880  001A2C  6FA3               	movwf	main@temp& (0+255),b
   881  001A2E  0E00               	movlw	0
   882  001A30  0100               	movlb	0	; () banked
   883  001A32  0100               	movlb	0	; () banked
   884  001A34  6FA4               	movwf	(main@temp+1)& (0+255),b
   885  001A36  0E00               	movlw	0
   886  001A38  0100               	movlb	0	; () banked
   887  001A3A  0100               	movlb	0	; () banked
   888  001A3C  6FA5               	movwf	(main@temp+2)& (0+255),b
   889                           
   890                           ; BSR set to: 0
   891                           ;sensor_temp_adc_comm_main.c: 78: unsigned int result = 0;
   892  001A3E  0E00               	movlw	0
   893  001A40  0100               	movlb	0	; () banked
   894  001A42  0100               	movlb	0	; () banked
   895  001A44  6FA7               	movwf	(main@result+1)& (0+255),b
   896  001A46  0E00               	movlw	0
   897  001A48  0100               	movlb	0	; () banked
   898  001A4A  6FA6               	movwf	main@result& (0+255),b
   899                           
   900                           ; BSR set to: 0
   901                           ;sensor_temp_adc_comm_main.c: 79: char buffer[6] = "";
   902  001A4C  EE20  F0A8         	lfsr	2,main@F4969
   903  001A50  EE10  F09D         	lfsr	1,main@buffer
   904  001A54  0E06               	movlw	6
   905  001A56                     u4421:
   906  001A56  CFDE FFE6          	movff	postinc2,postinc1
   907  001A5A  2EE8               	decfsz	wreg,f,c
   908  001A5C  D7FC               	goto	u4421
   909                           
   910                           ; BSR set to: 0
   911                           ;sensor_temp_adc_comm_main.c: 80: pBuffer = buffer;
   912  001A5E  0100               	movlb	0	; () banked
   913  001A60  0E00               	movlw	high main@buffer
   914  001A62  0100               	movlb	0	; () banked
   915  001A64  0100               	movlb	0	; () banked
   916  001A66  6FAF               	movwf	(_pBuffer+1)& (0+255),b
   917  001A68  0100               	movlb	0	; () banked
   918  001A6A  0E9D               	movlw	low main@buffer
   919  001A6C  0100               	movlb	0	; () banked
   920  001A6E  0100               	movlb	0	; () banked
   921  001A70  6FAE               	movwf	_pBuffer& (0+255),b
   922                           
   923                           ; BSR set to: 0
   924                           ;sensor_temp_adc_comm_main.c: 82: Delay_ms(1000);
   925  001A72  0E03               	movlw	3
   926  001A74  6E16               	movwf	Delay_ms@ms+1,c
   927  001A76  0EE8               	movlw	232
   928  001A78  6E15               	movwf	Delay_ms@ms,c
   929  001A7A  EC3D  F016         	call	_Delay_ms	;wreg free
   930                           
   931                           ;sensor_temp_adc_comm_main.c: 84: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b111
      +                          11101 & 0b11111111, 129);
   932  001A7E  0E00               	movlw	0
   933  001A80  6E16               	movwf	OpenUSART@spbrg+1,c
   934  001A82  0E81               	movlw	129
   935  001A84  6E15               	movwf	OpenUSART@spbrg,c
   936  001A86  0E7C               	movlw	124
   937  001A88  ECD4  F013         	call	_OpenUSART
   938                           
   939                           ;sensor_temp_adc_comm_main.c: 85: Delay10TCYx(5);
   940  001A8C  0E05               	movlw	5
   941  001A8E  ECD3  F016         	call	_Delay10TCYx
   942                           
   943                           ;sensor_temp_adc_comm_main.c: 86: putsUSART("Ready \n\r");
   944  001A92  0E08               	movlw	high STR_1
   945  001A94  6E17               	movwf	putsUSART@data+1,c
   946  001A96  0E77               	movlw	low STR_1
   947  001A98  6E16               	movwf	putsUSART@data,c
   948  001A9A  EC6B  F014         	call	_putsUSART	;wreg free
   949                           
   950                           ;sensor_temp_adc_comm_main.c: 102: OpenADC(0b11101111 &
   951                           ;sensor_temp_adc_comm_main.c: 103: 0b11111111 &
   952                           ;sensor_temp_adc_comm_main.c: 104: 0b11111101,
   953                           ;sensor_temp_adc_comm_main.c: 105: 0b10000111 &
   954                           ;sensor_temp_adc_comm_main.c: 106: 0b01111111 &
   955                           ;sensor_temp_adc_comm_main.c: 107: 0b11111110 &
   956                           ;sensor_temp_adc_comm_main.c: 108: 0b11111101,
   957                           ;sensor_temp_adc_comm_main.c: 109: 14);
   958  001A9E  0100               	movlb	0	; () banked
   959  001AA0  6F98               	movwf	??_main& (0+255),b
   960  001AA2  0E04               	movlw	4
   961  001AA4  6E15               	movwf	OpenADC@config2,c
   962  001AA6  0100               	movlb	0	; () banked
   963  001AA8  5198               	movf	??_main& (0+255),w,b
   964  001AAA  0100               	movlb	0	; () banked
   965  001AAC  6F99               	movwf	(??_main+1)& (0+255),b
   966  001AAE  0E0E               	movlw	14
   967  001AB0  6E16               	movwf	OpenADC@portconfig,c
   968  001AB2  0100               	movlb	0	; () banked
   969  001AB4  5199               	movf	(??_main+1)& (0+255),w,b
   970  001AB6  0EED               	movlw	237
   971  001AB8  EC3B  F014         	call	_OpenADC
   972                           
   973                           ;sensor_temp_adc_comm_main.c: 111: Delay10TCYx(5);
   974  001ABC  0E05               	movlw	5
   975  001ABE  ECD3  F016         	call	_Delay10TCYx
   976                           
   977                           ;sensor_temp_adc_comm_main.c: 116: OpenXLCD(0b00101100 & 0b00111000);
   978  001AC2  0E28               	movlw	40
   979  001AC4  EC25  F012         	call	_OpenXLCD
   980  001AC8                     l5441:
   981  001AC8  ECD9  F015         	call	_BusyXLCD	;wreg free
   982  001ACC  0900               	iorlw	0
   983  001ACE  A4D8               	btfss	status,2,c
   984  001AD0  D7FB               	goto	l5441
   985                           
   986                           ;sensor_temp_adc_comm_main.c: 121: WriteCmdXLCD(0x06);
   987  001AD2  0E06               	movlw	6
   988  001AD4  EC42  F015         	call	_WriteCmdXLCD
   989                           
   990                           ;sensor_temp_adc_comm_main.c: 123: WriteCmdXLCD(0x0C);
   991  001AD8  0E0C               	movlw	12
   992  001ADA  EC42  F015         	call	_WriteCmdXLCD
   993                           
   994                           ;sensor_temp_adc_comm_main.c: 124: _delay((unsigned long)((10)*(20000000/4000.0)));
   995  001ADE  0E41               	movlw	65
   996  001AE0  0100               	movlb	0	; () banked
   997  001AE2  6F98               	movwf	??_main& (0+255),b
   998  001AE4  0EEE               	movlw	238
   999  001AE6                     u4987:
  1000  001AE6  2EE8               	decfsz	wreg,f,c
  1001  001AE8  D7FE               	goto	u4987
  1002  001AEA  2F98               	decfsz	??_main& (0+255),f,b
  1003  001AEC  D7FC               	goto	u4987
  1004  001AEE  D000               	nop2	
  1005                           
  1006                           ;sensor_temp_adc_comm_main.c: 127: SetDDRamAddr(0x00);
  1007  001AF0  0E00               	movlw	0
  1008  001AF2  ECF5  F014         	call	_SetDDRamAddr
  1009                           
  1010                           ;sensor_temp_adc_comm_main.c: 128: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1011  001AF6  0EFA               	movlw	250
  1012  001AF8                     u4997:
  1013  001AF8  F000               	nop	
  1014  001AFA  2EE8               	decfsz	wreg,f,c
  1015  001AFC  D7FD               	goto	u4997
  1016                           
  1017                           ;sensor_temp_adc_comm_main.c: 129: putrsXLCD("Temp: ");
  1018  001AFE  0E08               	movlw	high STR_2
  1019  001B00  6E17               	movwf	putrsXLCD@buffer+1,c
  1020  001B02  0E80               	movlw	low STR_2
  1021  001B04  6E16               	movwf	putrsXLCD@buffer,c
  1022  001B06  EC99  F014         	call	_putrsXLCD	;wreg free
  1023                           
  1024                           ;sensor_temp_adc_comm_main.c: 130: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1025  001B0A  0EFA               	movlw	250
  1026  001B0C                     u5007:
  1027  001B0C  F000               	nop	
  1028  001B0E  2EE8               	decfsz	wreg,f,c
  1029  001B10  D7FD               	goto	u5007
  1030                           
  1031                           ;sensor_temp_adc_comm_main.c: 131: SetDDRamAddr(0x0D);
  1032  001B12  0E0D               	movlw	13
  1033  001B14  ECF5  F014         	call	_SetDDRamAddr
  1034                           
  1035                           ;sensor_temp_adc_comm_main.c: 132: putrsXLCD("C");
  1036  001B18  0E08               	movlw	high STR_3
  1037  001B1A  6E17               	movwf	putrsXLCD@buffer+1,c
  1038  001B1C  0E8D               	movlw	low STR_3
  1039  001B1E  6E16               	movwf	putrsXLCD@buffer,c
  1040  001B20  EC99  F014         	call	_putrsXLCD	;wreg free
  1041  001B24                     l5457:
  1042                           
  1043                           ;sensor_temp_adc_comm_main.c: 135: {
  1044                           ;sensor_temp_adc_comm_main.c: 137: ConvertADC();
  1045  001B24  ECEB  F016         	call	_ConvertADC	;wreg free
  1046  001B28                     l5459:
  1047  001B28  ECDC  F016         	call	_BusyADC	;wreg free
  1048  001B2C  0900               	iorlw	0
  1049  001B2E  A4D8               	btfss	status,2,c
  1050  001B30  D7FB               	goto	l5459
  1051                           
  1052                           ;sensor_temp_adc_comm_main.c: 142: result = ReadADC();
  1053  001B32  ECE2  F016         	call	_ReadADC	;wreg free
  1054  001B36  C015  F0A6         	movff	?_ReadADC,main@result
  1055  001B3A  C016  F0A7         	movff	?_ReadADC+1,main@result+1
  1056                           
  1057                           ;sensor_temp_adc_comm_main.c: 143: temp = (5.0 * result / 1024.0) * 100;
  1058  001B3E  0E00               	movlw	0
  1059  001B40  6E3D               	movwf	___ftdiv@f2,c
  1060  001B42  0E80               	movlw	128
  1061  001B44  6E3E               	movwf	___ftdiv@f2+1,c
  1062  001B46  0E44               	movlw	68
  1063  001B48  6E3F               	movwf	___ftdiv@f2+2,c
  1064  001B4A  0E00               	movlw	0
  1065  001B4C  6E2E               	movwf	___ftmul@f2,c
  1066  001B4E  0EA0               	movlw	160
  1067  001B50  6E2F               	movwf	___ftmul@f2+1,c
  1068  001B52  0E40               	movlw	64
  1069  001B54  6E30               	movwf	___ftmul@f2+2,c
  1070  001B56  C0A6  F01D         	movff	main@result,___lwtoft@c
  1071  001B5A  C0A7  F01E         	movff	main@result+1,___lwtoft@c+1
  1072  001B5E  EC27  F016         	call	___lwtoft	;wreg free
  1073  001B62  C01D  F02B         	movff	?___lwtoft,___ftmul@f1
  1074  001B66  C01E  F02C         	movff	?___lwtoft+1,___ftmul@f1+1
  1075  001B6A  C01F  F02D         	movff	?___lwtoft+2,___ftmul@f1+2
  1076  001B6E  EC96  F010         	call	___ftmul	;wreg free
  1077  001B72  C02B  F03A         	movff	?___ftmul,___ftdiv@f1
  1078  001B76  C02C  F03B         	movff	?___ftmul+1,___ftdiv@f1+1
  1079  001B7A  C02D  F03C         	movff	?___ftmul+2,___ftdiv@f1+2
  1080  001B7E  EC0C  F011         	call	___ftdiv	;wreg free
  1081  001B82  C03A  F09A         	movff	?___ftdiv,_main$2193
  1082  001B86  C03B  F09B         	movff	?___ftdiv+1,_main$2193+1
  1083  001B8A  C03C  F09C         	movff	?___ftdiv+2,_main$2193+2
  1084                           
  1085                           ;sensor_temp_adc_comm_main.c: 143: temp = (5.0 * result / 1024.0) * 100;
  1086  001B8E  C09A  F02B         	movff	_main$2193,___ftmul@f1
  1087  001B92  C09B  F02C         	movff	_main$2193+1,___ftmul@f1+1
  1088  001B96  C09C  F02D         	movff	_main$2193+2,___ftmul@f1+2
  1089  001B9A  0E00               	movlw	0
  1090  001B9C  6E2E               	movwf	___ftmul@f2,c
  1091  001B9E  0EC8               	movlw	200
  1092  001BA0  6E2F               	movwf	___ftmul@f2+1,c
  1093  001BA2  0E42               	movlw	66
  1094  001BA4  6E30               	movwf	___ftmul@f2+2,c
  1095  001BA6  EC96  F010         	call	___ftmul	;wreg free
  1096  001BAA  C02B  F0A3         	movff	?___ftmul,main@temp
  1097  001BAE  C02C  F0A4         	movff	?___ftmul+1,main@temp+1
  1098  001BB2  C02D  F0A5         	movff	?___ftmul+2,main@temp+2
  1099                           
  1100                           ;sensor_temp_adc_comm_main.c: 145: SetDDRamAddr(0x07);
  1101  001BB6  0E07               	movlw	7
  1102  001BB8  ECF5  F014         	call	_SetDDRamAddr
  1103                           
  1104                           ;sensor_temp_adc_comm_main.c: 146: sprintf(pBuffer, "%2.1f", temp);
  1105  001BBC  0100               	movlb	0	; () banked
  1106  001BBE  0100               	movlb	0	; () banked
  1107  001BC0  C0AF  F067         	movff	_pBuffer+1,sprintf@sp+1
  1108  001BC4  0100               	movlb	0	; () banked
  1109  001BC6  0100               	movlb	0	; () banked
  1110  001BC8  C0AE  F066         	movff	_pBuffer,sprintf@sp
  1111  001BCC  0E08               	movlw	high STR_4
  1112  001BCE  0100               	movlb	0	; () banked
  1113  001BD0  0100               	movlb	0	; () banked
  1114  001BD2  6F69               	movwf	(sprintf@f+1)& (0+255),b
  1115  001BD4  0E87               	movlw	low STR_4
  1116  001BD6  0100               	movlb	0	; () banked
  1117  001BD8  0100               	movlb	0	; () banked
  1118  001BDA  6F68               	movwf	sprintf@f& (0+255),b
  1119  001BDC  C0A3  F06A         	movff	main@temp,?_sprintf+4
  1120  001BE0  C0A4  F06B         	movff	main@temp+1,?_sprintf+5
  1121  001BE4  C0A5  F06C         	movff	main@temp+2,?_sprintf+6
  1122  001BE8  EC48  F004         	call	_sprintf	;wreg free
  1123                           
  1124                           ;sensor_temp_adc_comm_main.c: 147: putrsXLCD(pBuffer);
  1125  001BEC  0100               	movlb	0	; () banked
  1126  001BEE  C0AF  F017         	movff	_pBuffer+1,putrsXLCD@buffer+1
  1127  001BF2  0100               	movlb	0	; () banked
  1128  001BF4  C0AE  F016         	movff	_pBuffer,putrsXLCD@buffer
  1129  001BF8  EC99  F014         	call	_putrsXLCD	;wreg free
  1130                           
  1131                           ;sensor_temp_adc_comm_main.c: 151: Delay_ms(300);
  1132  001BFC  0E01               	movlw	1
  1133  001BFE  6E16               	movwf	Delay_ms@ms+1,c
  1134  001C00  0E2C               	movlw	44
  1135  001C02  6E15               	movwf	Delay_ms@ms,c
  1136  001C04  EC3D  F016         	call	_Delay_ms	;wreg free
  1137  001C08  D78D               	goto	l5457
  1138  001C0A                     __end_of_main:
  1139                           	opt stack 0
  1140                           tblptru	equ	0xFF8
  1141                           wreg	equ	0xFE8
  1142                           postinc1	equ	0xFE6
  1143                           postinc2	equ	0xFDE
  1144                           status	equ	0xFD8
  1145                           
  1146 ;; *************** function _sprintf *****************
  1147 ;; Defined at:
  1148 ;;		line 492 in file "/opt/microchip/xc8/v1.30/sources/common/doprnt.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  sp              2    6[BANK0 ] PTR unsigned char 
  1151 ;;		 -> NULL(0), main@buffer(6), 
  1152 ;;  f               2    8[BANK0 ] PTR const unsigned char 
  1153 ;;		 -> STR_4(6), 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  vd              4   28[BANK0 ] unsigned long 
  1156 ;;  vd              4   32[BANK0 ] unsigned long 
  1157 ;;  _val            5   39[BANK0 ] struct .
  1158 ;;  fval            3   50[BANK0 ] struct .
  1159 ;;  integ           3   36[BANK0 ] struct .
  1160 ;;  ival            3    0        struct .
  1161 ;;  prec            2   53[BANK0 ] int 
  1162 ;;  exp             2   48[BANK0 ] int 
  1163 ;;  width           2   46[BANK0 ] int 
  1164 ;;  flag            2   44[BANK0 ] unsigned short 
  1165 ;;  ap              2   26[BANK0 ] PTR void [1]
  1166 ;;		 -> ?_sprintf(2), 
  1167 ;;  c               1   55[BANK0 ] char 
  1168 ;;  d               1    0        unsigned char 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  2    6[BANK0 ] int 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1178 ;;      Params:         0       7       0       0       0       0       0       0       0
  1179 ;;      Locals:         0      37       0       0       0       0       0       0       0
  1180 ;;      Temps:          0       6       0       0       0       0       0       0       0
  1181 ;;      Totals:         0      50       0       0       0       0       0       0       0
  1182 ;;Total ram usage:       50 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    7
  1185 ;; This function calls:
  1186 ;;		___asftadd
  1187 ;;		___asftmul
  1188 ;;		___asftsub
  1189 ;;		___awdiv
  1190 ;;		___ftge
  1191 ;;		___ftmul
  1192 ;;		___ftneg
  1193 ;;		___fttol
  1194 ;;		___lldiv
  1195 ;;		___llmod
  1196 ;;		___lltoft
  1197 ;;		___wmul
  1198 ;;		__div_to_l_
  1199 ;;		__tdiv_to_l_
  1200 ;;		_fround
  1201 ;;		_isdigit
  1202 ;;		_scale
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text1
  1209  000890                     __ptext1:
  1210                           	opt stack 0
  1211  000890                     _sprintf:
  1212                           	opt stack 23
  1213                           
  1214                           ;doprnt.c: 494: va_list ap;
  1215                           ;doprnt.c: 499: signed char c;
  1216                           ;doprnt.c: 501: int width;
  1217                           ;doprnt.c: 504: int prec;
  1218                           ;doprnt.c: 508: unsigned short flag;
  1219                           ;doprnt.c: 515: char d;
  1220                           ;doprnt.c: 516: double fval, integ;
  1221                           ;doprnt.c: 517: int exp;
  1222                           ;doprnt.c: 518: double ival;
  1223                           ;doprnt.c: 519: union {
  1224                           ;doprnt.c: 520: unsigned long _val;
  1225                           ;doprnt.c: 521: struct {
  1226                           ;doprnt.c: 522: const char * _cp;
  1227                           ;doprnt.c: 523: unsigned _len;
  1228                           ;doprnt.c: 524: } _str;
  1229                           ;doprnt.c: 525: } _val;
  1230                           ;doprnt.c: 542: *ap = __va_start();
  1231                           
  1232                           ;incstack = 0
  1233  000890  0100               	movlb	0	; () banked
  1234  000892  0E00               	movlw	high (?_sprintf+4)
  1235  000894  0100               	movlb	0	; () banked
  1236  000896  0100               	movlb	0	; () banked
  1237  000898  6F7B               	movwf	(sprintf@ap+1)& (0+255),b
  1238  00089A  0100               	movlb	0	; () banked
  1239  00089C  0E6A               	movlw	low (?_sprintf+4)
  1240  00089E  0100               	movlb	0	; () banked
  1241  0008A0  0100               	movlb	0	; () banked
  1242  0008A2  6F7A               	movwf	sprintf@ap& (0+255),b
  1243                           
  1244                           ;doprnt.c: 545: while(c = *f++) {
  1245  0008A4  EFF2  F009         	goto	l5735
  1246  0008A8                     l5477:
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;doprnt.c: 547: if(c != '%')
  1250  0008A8  0100               	movlb	0	; () banked
  1251  0008AA  0100               	movlb	0	; () banked
  1252  0008AC  5197               	movf	sprintf@c& (0+255),w,b
  1253  0008AE  0A25               	xorlw	37
  1254  0008B0  B4D8               	btfsc	status,2,c
  1255  0008B2  D009               	goto	l5483
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;doprnt.c: 549: {
  1259                           ;doprnt.c: 550: ((*sp++ = (c)));
  1260  0008B4  C066  FFD9         	movff	sprintf@sp,fsr2l
  1261  0008B8  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  1262  0008BC  0100               	movlb	0	; () banked
  1263  0008BE  C097  FFDF         	movff	sprintf@c,indf2
  1264  0008C2  EFEE  F009         	goto	L1
  1265  0008C6                     l5483:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;doprnt.c: 552: }
  1269                           ;doprnt.c: 555: width = 0;
  1270  0008C6  0E00               	movlw	0
  1271  0008C8  0100               	movlb	0	; () banked
  1272  0008CA  0100               	movlb	0	; () banked
  1273  0008CC  6F8F               	movwf	(sprintf@width+1)& (0+255),b
  1274  0008CE  0E00               	movlw	0
  1275  0008D0  0100               	movlb	0	; () banked
  1276  0008D2  6F8E               	movwf	sprintf@width& (0+255),b
  1277                           
  1278                           ;doprnt.c: 557: flag = 0;
  1279  0008D4  0E00               	movlw	0
  1280  0008D6  0100               	movlb	0	; () banked
  1281  0008D8  0100               	movlb	0	; () banked
  1282  0008DA  6F8D               	movwf	(sprintf@flag+1)& (0+255),b
  1283  0008DC  0E00               	movlw	0
  1284  0008DE  0100               	movlb	0	; () banked
  1285  0008E0  6F8C               	movwf	sprintf@flag& (0+255),b
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1289  0008E2  0100               	movlb	0	; () banked
  1290  0008E4  C068  FFF6         	movff	sprintf@f,tblptrl
  1291  0008E8  0100               	movlb	0	; () banked
  1292  0008EA  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1293  0008EE  0008               	tblrd		*
  1294  0008F0  50F5               	movf	tablat,w,c
  1295  0008F2  EC53  F016         	call	_isdigit
  1296  0008F6  A0D8               	btfss	status,0,c
  1297  0008F8  D047               	goto	l5497
  1298                           
  1299                           ;doprnt.c: 607: width = 0;
  1300  0008FA  0E00               	movlw	0
  1301  0008FC  0100               	movlb	0	; () banked
  1302  0008FE  0100               	movlb	0	; () banked
  1303  000900  6F8F               	movwf	(sprintf@width+1)& (0+255),b
  1304  000902  0E00               	movlw	0
  1305  000904  0100               	movlb	0	; () banked
  1306  000906  6F8E               	movwf	sprintf@width& (0+255),b
  1307  000908                     l5489:
  1308                           
  1309                           ;doprnt.c: 609: width *= 10;
  1310  000908  C08E  F025         	movff	sprintf@width,___wmul@multiplier
  1311  00090C  C08F  F026         	movff	sprintf@width+1,___wmul@multiplier+1
  1312  000910  0E00               	movlw	0
  1313  000912  6E28               	movwf	___wmul@multiplicand+1,c
  1314  000914  0E0A               	movlw	10
  1315  000916  6E27               	movwf	___wmul@multiplicand,c
  1316  000918  ECBC  F015         	call	___wmul	;wreg free
  1317  00091C  C025  F08E         	movff	?___wmul,sprintf@width
  1318  000920  C026  F08F         	movff	?___wmul+1,sprintf@width+1
  1319                           
  1320                           ;doprnt.c: 610: width += *f++ - '0';
  1321  000924  0ED0               	movlw	208
  1322  000926  0100               	movlb	0	; () banked
  1323  000928  6F6D               	movwf	??_sprintf& (0+255),b
  1324  00092A  0EFF               	movlw	255
  1325  00092C  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  1326  00092E  0100               	movlb	0	; () banked
  1327  000930  C068  FFF6         	movff	sprintf@f,tblptrl
  1328  000934  0100               	movlb	0	; () banked
  1329  000936  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1330  00093A  0008               	tblrd		*
  1331  00093C  50F5               	movf	tablat,w,c
  1332  00093E  0100               	movlb	0	; () banked
  1333  000940  6F6F               	movwf	(??_sprintf+2)& (0+255),b
  1334  000942  6B70               	clrf	(??_sprintf+3)& (0+255),b
  1335  000944  0100               	movlb	0	; () banked
  1336  000946  516D               	movf	??_sprintf& (0+255),w,b
  1337  000948  0100               	movlb	0	; () banked
  1338  00094A  276F               	addwf	(??_sprintf+2)& (0+255),f,b
  1339  00094C  0100               	movlb	0	; () banked
  1340  00094E  516E               	movf	(??_sprintf+1)& (0+255),w,b
  1341  000950  0100               	movlb	0	; () banked
  1342  000952  2370               	addwfc	(??_sprintf+3)& (0+255),f,b
  1343  000954  0100               	movlb	0	; () banked
  1344  000956  516F               	movf	(??_sprintf+2)& (0+255),w,b
  1345  000958  0100               	movlb	0	; () banked
  1346  00095A  0100               	movlb	0	; () banked
  1347  00095C  278E               	addwf	sprintf@width& (0+255),f,b
  1348  00095E  0100               	movlb	0	; () banked
  1349  000960  5170               	movf	(??_sprintf+3)& (0+255),w,b
  1350  000962  0100               	movlb	0	; () banked
  1351  000964  0100               	movlb	0	; () banked
  1352  000966  238F               	addwfc	(sprintf@width+1)& (0+255),f,b
  1353                           
  1354                           ; BSR set to: 0
  1355  000968  0100               	movlb	0	; () banked
  1356  00096A  0100               	movlb	0	; () banked
  1357  00096C  4B68               	infsnz	sprintf@f& (0+255),f,b
  1358  00096E  2B69               	incf	(sprintf@f+1)& (0+255),f,b
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1362  000970  0100               	movlb	0	; () banked
  1363  000972  C068  FFF6         	movff	sprintf@f,tblptrl
  1364  000976  0100               	movlb	0	; () banked
  1365  000978  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1366  00097C  0008               	tblrd		*
  1367  00097E  50F5               	movf	tablat,w,c
  1368  000980  EC53  F016         	call	_isdigit
  1369  000984  B0D8               	btfsc	status,0,c
  1370  000986  D7C0               	goto	l5489
  1371  000988                     l5497:
  1372                           
  1373                           ;doprnt.c: 617: }
  1374                           ;doprnt.c: 620: if(*f == '.') {
  1375  000988  0100               	movlb	0	; () banked
  1376  00098A  C068  FFF6         	movff	sprintf@f,tblptrl
  1377  00098E  0100               	movlb	0	; () banked
  1378  000990  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1379  000994  0008               	tblrd		*
  1380  000996  50F5               	movf	tablat,w,c
  1381  000998  0A2E               	xorlw	46
  1382  00099A  A4D8               	btfss	status,2,c
  1383  00099C  D03E               	goto	l5509
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;doprnt.c: 621: flag |= 0x4000;
  1387  00099E  0100               	movlb	0	; () banked
  1388  0009A0  0100               	movlb	0	; () banked
  1389  0009A2  8D8D               	bsf	(sprintf@flag+1)& (0+255),6,b
  1390                           
  1391                           ;doprnt.c: 622: f++;
  1392  0009A4  0100               	movlb	0	; () banked
  1393  0009A6  0100               	movlb	0	; () banked
  1394  0009A8  4B68               	infsnz	sprintf@f& (0+255),f,b
  1395  0009AA  2B69               	incf	(sprintf@f+1)& (0+255),f,b
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;doprnt.c: 629: {
  1399                           ;doprnt.c: 630: prec = 0;
  1400  0009AC  0E00               	movlw	0
  1401  0009AE  0100               	movlb	0	; () banked
  1402  0009B0  0100               	movlb	0	; () banked
  1403  0009B2  6F96               	movwf	(sprintf@prec+1)& (0+255),b
  1404  0009B4  0E00               	movlw	0
  1405  0009B6  0100               	movlb	0	; () banked
  1406  0009B8  6F95               	movwf	sprintf@prec& (0+255),b
  1407                           
  1408                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1409  0009BA  D022               	goto	l5507
  1410  0009BC                     l5503:
  1411                           
  1412                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1413  0009BC  C095  F025         	movff	sprintf@prec,___wmul@multiplier
  1414  0009C0  C096  F026         	movff	sprintf@prec+1,___wmul@multiplier+1
  1415  0009C4  0E00               	movlw	0
  1416  0009C6  6E28               	movwf	___wmul@multiplicand+1,c
  1417  0009C8  0E0A               	movlw	10
  1418  0009CA  6E27               	movwf	___wmul@multiplicand,c
  1419  0009CC  ECBC  F015         	call	___wmul	;wreg free
  1420  0009D0  0100               	movlb	0	; () banked
  1421  0009D2  C068  FFF6         	movff	sprintf@f,tblptrl
  1422  0009D6  0100               	movlb	0	; () banked
  1423  0009D8  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1424  0009DC  0008               	tblrd		*
  1425  0009DE  50F5               	movf	tablat,w,c
  1426  0009E0  2625               	addwf	?___wmul,f,c
  1427  0009E2  0E00               	movlw	0
  1428  0009E4  2226               	addwfc	?___wmul+1,f,c
  1429  0009E6  0ED0               	movlw	208
  1430  0009E8  2425               	addwf	?___wmul,w,c
  1431  0009EA  0100               	movlb	0	; () banked
  1432  0009EC  0100               	movlb	0	; () banked
  1433  0009EE  6F95               	movwf	sprintf@prec& (0+255),b
  1434  0009F0  0EFF               	movlw	255
  1435  0009F2  2026               	addwfc	?___wmul+1,w,c
  1436  0009F4  0100               	movlb	0	; () banked
  1437  0009F6  6F96               	movwf	(sprintf@prec+1)& (0+255),b
  1438                           
  1439                           ; BSR set to: 0
  1440  0009F8  0100               	movlb	0	; () banked
  1441  0009FA  0100               	movlb	0	; () banked
  1442  0009FC  4B68               	infsnz	sprintf@f& (0+255),f,b
  1443  0009FE  2B69               	incf	(sprintf@f+1)& (0+255),f,b
  1444  000A00                     l5507:
  1445                           
  1446                           ; BSR set to: 0
  1447  000A00  0100               	movlb	0	; () banked
  1448  000A02  C068  FFF6         	movff	sprintf@f,tblptrl
  1449  000A06  0100               	movlb	0	; () banked
  1450  000A08  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1451  000A0C  0008               	tblrd		*
  1452  000A0E  50F5               	movf	tablat,w,c
  1453  000A10  EC53  F016         	call	_isdigit
  1454  000A14  A0D8               	btfss	status,0,c
  1455  000A16  D010               	goto	l5517
  1456  000A18  D7D1               	goto	l5503
  1457  000A1A                     l5509:
  1458                           
  1459                           ;doprnt.c: 635: prec = 0;
  1460  000A1A  0E00               	movlw	0
  1461  000A1C  0100               	movlb	0	; () banked
  1462  000A1E  0100               	movlb	0	; () banked
  1463  000A20  6F96               	movwf	(sprintf@prec+1)& (0+255),b
  1464  000A22  0E00               	movlw	0
  1465  000A24  0100               	movlb	0	; () banked
  1466  000A26  6F95               	movwf	sprintf@prec& (0+255),b
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;doprnt.c: 637: flag |= 0x1000;
  1470  000A28  0100               	movlb	0	; () banked
  1471  000A2A  0100               	movlb	0	; () banked
  1472  000A2C  898D               	bsf	(sprintf@flag+1)& (0+255),4,b
  1473  000A2E  D004               	goto	l5517
  1474  000A30                     l5513:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;doprnt.c: 672: flag |= 0x400;
  1478  000A30  0100               	movlb	0	; () banked
  1479  000A32  0100               	movlb	0	; () banked
  1480  000A34  858D               	bsf	(sprintf@flag+1)& (0+255),2,b
  1481                           
  1482                           ;doprnt.c: 673: break;
  1483  000A36  D019               	goto	l5519
  1484  000A38                     l5517:
  1485  000A38  0100               	movlb	0	; () banked
  1486  000A3A  C068  FFF6         	movff	sprintf@f,tblptrl
  1487  000A3E  0100               	movlb	0	; () banked
  1488  000A40  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1489  000A44  0100               	movlb	0	; () banked
  1490  000A46  0100               	movlb	0	; () banked
  1491  000A48  4B68               	infsnz	sprintf@f& (0+255),f,b
  1492  000A4A  2B69               	incf	(sprintf@f+1)& (0+255),f,b
  1493  000A4C  0008               	tblrd		*
  1494  000A4E  0100               	movlb	0	; () banked
  1495  000A50  CFF5 F097          	movff	tablat,sprintf@c
  1496  000A54  0100               	movlb	0	; () banked
  1497  000A56  5197               	movf	sprintf@c& (0+255),w,b
  1498                           
  1499                           ; Switch size 1, requested type "space"
  1500                           ; Number of cases is 2, Range of values is 0 to 102
  1501                           ; switch strategies available:
  1502                           ; Name         Instructions Cycles
  1503                           ; simple_byte            7     4 (average)
  1504                           ;	Chosen strategy is simple_byte
  1505  000A58  0A00               	xorlw	0	; case 0
  1506  000A5A  B4D8               	btfsc	status,2,c
  1507  000A5C  EF04  F00A         	goto	l5737
  1508  000A60  0A66               	xorlw	102	; case 102
  1509  000A62  B4D8               	btfsc	status,2,c
  1510  000A64  D7E5               	goto	l5513
  1511  000A66  EFF2  F009         	goto	l5735
  1512  000A6A                     l5519:
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;doprnt.c: 834: if(flag & (0x700)) {
  1516  000A6A  0E07               	movlw	7
  1517  000A6C  0100               	movlb	0	; () banked
  1518  000A6E  0100               	movlb	0	; () banked
  1519  000A70  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  1520  000A72  B4D8               	btfsc	status,2,c
  1521  000A74  D3C8               	goto	l5687
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;doprnt.c: 836: if(flag & 0x1000)
  1525  000A76  0100               	movlb	0	; () banked
  1526  000A78  0100               	movlb	0	; () banked
  1527  000A7A  A98D               	btfss	(sprintf@flag+1)& (0+255),4,b
  1528  000A7C  D007               	goto	l5525
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;doprnt.c: 838: prec = 6;
  1532  000A7E  0E00               	movlw	0
  1533  000A80  0100               	movlb	0	; () banked
  1534  000A82  0100               	movlb	0	; () banked
  1535  000A84  6F96               	movwf	(sprintf@prec+1)& (0+255),b
  1536  000A86  0E06               	movlw	6
  1537  000A88  0100               	movlb	0	; () banked
  1538  000A8A  6F95               	movwf	sprintf@prec& (0+255),b
  1539  000A8C                     l5525:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1543  000A8C  C07A  FFD9         	movff	sprintf@ap,fsr2l
  1544  000A90  C07B  FFDA         	movff	sprintf@ap+1,fsr2h
  1545  000A94  0100               	movlb	0	; () banked
  1546  000A96  CFDE F092          	movff	postinc2,sprintf@fval
  1547  000A9A  0100               	movlb	0	; () banked
  1548  000A9C  CFDE F093          	movff	postinc2,sprintf@fval+1
  1549  000AA0  0100               	movlb	0	; () banked
  1550  000AA2  CFDD F094          	movff	postdec2,sprintf@fval+2
  1551                           
  1552                           ; BSR set to: 0
  1553  000AA6  0E03               	movlw	3
  1554  000AA8  0100               	movlb	0	; () banked
  1555  000AAA  0100               	movlb	0	; () banked
  1556  000AAC  277A               	addwf	sprintf@ap& (0+255),f,b
  1557  000AAE  0E00               	movlw	0
  1558  000AB0  0100               	movlb	0	; () banked
  1559  000AB2  237B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;doprnt.c: 840: if(fval < 0.0) {
  1563  000AB4  0100               	movlb	0	; () banked
  1564  000AB6  0100               	movlb	0	; () banked
  1565  000AB8  5194               	movf	(sprintf@fval+2)& (0+255),w,b
  1566  000ABA  0A80               	xorlw	128
  1567  000ABC  0F80               	addlw	128
  1568  000ABE  E107               	bnz	u4525
  1569  000AC0  0E00               	movlw	0
  1570  000AC2  0100               	movlb	0	; () banked
  1571  000AC4  5D93               	subwf	(sprintf@fval+1)& (0+255),w,b
  1572  000AC6  E103               	bnz	u4525
  1573  000AC8  0E00               	movlw	0
  1574  000ACA  0100               	movlb	0	; () banked
  1575  000ACC  5D92               	subwf	sprintf@fval& (0+255),w,b
  1576  000ACE                     u4525:
  1577  000ACE  B0D8               	btfsc	status,0,c
  1578  000AD0  D012               	goto	l5535
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;doprnt.c: 841: fval = -fval;
  1582  000AD2  C092  F015         	movff	sprintf@fval,___ftneg@f1
  1583  000AD6  C093  F016         	movff	sprintf@fval+1,___ftneg@f1+1
  1584  000ADA  C094  F017         	movff	sprintf@fval+2,___ftneg@f1+2
  1585  000ADE  EC68  F016         	call	___ftneg	;wreg free
  1586  000AE2  C015  F092         	movff	?___ftneg,sprintf@fval
  1587  000AE6  C016  F093         	movff	?___ftneg+1,sprintf@fval+1
  1588  000AEA  C017  F094         	movff	?___ftneg+2,sprintf@fval+2
  1589                           
  1590                           ;doprnt.c: 842: flag |= 0x03;
  1591  000AEE  0E03               	movlw	3
  1592  000AF0  0100               	movlb	0	; () banked
  1593  000AF2  0100               	movlb	0	; () banked
  1594  000AF4  138C               	iorwf	sprintf@flag& (0+255),f,b
  1595  000AF6                     l5535:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;doprnt.c: 843: }
  1599                           ;doprnt.c: 844: exp = 0;
  1600  000AF6  0E00               	movlw	0
  1601  000AF8  0100               	movlb	0	; () banked
  1602  000AFA  0100               	movlb	0	; () banked
  1603  000AFC  6F91               	movwf	(sprintf@exp+1)& (0+255),b
  1604  000AFE  0E00               	movlw	0
  1605  000B00  0100               	movlb	0	; () banked
  1606  000B02  6F90               	movwf	sprintf@exp& (0+255),b
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;doprnt.c: 845: if( fval!=0) {
  1610  000B04  0E7F               	movlw	127
  1611  000B06  0100               	movlb	0	; () banked
  1612  000B08  0100               	movlb	0	; () banked
  1613  000B0A  1594               	andwf	(sprintf@fval+2)& (0+255),w,b
  1614  000B0C  0100               	movlb	0	; () banked
  1615  000B0E  1193               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1616  000B10  0100               	movlb	0	; () banked
  1617  000B12  1192               	iorwf	sprintf@fval& (0+255),w,b
  1618  000B14  B4D8               	btfsc	status,2,c
  1619  000B16  D09D               	goto	l5563
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1623  000B18  0E82               	movlw	130
  1624  000B1A  0100               	movlb	0	; () banked
  1625  000B1C  6F6D               	movwf	??_sprintf& (0+255),b
  1626  000B1E  0EFF               	movlw	255
  1627  000B20  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  1628  000B22  0100               	movlb	0	; () banked
  1629  000B24  C092  F06F         	movff	sprintf@fval,??_sprintf+2
  1630  000B28  0100               	movlb	0	; () banked
  1631  000B2A  C093  F070         	movff	sprintf@fval+1,??_sprintf+3
  1632  000B2E  0100               	movlb	0	; () banked
  1633  000B30  C094  F071         	movff	sprintf@fval+2,??_sprintf+4
  1634  000B34  0100               	movlb	0	; () banked
  1635  000B36  C095  F072         	movff	sprintf@fval+3,??_sprintf+5
  1636  000B3A  0E10               	movlw	16
  1637  000B3C  D006               	goto	u4540
  1638  000B3E                     u4545:
  1639  000B3E  0100               	movlb	0	; () banked
  1640  000B40  90D8               	bcf	status,0,c
  1641  000B42  3372               	rrcf	(??_sprintf+5)& (0+255),f,b
  1642  000B44  3371               	rrcf	(??_sprintf+4)& (0+255),f,b
  1643  000B46  3370               	rrcf	(??_sprintf+3)& (0+255),f,b
  1644  000B48  336F               	rrcf	(??_sprintf+2)& (0+255),f,b
  1645  000B4A                     u4540:
  1646  000B4A  2EE8               	decfsz	wreg,f,c
  1647  000B4C  D7F8               	goto	u4545
  1648  000B4E  0100               	movlb	0	; () banked
  1649  000B50  516F               	movf	(??_sprintf+2)& (0+255),w,b
  1650  000B52  0100               	movlb	0	; () banked
  1651  000B54  256D               	addwf	??_sprintf& (0+255),w,b
  1652  000B56  0100               	movlb	0	; () banked
  1653  000B58  0100               	movlb	0	; () banked
  1654  000B5A  6F90               	movwf	sprintf@exp& (0+255),b
  1655  000B5C  0100               	movlb	0	; () banked
  1656  000B5E  0100               	movlb	0	; () banked
  1657  000B60  0E00               	movlw	0
  1658  000B62  216E               	addwfc	(??_sprintf+1)& (0+255),w,b
  1659  000B64  6F91               	movwf	(sprintf@exp+1)& (0+255),b
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;doprnt.c: 847: exp--;
  1663  000B66  0100               	movlb	0	; () banked
  1664  000B68  0100               	movlb	0	; () banked
  1665  000B6A  0790               	decf	sprintf@exp& (0+255),f,b
  1666  000B6C  A0D8               	btfss	status,0,c
  1667  000B6E  0791               	decf	(sprintf@exp+1)& (0+255),f,b
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;doprnt.c: 848: exp *= 3;
  1671  000B70  C090  F025         	movff	sprintf@exp,___wmul@multiplier
  1672  000B74  C091  F026         	movff	sprintf@exp+1,___wmul@multiplier+1
  1673  000B78  0E00               	movlw	0
  1674  000B7A  6E28               	movwf	___wmul@multiplicand+1,c
  1675  000B7C  0E03               	movlw	3
  1676  000B7E  6E27               	movwf	___wmul@multiplicand,c
  1677  000B80  ECBC  F015         	call	___wmul	;wreg free
  1678  000B84  C025  F090         	movff	?___wmul,sprintf@exp
  1679  000B88  C026  F091         	movff	?___wmul+1,sprintf@exp+1
  1680                           
  1681                           ;doprnt.c: 849: exp /= 10;
  1682  000B8C  C090  F01C         	movff	sprintf@exp,___awdiv@dividend
  1683  000B90  C091  F01D         	movff	sprintf@exp+1,___awdiv@dividend+1
  1684  000B94  0E00               	movlw	0
  1685  000B96  6E1F               	movwf	___awdiv@divisor+1,c
  1686  000B98  0E0A               	movlw	10
  1687  000B9A  6E1E               	movwf	___awdiv@divisor,c
  1688  000B9C  EC79  F011         	call	___awdiv	;wreg free
  1689  000BA0  C01C  F090         	movff	?___awdiv,sprintf@exp
  1690  000BA4  C01D  F091         	movff	?___awdiv+1,sprintf@exp+1
  1691                           
  1692                           ;doprnt.c: 850: if(exp < 0)
  1693  000BA8  0100               	movlb	0	; () banked
  1694  000BAA  0100               	movlb	0	; () banked
  1695  000BAC  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  1696  000BAE  0A80               	xorlw	128
  1697  000BB0  6EF3               	movwf	prodl,c
  1698  000BB2  0E80               	movlw	128
  1699  000BB4  5CF3               	subwf	prodl,w,c
  1700  000BB6  0E00               	movlw	0
  1701  000BB8  B4D8               	btfsc	status,2,c
  1702  000BBA  5D90               	subwf	sprintf@exp& (0+255),w,b
  1703  000BBC  B0D8               	btfsc	status,0,c
  1704  000BBE  D005               	goto	l5551
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;doprnt.c: 851: exp--;
  1708  000BC0  0100               	movlb	0	; () banked
  1709  000BC2  0100               	movlb	0	; () banked
  1710  000BC4  0790               	decf	sprintf@exp& (0+255),f,b
  1711  000BC6  A0D8               	btfss	status,0,c
  1712  000BC8  0791               	decf	(sprintf@exp+1)& (0+255),f,b
  1713  000BCA                     l5551:
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;doprnt.c: 855: integ = scale(-exp);
  1717  000BCA  0100               	movlb	0	; () banked
  1718  000BCC  0100               	movlb	0	; () banked
  1719  000BCE  5190               	movf	sprintf@exp& (0+255),w,b
  1720  000BD0  0800               	sublw	0
  1721  000BD2  EC0B  F00A         	call	_scale
  1722  000BD6  C03A  F084         	movff	?_scale,sprintf@integ
  1723  000BDA  C03B  F085         	movff	?_scale+1,sprintf@integ+1
  1724  000BDE  C03C  F086         	movff	?_scale+2,sprintf@integ+2
  1725                           
  1726                           ;doprnt.c: 856: integ *= fval;
  1727  000BE2  0100               	movlb	0	; () banked
  1728  000BE4  0E00               	movlw	high sprintf@integ
  1729  000BE6  6E3B               	movwf	___asftmul@f1p+1,c
  1730  000BE8  0100               	movlb	0	; () banked
  1731  000BEA  0E84               	movlw	low sprintf@integ
  1732  000BEC  6E3A               	movwf	___asftmul@f1p,c
  1733  000BEE  C092  F03C         	movff	sprintf@fval,___asftmul@f2
  1734  000BF2  C093  F03D         	movff	sprintf@fval+1,___asftmul@f2+1
  1735  000BF6  C094  F03E         	movff	sprintf@fval+2,___asftmul@f2+2
  1736  000BFA  EC80  F015         	call	___asftmul	;wreg free
  1737                           
  1738                           ;doprnt.c: 857: if(integ < 1.0)
  1739  000BFE  C084  F015         	movff	sprintf@integ,___ftge@ff1
  1740  000C02  C085  F016         	movff	sprintf@integ+1,___ftge@ff1+1
  1741  000C06  C086  F017         	movff	sprintf@integ+2,___ftge@ff1+2
  1742  000C0A  0E00               	movlw	0
  1743  000C0C  6E18               	movwf	___ftge@ff2,c
  1744  000C0E  0E80               	movlw	128
  1745  000C10  6E19               	movwf	___ftge@ff2+1,c
  1746  000C12  0E3F               	movlw	63
  1747  000C14  6E1A               	movwf	___ftge@ff2+2,c
  1748  000C16  EC14  F013         	call	___ftge	;wreg free
  1749  000C1A  B0D8               	btfsc	status,0,c
  1750  000C1C  D006               	goto	l5559
  1751                           
  1752                           ;doprnt.c: 858: exp--;
  1753  000C1E  0100               	movlb	0	; () banked
  1754  000C20  0100               	movlb	0	; () banked
  1755  000C22  0790               	decf	sprintf@exp& (0+255),f,b
  1756  000C24  A0D8               	btfss	status,0,c
  1757  000C26  0791               	decf	(sprintf@exp+1)& (0+255),f,b
  1758  000C28  D014               	goto	l5563
  1759  000C2A                     l5559:
  1760                           
  1761                           ;doprnt.c: 859: else if(integ >= 10.0)
  1762  000C2A  C084  F015         	movff	sprintf@integ,___ftge@ff1
  1763  000C2E  C085  F016         	movff	sprintf@integ+1,___ftge@ff1+1
  1764  000C32  C086  F017         	movff	sprintf@integ+2,___ftge@ff1+2
  1765  000C36  0E00               	movlw	0
  1766  000C38  6E18               	movwf	___ftge@ff2,c
  1767  000C3A  0E20               	movlw	32
  1768  000C3C  6E19               	movwf	___ftge@ff2+1,c
  1769  000C3E  0E41               	movlw	65
  1770  000C40  6E1A               	movwf	___ftge@ff2+2,c
  1771  000C42  EC14  F013         	call	___ftge	;wreg free
  1772  000C46  A0D8               	btfss	status,0,c
  1773  000C48  D004               	goto	l5563
  1774                           
  1775                           ;doprnt.c: 860: exp++;
  1776  000C4A  0100               	movlb	0	; () banked
  1777  000C4C  0100               	movlb	0	; () banked
  1778  000C4E  4B90               	infsnz	sprintf@exp& (0+255),f,b
  1779  000C50  2B91               	incf	(sprintf@exp+1)& (0+255),f,b
  1780  000C52                     l5563:
  1781                           
  1782                           ;doprnt.c: 861: }
  1783                           ;doprnt.c: 1121: if(prec <= 12)
  1784  000C52  0100               	movlb	0	; () banked
  1785  000C54  0100               	movlb	0	; () banked
  1786  000C56  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  1787  000C58  0A80               	xorlw	128
  1788  000C5A  6EF3               	movwf	prodl,c
  1789  000C5C  0E80               	movlw	128
  1790  000C5E  5CF3               	subwf	prodl,w,c
  1791  000C60  0E0D               	movlw	13
  1792  000C62  B4D8               	btfsc	status,2,c
  1793  000C64  5D95               	subwf	sprintf@prec& (0+255),w,b
  1794  000C66  B0D8               	btfsc	status,0,c
  1795  000C68  D013               	goto	l5567
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;doprnt.c: 1122: fval += fround(prec);
  1799  000C6A  0100               	movlb	0	; () banked
  1800  000C6C  0E00               	movlw	high sprintf@fval
  1801  000C6E  6E45               	movwf	___asftadd@f1p+1,c
  1802  000C70  0100               	movlb	0	; () banked
  1803  000C72  0E92               	movlw	low sprintf@fval
  1804  000C74  6E44               	movwf	___asftadd@f1p,c
  1805  000C76  0100               	movlb	0	; () banked
  1806  000C78  0100               	movlb	0	; () banked
  1807  000C7A  5195               	movf	sprintf@prec& (0+255),w,b
  1808  000C7C  ECF3  F00B         	call	_fround
  1809  000C80  C03A  F046         	movff	?_fround,___asftadd@f2
  1810  000C84  C03B  F047         	movff	?_fround+1,___asftadd@f2+1
  1811  000C88  C03C  F048         	movff	?_fround+2,___asftadd@f2+2
  1812  000C8C  EC9E  F015         	call	___asftadd	;wreg free
  1813  000C90                     l5567:
  1814                           
  1815                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1816  000C90  0100               	movlb	0	; () banked
  1817  000C92  0100               	movlb	0	; () banked
  1818  000C94  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  1819  000C96  0A80               	xorlw	128
  1820  000C98  6EF3               	movwf	prodl,c
  1821  000C9A  0E80               	movlw	128
  1822  000C9C  5CF3               	subwf	prodl,w,c
  1823  000C9E  0E0A               	movlw	10
  1824  000CA0  B4D8               	btfsc	status,2,c
  1825  000CA2  5D90               	subwf	sprintf@exp& (0+255),w,b
  1826  000CA4  B0D8               	btfsc	status,0,c
  1827  000CA6  D02B               	goto	l5575
  1828                           
  1829                           ; BSR set to: 0
  1830  000CA8  0E7F               	movlw	127
  1831  000CAA  0100               	movlb	0	; () banked
  1832  000CAC  0100               	movlb	0	; () banked
  1833  000CAE  1594               	andwf	(sprintf@fval+2)& (0+255),w,b
  1834  000CB0  0100               	movlb	0	; () banked
  1835  000CB2  1193               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1836  000CB4  0100               	movlb	0	; () banked
  1837  000CB6  1192               	iorwf	sprintf@fval& (0+255),w,b
  1838  000CB8  B4D8               	btfsc	status,2,c
  1839  000CBA  D071               	goto	l5591
  1840                           
  1841                           ; BSR set to: 0
  1842  000CBC  C092  F041         	movff	sprintf@fval,___fttol@f1
  1843  000CC0  C093  F042         	movff	sprintf@fval+1,___fttol@f1+1
  1844  000CC4  C094  F043         	movff	sprintf@fval+2,___fttol@f1+2
  1845  000CC8  EC7E  F00F         	call	___fttol	;wreg free
  1846  000CCC  C041  F06D         	movff	?___fttol,??_sprintf
  1847  000CD0  C042  F06E         	movff	?___fttol+1,??_sprintf+1
  1848  000CD4  C043  F06F         	movff	?___fttol+2,??_sprintf+2
  1849  000CD8  C044  F070         	movff	?___fttol+3,??_sprintf+3
  1850  000CDC  0100               	movlb	0	; () banked
  1851  000CDE  5170               	movf	(??_sprintf+3)& (0+255),w,b
  1852  000CE0  116D               	iorwf	??_sprintf& (0+255),w,b
  1853  000CE2  116E               	iorwf	(??_sprintf+1)& (0+255),w,b
  1854  000CE4  116F               	iorwf	(??_sprintf+2)& (0+255),w,b
  1855  000CE6  A4D8               	btfss	status,2,c
  1856  000CE8  D05A               	goto	l5591
  1857                           
  1858                           ; BSR set to: 0
  1859  000CEA  0100               	movlb	0	; () banked
  1860  000CEC  0100               	movlb	0	; () banked
  1861  000CEE  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  1862  000CF0  0A80               	xorlw	128
  1863  000CF2  0F80               	addlw	-128
  1864  000CF4  0E02               	movlw	2
  1865  000CF6  B4D8               	btfsc	status,2,c
  1866  000CF8  5D90               	subwf	sprintf@exp& (0+255),w,b
  1867  000CFA  A0D8               	btfss	status,0,c
  1868  000CFC  D050               	goto	l5591
  1869  000CFE                     l5575:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;doprnt.c: 1129: if(integ < 4.294967296){
  1873  000CFE  C084  F015         	movff	sprintf@integ,___ftge@ff1
  1874  000D02  C085  F016         	movff	sprintf@integ+1,___ftge@ff1+1
  1875  000D06  C086  F017         	movff	sprintf@integ+2,___ftge@ff1+2
  1876  000D0A  0E70               	movlw	112
  1877  000D0C  6E18               	movwf	___ftge@ff2,c
  1878  000D0E  0E89               	movlw	137
  1879  000D10  6E19               	movwf	___ftge@ff2+1,c
  1880  000D12  0E40               	movlw	64
  1881  000D14  6E1A               	movwf	___ftge@ff2+2,c
  1882  000D16  EC14  F013         	call	___ftge	;wreg free
  1883  000D1A  B0D8               	btfsc	status,0,c
  1884  000D1C  D003               	goto	l5579
  1885                           
  1886                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1887  000D1E  0100               	movlb	0	; () banked
  1888  000D20  0EF7               	movlw	247
  1889  000D22  D002               	goto	L2
  1890  000D24                     l5579:
  1891                           
  1892                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1893  000D24  0100               	movlb	0	; () banked
  1894  000D26  0EF8               	movlw	248
  1895  000D28                     L2:
  1896  000D28  0100               	movlb	0	; () banked
  1897  000D2A  2790               	addwf	sprintf@exp& (0+255),f,b
  1898  000D2C  0EFF               	movlw	255
  1899  000D2E  0100               	movlb	0	; () banked
  1900  000D30  2391               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;doprnt.c: 1133: }
  1904                           ;doprnt.c: 1134: integ = scale(exp);
  1905                           
  1906                           ; BSR set to: 0
  1907  000D32  0100               	movlb	0	; () banked
  1908  000D34  0100               	movlb	0	; () banked
  1909  000D36  5190               	movf	sprintf@exp& (0+255),w,b
  1910  000D38  EC0B  F00A         	call	_scale
  1911  000D3C  C03A  F084         	movff	?_scale,sprintf@integ
  1912  000D40  C03B  F085         	movff	?_scale+1,sprintf@integ+1
  1913  000D44  C03C  F086         	movff	?_scale+2,sprintf@integ+2
  1914                           
  1915                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  1916  000D48  C092  F015         	movff	sprintf@fval,__tdiv_to_l_@f1
  1917  000D4C  C093  F016         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  1918  000D50  C094  F017         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  1919  000D54  C084  F018         	movff	sprintf@integ,__tdiv_to_l_@f2
  1920  000D58  C085  F019         	movff	sprintf@integ+1,__tdiv_to_l_@f2+1
  1921  000D5C  C086  F01A         	movff	sprintf@integ+2,__tdiv_to_l_@f2+2
  1922  000D60  EC14  F010         	call	__tdiv_to_l_	;wreg free
  1923  000D64  C015  F076         	movff	?__tdiv_to_l_,_sprintf$606
  1924  000D68  C016  F077         	movff	?__tdiv_to_l_+1,_sprintf$606+1
  1925  000D6C  C017  F078         	movff	?__tdiv_to_l_+2,_sprintf$606+2
  1926  000D70  C018  F079         	movff	?__tdiv_to_l_+3,_sprintf$606+3
  1927  000D74  C076  F087         	movff	_sprintf$606,sprintf@_val
  1928  000D78  C077  F088         	movff	_sprintf$606+1,sprintf@_val+1
  1929  000D7C  C078  F089         	movff	_sprintf$606+2,sprintf@_val+2
  1930  000D80  C079  F08A         	movff	_sprintf$606+3,sprintf@_val+3
  1931                           
  1932                           ;doprnt.c: 1138: fval = 0.0;
  1933  000D84  0E00               	movlw	0
  1934  000D86  0100               	movlb	0	; () banked
  1935  000D88  0100               	movlb	0	; () banked
  1936  000D8A  6F92               	movwf	sprintf@fval& (0+255),b
  1937  000D8C  0E00               	movlw	0
  1938  000D8E  0100               	movlb	0	; () banked
  1939  000D90  0100               	movlb	0	; () banked
  1940  000D92  6F93               	movwf	(sprintf@fval+1)& (0+255),b
  1941  000D94  0E00               	movlw	0
  1942  000D96  0100               	movlb	0	; () banked
  1943  000D98  0100               	movlb	0	; () banked
  1944  000D9A  6F94               	movwf	(sprintf@fval+2)& (0+255),b
  1945                           
  1946                           ;doprnt.c: 1139: } else {
  1947  000D9C  D02F               	goto	l5597
  1948  000D9E                     l5591:
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  1952  000D9E  C092  F041         	movff	sprintf@fval,___fttol@f1
  1953  000DA2  C093  F042         	movff	sprintf@fval+1,___fttol@f1+1
  1954  000DA6  C094  F043         	movff	sprintf@fval+2,___fttol@f1+2
  1955  000DAA  EC7E  F00F         	call	___fttol	;wreg free
  1956  000DAE  C041  F087         	movff	?___fttol,sprintf@_val
  1957  000DB2  C042  F088         	movff	?___fttol+1,sprintf@_val+1
  1958  000DB6  C043  F089         	movff	?___fttol+2,sprintf@_val+2
  1959  000DBA  C044  F08A         	movff	?___fttol+3,sprintf@_val+3
  1960                           
  1961                           ;doprnt.c: 1141: fval -= (double)_val._val;
  1962  000DBE  0100               	movlb	0	; () banked
  1963  000DC0  0E00               	movlw	high sprintf@fval
  1964  000DC2  6E30               	movwf	___asftsub@f1p+1,c
  1965  000DC4  0100               	movlb	0	; () banked
  1966  000DC6  0E92               	movlw	low sprintf@fval
  1967  000DC8  6E2F               	movwf	___asftsub@f1p,c
  1968  000DCA  C087  F01D         	movff	sprintf@_val,___lltoft@c
  1969  000DCE  C088  F01E         	movff	sprintf@_val+1,___lltoft@c+1
  1970  000DD2  C089  F01F         	movff	sprintf@_val+2,___lltoft@c+2
  1971  000DD6  C08A  F020         	movff	sprintf@_val+3,___lltoft@c+3
  1972  000DDA  EC09  F014         	call	___lltoft	;wreg free
  1973  000DDE  C01D  F031         	movff	?___lltoft,___asftsub@f2
  1974  000DE2  C01E  F032         	movff	?___lltoft+1,___asftsub@f2+1
  1975  000DE6  C01F  F033         	movff	?___lltoft+2,___asftsub@f2+2
  1976  000DEA  EC62  F015         	call	___asftsub	;wreg free
  1977                           
  1978                           ;doprnt.c: 1142: exp = 0;
  1979  000DEE  0E00               	movlw	0
  1980  000DF0  0100               	movlb	0	; () banked
  1981  000DF2  0100               	movlb	0	; () banked
  1982  000DF4  6F91               	movwf	(sprintf@exp+1)& (0+255),b
  1983  000DF6  0E00               	movlw	0
  1984  000DF8  0100               	movlb	0	; () banked
  1985  000DFA  6F90               	movwf	sprintf@exp& (0+255),b
  1986  000DFC                     l5597:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;doprnt.c: 1143: }
  1990                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1991  000DFC  0100               	movlb	0	; () banked
  1992  000DFE  6F6D               	movwf	??_sprintf& (0+255),b
  1993  000E00  0E01               	movlw	1
  1994  000E02  0100               	movlb	0	; () banked
  1995  000E04  0100               	movlb	0	; () banked
  1996  000E06  6F97               	movwf	sprintf@c& (0+255),b
  1997  000E08  0100               	movlb	0	; () banked
  1998  000E0A  516D               	movf	??_sprintf& (0+255),w,b
  1999  000E0C                     
  2000                           ; BSR set to: 0
  2001  000E0C  0100               	movlb	0	; () banked
  2002  000E0E  0100               	movlb	0	; () banked
  2003  000E10  5197               	movf	sprintf@c& (0+255),w,b
  2004  000E12  0A0A               	xorlw	10
  2005  000E14  B4D8               	btfsc	status,2,c
  2006  000E16  D021               	goto	l5611
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2010                           
  2011                           ; BSR set to: 0
  2012                           
  2013                           ; BSR set to: 0
  2014  000E18  0100               	movlb	0	; () banked
  2015  000E1A  0100               	movlb	0	; () banked
  2016  000E1C  5197               	movf	sprintf@c& (0+255),w,b
  2017  000E1E  0D04               	mullw	4
  2018  000E20  0E01               	movlw	low _dpowers
  2019  000E22  24F3               	addwf	prodl,w,c
  2020  000E24  6EF6               	movwf	tblptrl,c
  2021  000E26  0E08               	movlw	high _dpowers
  2022  000E28  20F4               	addwfc	prodh,w,c
  2023  000E2A  6EF7               	movwf	tblptrh,c
  2024  000E2C  0009               	tblrd		*+
  2025  000E2E  50F5               	movf	tablat,w,c
  2026  000E30  0100               	movlb	0	; () banked
  2027  000E32  0100               	movlb	0	; () banked
  2028  000E34  5D87               	subwf	sprintf@_val& (0+255),w,b
  2029  000E36  0009               	tblrd		*+
  2030  000E38  50F5               	movf	tablat,w,c
  2031  000E3A  0100               	movlb	0	; () banked
  2032  000E3C  5988               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2033  000E3E  0009               	tblrd		*+
  2034  000E40  50F5               	movf	tablat,w,c
  2035  000E42  0100               	movlb	0	; () banked
  2036  000E44  5989               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2037  000E46  0009               	tblrd		*+
  2038  000E48  50F5               	movf	tablat,w,c
  2039  000E4A  0100               	movlb	0	; () banked
  2040  000E4C  598A               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2041  000E4E  A0D8               	btfss	status,0,c
  2042  000E50  D004               	goto	l5611
  2043                           
  2044                           ; BSR set to: 0
  2045                           
  2046                           ; BSR set to: 0
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;doprnt.c: 1147: break;
  2050  000E52  0100               	movlb	0	; () banked
  2051  000E54  0100               	movlb	0	; () banked
  2052  000E56  2B97               	incf	sprintf@c& (0+255),f,b
  2053  000E58  D7D9               	goto	L3
  2054  000E5A                     l5611:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;doprnt.c: 1151: width -= prec + c + exp;
  2058  000E5A  0100               	movlb	0	; () banked
  2059  000E5C  C097  F06D         	movff	sprintf@c,??_sprintf
  2060  000E60  0100               	movlb	0	; () banked
  2061  000E62  6B6E               	clrf	(??_sprintf+1)& (0+255),b
  2062  000E64  BF6D               	btfsc	??_sprintf& (0+255),7,b
  2063  000E66  076E               	decf	(??_sprintf+1)& (0+255),f,b
  2064  000E68  0100               	movlb	0	; () banked
  2065  000E6A  0100               	movlb	0	; () banked
  2066  000E6C  5195               	movf	sprintf@prec& (0+255),w,b
  2067  000E6E  0100               	movlb	0	; () banked
  2068  000E70  276D               	addwf	??_sprintf& (0+255),f,b
  2069  000E72  0100               	movlb	0	; () banked
  2070  000E74  0100               	movlb	0	; () banked
  2071  000E76  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  2072  000E78  0100               	movlb	0	; () banked
  2073  000E7A  236E               	addwfc	(??_sprintf+1)& (0+255),f,b
  2074  000E7C  0100               	movlb	0	; () banked
  2075  000E7E  0100               	movlb	0	; () banked
  2076  000E80  5190               	movf	sprintf@exp& (0+255),w,b
  2077  000E82  0100               	movlb	0	; () banked
  2078  000E84  276D               	addwf	??_sprintf& (0+255),f,b
  2079  000E86  0100               	movlb	0	; () banked
  2080  000E88  0100               	movlb	0	; () banked
  2081  000E8A  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  2082  000E8C  0100               	movlb	0	; () banked
  2083  000E8E  236E               	addwfc	(??_sprintf+1)& (0+255),f,b
  2084  000E90  0100               	movlb	0	; () banked
  2085  000E92  516D               	movf	??_sprintf& (0+255),w,b
  2086  000E94  0100               	movlb	0	; () banked
  2087  000E96  0100               	movlb	0	; () banked
  2088  000E98  5F8E               	subwf	sprintf@width& (0+255),f,b
  2089  000E9A  0100               	movlb	0	; () banked
  2090  000E9C  516E               	movf	(??_sprintf+1)& (0+255),w,b
  2091  000E9E  0100               	movlb	0	; () banked
  2092  000EA0  0100               	movlb	0	; () banked
  2093  000EA2  5B8F               	subwfb	(sprintf@width+1)& (0+255),f,b
  2094                           
  2095                           ;doprnt.c: 1152: if(
  2096                           ;doprnt.c: 1156: prec)
  2097  000EA4  0100               	movlb	0	; () banked
  2098  000EA6  0100               	movlb	0	; () banked
  2099  000EA8  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  2100  000EAA  1195               	iorwf	sprintf@prec& (0+255),w,b
  2101  000EAC  B4D8               	btfsc	status,2,c
  2102  000EAE  D005               	goto	l5615
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;doprnt.c: 1157: width--;
  2106  000EB0  0100               	movlb	0	; () banked
  2107  000EB2  0100               	movlb	0	; () banked
  2108  000EB4  078E               	decf	sprintf@width& (0+255),f,b
  2109  000EB6  A0D8               	btfss	status,0,c
  2110  000EB8  078F               	decf	(sprintf@width+1)& (0+255),f,b
  2111  000EBA                     l5615:
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;doprnt.c: 1158: if(flag & 0x03)
  2115  000EBA  0E03               	movlw	3
  2116  000EBC  0100               	movlb	0	; () banked
  2117  000EBE  0100               	movlb	0	; () banked
  2118  000EC0  158C               	andwf	sprintf@flag& (0+255),w,b
  2119  000EC2  0100               	movlb	0	; () banked
  2120  000EC4  6F6D               	movwf	??_sprintf& (0+255),b
  2121  000EC6  0E00               	movlw	0
  2122  000EC8  0100               	movlb	0	; () banked
  2123  000ECA  0100               	movlb	0	; () banked
  2124  000ECC  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  2125  000ECE  0100               	movlb	0	; () banked
  2126  000ED0  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  2127  000ED2  0100               	movlb	0	; () banked
  2128  000ED4  516E               	movf	(??_sprintf+1)& (0+255),w,b
  2129  000ED6  116D               	iorwf	??_sprintf& (0+255),w,b
  2130  000ED8  B4D8               	btfsc	status,2,c
  2131  000EDA  D010               	goto	l5625
  2132  000EDC  D00A               	goto	L4
  2133  000EDE                     l5619:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;doprnt.c: 1190: ((*sp++ = (' ')));
  2137  000EDE  C066  FFD9         	movff	sprintf@sp,fsr2l
  2138  000EE2  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2139  000EE6  0E20               	movlw	32
  2140  000EE8  6EDF               	movwf	indf2,c
  2141                           
  2142                           ; BSR set to: 0
  2143  000EEA  0100               	movlb	0	; () banked
  2144  000EEC  0100               	movlb	0	; () banked
  2145  000EEE  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2146  000EF0  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2147  000EF2                     L4:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;doprnt.c: 1191: width--;
  2151  000EF2  0100               	movlb	0	; () banked
  2152  000EF4  0100               	movlb	0	; () banked
  2153  000EF6  078E               	decf	sprintf@width& (0+255),f,b
  2154  000EF8  A0D8               	btfss	status,0,c
  2155  000EFA  078F               	decf	(sprintf@width+1)& (0+255),f,b
  2156  000EFC                     l5625:
  2157                           
  2158                           ; BSR set to: 0
  2159  000EFC  0100               	movlb	0	; () banked
  2160  000EFE  0100               	movlb	0	; () banked
  2161  000F00  518F               	movf	(sprintf@width+1)& (0+255),w,b
  2162  000F02  0A80               	xorlw	128
  2163  000F04  6EF3               	movwf	prodl,c
  2164  000F06  0E80               	movlw	128
  2165  000F08  5CF3               	subwf	prodl,w,c
  2166  000F0A  0E01               	movlw	1
  2167  000F0C  B4D8               	btfsc	status,2,c
  2168  000F0E  5D8E               	subwf	sprintf@width& (0+255),w,b
  2169  000F10  B0D8               	btfsc	status,0,c
  2170  000F12  D7E5               	goto	l5619
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;doprnt.c: 1192: }
  2174                           ;doprnt.c: 1197: if(flag & 0x03)
  2175                           
  2176                           ; BSR set to: 0
  2177  000F14  0E03               	movlw	3
  2178  000F16  0100               	movlb	0	; () banked
  2179  000F18  0100               	movlb	0	; () banked
  2180  000F1A  158C               	andwf	sprintf@flag& (0+255),w,b
  2181  000F1C  0100               	movlb	0	; () banked
  2182  000F1E  6F6D               	movwf	??_sprintf& (0+255),b
  2183  000F20  0E00               	movlw	0
  2184  000F22  0100               	movlb	0	; () banked
  2185  000F24  0100               	movlb	0	; () banked
  2186  000F26  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  2187  000F28  0100               	movlb	0	; () banked
  2188  000F2A  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  2189  000F2C  0100               	movlb	0	; () banked
  2190  000F2E  516E               	movf	(??_sprintf+1)& (0+255),w,b
  2191  000F30  116D               	iorwf	??_sprintf& (0+255),w,b
  2192  000F32  B4D8               	btfsc	status,2,c
  2193  000F34  D055               	goto	l5641
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  2197  000F36  C066  FFD9         	movff	sprintf@sp,fsr2l
  2198  000F3A  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2199  000F3E  0E2D               	movlw	45
  2200  000F40  D04A               	goto	L5
  2201  000F42                     l5633:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;doprnt.c: 1209: {
  2205                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  2206  000F42  C087  F015         	movff	sprintf@_val,___lldiv@dividend
  2207  000F46  C088  F016         	movff	sprintf@_val+1,___lldiv@dividend+1
  2208  000F4A  C089  F017         	movff	sprintf@_val+2,___lldiv@dividend+2
  2209  000F4E  C08A  F018         	movff	sprintf@_val+3,___lldiv@dividend+3
  2210  000F52  0100               	movlb	0	; () banked
  2211  000F54  0100               	movlb	0	; () banked
  2212  000F56  5197               	movf	sprintf@c& (0+255),w,b
  2213  000F58  0D04               	mullw	4
  2214  000F5A  0E01               	movlw	low _dpowers
  2215  000F5C  24F3               	addwf	prodl,w,c
  2216  000F5E  6EF6               	movwf	tblptrl,c
  2217  000F60  0E08               	movlw	high _dpowers
  2218  000F62  20F4               	addwfc	prodh,w,c
  2219  000F64  6EF7               	movwf	tblptrh,c
  2220  000F66  0009               	tblrd		*+
  2221  000F68  CFF5 F019          	movff	tablat,___lldiv@divisor
  2222  000F6C  0009               	tblrd		*+
  2223  000F6E  CFF5 F01A          	movff	tablat,___lldiv@divisor+1
  2224  000F72  0009               	tblrd		*+
  2225  000F74  CFF5 F01B          	movff	tablat,___lldiv@divisor+2
  2226  000F78  000A               	tblrd		*-
  2227  000F7A  CFF5 F01C          	movff	tablat,___lldiv@divisor+3
  2228  000F7E  EC5C  F013         	call	___lldiv	;wreg free
  2229  000F82  C015  F07C         	movff	?___lldiv,sprintf@vd
  2230  000F86  C016  F07D         	movff	?___lldiv+1,sprintf@vd+1
  2231  000F8A  C017  F07E         	movff	?___lldiv+2,sprintf@vd+2
  2232  000F8E  C018  F07F         	movff	?___lldiv+3,sprintf@vd+3
  2233                           
  2234                           ;doprnt.c: 1211: vd %= 10;
  2235  000F92  C07C  F015         	movff	sprintf@vd,___llmod@dividend
  2236  000F96  C07D  F016         	movff	sprintf@vd+1,___llmod@dividend+1
  2237  000F9A  C07E  F017         	movff	sprintf@vd+2,___llmod@dividend+2
  2238  000F9E  C07F  F018         	movff	sprintf@vd+3,___llmod@dividend+3
  2239  000FA2  0E0A               	movlw	10
  2240  000FA4  6E19               	movwf	___llmod@divisor,c
  2241  000FA6  0E00               	movlw	0
  2242  000FA8  6E1A               	movwf	___llmod@divisor+1,c
  2243  000FAA  0E00               	movlw	0
  2244  000FAC  6E1B               	movwf	___llmod@divisor+2,c
  2245  000FAE  0E00               	movlw	0
  2246  000FB0  6E1C               	movwf	___llmod@divisor+3,c
  2247  000FB2  EC9F  F013         	call	___llmod	;wreg free
  2248  000FB6  C015  F07C         	movff	?___llmod,sprintf@vd
  2249  000FBA  C016  F07D         	movff	?___llmod+1,sprintf@vd+1
  2250  000FBE  C017  F07E         	movff	?___llmod+2,sprintf@vd+2
  2251  000FC2  C018  F07F         	movff	?___llmod+3,sprintf@vd+3
  2252                           
  2253                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  2254  000FC6  0100               	movlb	0	; () banked
  2255  000FC8  0100               	movlb	0	; () banked
  2256  000FCA  517C               	movf	sprintf@vd& (0+255),w,b
  2257  000FCC  0F30               	addlw	48
  2258  000FCE  C066  FFD9         	movff	sprintf@sp,fsr2l
  2259  000FD2  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2260  000FD6                     L5:
  2261  000FD6  6EDF               	movwf	indf2,c
  2262                           
  2263                           ; BSR set to: 0
  2264  000FD8  0100               	movlb	0	; () banked
  2265  000FDA  0100               	movlb	0	; () banked
  2266  000FDC  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2267  000FDE  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2268  000FE0                     l5641:
  2269                           
  2270                           ; BSR set to: 0
  2271  000FE0  0100               	movlb	0	; () banked
  2272  000FE2  0100               	movlb	0	; () banked
  2273  000FE4  0797               	decf	sprintf@c& (0+255),f,b
  2274  000FE6  0100               	movlb	0	; () banked
  2275  000FE8  2997               	incf	sprintf@c& (0+255),w,b
  2276  000FEA  B4D8               	btfsc	status,2,c
  2277  000FEC  D010               	goto	l5649
  2278  000FEE  D7A9               	goto	l5633
  2279  000FF0                     l5643:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  2283  000FF0  C066  FFD9         	movff	sprintf@sp,fsr2l
  2284  000FF4  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2285  000FF8  0E30               	movlw	48
  2286  000FFA  6EDF               	movwf	indf2,c
  2287                           
  2288                           ; BSR set to: 0
  2289  000FFC  0100               	movlb	0	; () banked
  2290  000FFE  0100               	movlb	0	; () banked
  2291  001000  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2292  001002  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;doprnt.c: 1218: exp--;
  2296  001004  0100               	movlb	0	; () banked
  2297  001006  0100               	movlb	0	; () banked
  2298  001008  0790               	decf	sprintf@exp& (0+255),f,b
  2299  00100A  A0D8               	btfss	status,0,c
  2300  00100C  0791               	decf	(sprintf@exp+1)& (0+255),f,b
  2301  00100E                     l5649:
  2302                           
  2303                           ; BSR set to: 0
  2304  00100E  0100               	movlb	0	; () banked
  2305  001010  0100               	movlb	0	; () banked
  2306  001012  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  2307  001014  0A80               	xorlw	128
  2308  001016  6EF3               	movwf	prodl,c
  2309  001018  0E80               	movlw	128
  2310  00101A  5CF3               	subwf	prodl,w,c
  2311  00101C  0E01               	movlw	1
  2312  00101E  B4D8               	btfsc	status,2,c
  2313  001020  5D90               	subwf	sprintf@exp& (0+255),w,b
  2314  001022  B0D8               	btfsc	status,0,c
  2315  001024  D7E5               	goto	l5643
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;doprnt.c: 1219: }
  2319                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2320                           
  2321                           ; BSR set to: 0
  2322  001026  0100               	movlb	0	; () banked
  2323  001028  0100               	movlb	0	; () banked
  2324  00102A  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  2325  00102C  0A80               	xorlw	128
  2326  00102E  0F80               	addlw	-128
  2327  001030  0E09               	movlw	9
  2328  001032  B4D8               	btfsc	status,2,c
  2329  001034  5D95               	subwf	sprintf@prec& (0+255),w,b
  2330  001036  A0D8               	btfss	status,0,c
  2331  001038  D009               	goto	l188
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2335  00103A  0100               	movlb	0	; () banked
  2336  00103C  6F6D               	movwf	??_sprintf& (0+255),b
  2337  00103E  0E08               	movlw	8
  2338  001040  0100               	movlb	0	; () banked
  2339  001042  0100               	movlb	0	; () banked
  2340  001044  6F97               	movwf	sprintf@c& (0+255),b
  2341  001046  0100               	movlb	0	; () banked
  2342  001048  516D               	movf	??_sprintf& (0+255),w,b
  2343  00104A  D002               	goto	l5655
  2344  00104C                     l188:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;doprnt.c: 1222: else
  2348                           ;doprnt.c: 1223: c = prec;
  2349  00104C  C095  F097         	movff	sprintf@prec,sprintf@c
  2350  001050                     l5655:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;doprnt.c: 1224: prec -= c;
  2354  001050  0100               	movlb	0	; () banked
  2355  001052  0100               	movlb	0	; () banked
  2356  001054  5197               	movf	sprintf@c& (0+255),w,b
  2357  001056  0100               	movlb	0	; () banked
  2358  001058  0100               	movlb	0	; () banked
  2359  00105A  5F95               	subwf	sprintf@prec& (0+255),f,b
  2360  00105C  0E00               	movlw	0
  2361  00105E  0100               	movlb	0	; () banked
  2362  001060  BF97               	btfsc	sprintf@c& (0+255),7,b
  2363  001062  0EFF               	movlw	255
  2364  001064  0100               	movlb	0	; () banked
  2365  001066  0100               	movlb	0	; () banked
  2366  001068  5B96               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;doprnt.c: 1228: if(c)
  2370  00106A  0100               	movlb	0	; () banked
  2371  00106C  0100               	movlb	0	; () banked
  2372  00106E  5197               	movf	sprintf@c& (0+255),w,b
  2373  001070  B4D8               	btfsc	status,2,c
  2374  001072  D00A               	goto	l5663
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  2378  001074  C066  FFD9         	movff	sprintf@sp,fsr2l
  2379  001078  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2380  00107C  0E2E               	movlw	46
  2381  00107E  6EDF               	movwf	indf2,c
  2382                           
  2383                           ; BSR set to: 0
  2384  001080  0100               	movlb	0	; () banked
  2385  001082  0100               	movlb	0	; () banked
  2386  001084  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2387  001086  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2388  001088                     l5663:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  2392  001088  0100               	movlb	0	; () banked
  2393  00108A  0100               	movlb	0	; () banked
  2394  00108C  5197               	movf	sprintf@c& (0+255),w,b
  2395  00108E  EC0B  F00A         	call	_scale
  2396  001092  C03A  F073         	movff	?_scale,_sprintf$2197
  2397  001096  C03B  F074         	movff	?_scale+1,_sprintf$2197+1
  2398  00109A  C03C  F075         	movff	?_scale+2,_sprintf$2197+2
  2399                           
  2400                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  2401  00109E  C092  F02E         	movff	sprintf@fval,___ftmul@f2
  2402  0010A2  C093  F02F         	movff	sprintf@fval+1,___ftmul@f2+1
  2403  0010A6  C094  F030         	movff	sprintf@fval+2,___ftmul@f2+2
  2404  0010AA  C073  F02B         	movff	_sprintf$2197,___ftmul@f1
  2405  0010AE  C074  F02C         	movff	_sprintf$2197+1,___ftmul@f1+1
  2406  0010B2  C075  F02D         	movff	_sprintf$2197+2,___ftmul@f1+2
  2407  0010B6  EC96  F010         	call	___ftmul	;wreg free
  2408  0010BA  C02B  F041         	movff	?___ftmul,___fttol@f1
  2409  0010BE  C02C  F042         	movff	?___ftmul+1,___fttol@f1+1
  2410  0010C2  C02D  F043         	movff	?___ftmul+2,___fttol@f1+2
  2411  0010C6  EC7E  F00F         	call	___fttol	;wreg free
  2412  0010CA  C041  F087         	movff	?___fttol,sprintf@_val
  2413  0010CE  C042  F088         	movff	?___fttol+1,sprintf@_val+1
  2414  0010D2  C043  F089         	movff	?___fttol+2,sprintf@_val+2
  2415  0010D6  C044  F08A         	movff	?___fttol+3,sprintf@_val+3
  2416                           
  2417                           ;doprnt.c: 1237: while(c--) {
  2418  0010DA  D077               	goto	l5677
  2419  0010DC                     l5667:
  2420                           
  2421                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  2422  0010DC  C087  F015         	movff	sprintf@_val,___lldiv@dividend
  2423  0010E0  C088  F016         	movff	sprintf@_val+1,___lldiv@dividend+1
  2424  0010E4  C089  F017         	movff	sprintf@_val+2,___lldiv@dividend+2
  2425  0010E8  C08A  F018         	movff	sprintf@_val+3,___lldiv@dividend+3
  2426  0010EC  0100               	movlb	0	; () banked
  2427  0010EE  0100               	movlb	0	; () banked
  2428  0010F0  5197               	movf	sprintf@c& (0+255),w,b
  2429  0010F2  0D04               	mullw	4
  2430  0010F4  0E01               	movlw	low _dpowers
  2431  0010F6  24F3               	addwf	prodl,w,c
  2432  0010F8  6EF6               	movwf	tblptrl,c
  2433  0010FA  0E08               	movlw	high _dpowers
  2434  0010FC  20F4               	addwfc	prodh,w,c
  2435  0010FE  6EF7               	movwf	tblptrh,c
  2436  001100  0009               	tblrd		*+
  2437  001102  CFF5 F019          	movff	tablat,___lldiv@divisor
  2438  001106  0009               	tblrd		*+
  2439  001108  CFF5 F01A          	movff	tablat,___lldiv@divisor+1
  2440  00110C  0009               	tblrd		*+
  2441  00110E  CFF5 F01B          	movff	tablat,___lldiv@divisor+2
  2442  001112  000A               	tblrd		*-
  2443  001114  CFF5 F01C          	movff	tablat,___lldiv@divisor+3
  2444  001118  EC5C  F013         	call	___lldiv	;wreg free
  2445  00111C  C015  F080         	movff	?___lldiv,sprintf@vd_608
  2446  001120  C016  F081         	movff	?___lldiv+1,sprintf@vd_608+1
  2447  001124  C017  F082         	movff	?___lldiv+2,sprintf@vd_608+2
  2448  001128  C018  F083         	movff	?___lldiv+3,sprintf@vd_608+3
  2449                           
  2450                           ;doprnt.c: 1239: vd %= 10;
  2451  00112C  C080  F015         	movff	sprintf@vd_608,___llmod@dividend
  2452  001130  C081  F016         	movff	sprintf@vd_608+1,___llmod@dividend+1
  2453  001134  C082  F017         	movff	sprintf@vd_608+2,___llmod@dividend+2
  2454  001138  C083  F018         	movff	sprintf@vd_608+3,___llmod@dividend+3
  2455  00113C  0E0A               	movlw	10
  2456  00113E  6E19               	movwf	___llmod@divisor,c
  2457  001140  0E00               	movlw	0
  2458  001142  6E1A               	movwf	___llmod@divisor+1,c
  2459  001144  0E00               	movlw	0
  2460  001146  6E1B               	movwf	___llmod@divisor+2,c
  2461  001148  0E00               	movlw	0
  2462  00114A  6E1C               	movwf	___llmod@divisor+3,c
  2463  00114C  EC9F  F013         	call	___llmod	;wreg free
  2464  001150  C015  F080         	movff	?___llmod,sprintf@vd_608
  2465  001154  C016  F081         	movff	?___llmod+1,sprintf@vd_608+1
  2466  001158  C017  F082         	movff	?___llmod+2,sprintf@vd_608+2
  2467  00115C  C018  F083         	movff	?___llmod+3,sprintf@vd_608+3
  2468                           
  2469                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  2470  001160  0100               	movlb	0	; () banked
  2471  001162  0100               	movlb	0	; () banked
  2472  001164  5180               	movf	sprintf@vd_608& (0+255),w,b
  2473  001166  0F30               	addlw	48
  2474  001168  C066  FFD9         	movff	sprintf@sp,fsr2l
  2475  00116C  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2476  001170  6EDF               	movwf	indf2,c
  2477                           
  2478                           ; BSR set to: 0
  2479  001172  0100               	movlb	0	; () banked
  2480  001174  0100               	movlb	0	; () banked
  2481  001176  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2482  001178  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  2486  00117A  C087  F015         	movff	sprintf@_val,___llmod@dividend
  2487  00117E  C088  F016         	movff	sprintf@_val+1,___llmod@dividend+1
  2488  001182  C089  F017         	movff	sprintf@_val+2,___llmod@dividend+2
  2489  001186  C08A  F018         	movff	sprintf@_val+3,___llmod@dividend+3
  2490  00118A  0100               	movlb	0	; () banked
  2491  00118C  0100               	movlb	0	; () banked
  2492  00118E  5197               	movf	sprintf@c& (0+255),w,b
  2493  001190  0D04               	mullw	4
  2494  001192  0E01               	movlw	low _dpowers
  2495  001194  24F3               	addwf	prodl,w,c
  2496  001196  6EF6               	movwf	tblptrl,c
  2497  001198  0E08               	movlw	high _dpowers
  2498  00119A  20F4               	addwfc	prodh,w,c
  2499  00119C  6EF7               	movwf	tblptrh,c
  2500  00119E  0009               	tblrd		*+
  2501  0011A0  CFF5 F019          	movff	tablat,___llmod@divisor
  2502  0011A4  0009               	tblrd		*+
  2503  0011A6  CFF5 F01A          	movff	tablat,___llmod@divisor+1
  2504  0011AA  0009               	tblrd		*+
  2505  0011AC  CFF5 F01B          	movff	tablat,___llmod@divisor+2
  2506  0011B0  000A               	tblrd		*-
  2507  0011B2  CFF5 F01C          	movff	tablat,___llmod@divisor+3
  2508  0011B6  EC9F  F013         	call	___llmod	;wreg free
  2509  0011BA  C015  F087         	movff	?___llmod,sprintf@_val
  2510  0011BE  C016  F088         	movff	?___llmod+1,sprintf@_val+1
  2511  0011C2  C017  F089         	movff	?___llmod+2,sprintf@_val+2
  2512  0011C6  C018  F08A         	movff	?___llmod+3,sprintf@_val+3
  2513  0011CA                     l5677:
  2514  0011CA  0100               	movlb	0	; () banked
  2515  0011CC  0100               	movlb	0	; () banked
  2516  0011CE  0797               	decf	sprintf@c& (0+255),f,b
  2517  0011D0  0100               	movlb	0	; () banked
  2518  0011D2  2997               	incf	sprintf@c& (0+255),w,b
  2519  0011D4  B4D8               	btfsc	status,2,c
  2520  0011D6  D010               	goto	l5685
  2521  0011D8  D781               	goto	l5667
  2522  0011DA                     l5679:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  2526  0011DA  C066  FFD9         	movff	sprintf@sp,fsr2l
  2527  0011DE  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2528  0011E2  0E30               	movlw	48
  2529  0011E4  6EDF               	movwf	indf2,c
  2530                           
  2531                           ; BSR set to: 0
  2532  0011E6  0100               	movlb	0	; () banked
  2533  0011E8  0100               	movlb	0	; () banked
  2534  0011EA  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2535  0011EC  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;doprnt.c: 1246: prec--;
  2539  0011EE  0100               	movlb	0	; () banked
  2540  0011F0  0100               	movlb	0	; () banked
  2541  0011F2  0795               	decf	sprintf@prec& (0+255),f,b
  2542  0011F4  A0D8               	btfss	status,0,c
  2543  0011F6  0796               	decf	(sprintf@prec+1)& (0+255),f,b
  2544  0011F8                     l5685:
  2545                           
  2546                           ; BSR set to: 0
  2547  0011F8  0100               	movlb	0	; () banked
  2548  0011FA  0100               	movlb	0	; () banked
  2549  0011FC  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  2550  0011FE  1195               	iorwf	sprintf@prec& (0+255),w,b
  2551  001200  B4D8               	btfsc	status,2,c
  2552  001202  D0F0               	goto	l5735
  2553  001204  D7EA               	goto	l5679
  2554  001206                     l5687:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;doprnt.c: 1255: }
  2558                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  2559  001206  0100               	movlb	0	; () banked
  2560  001208  0100               	movlb	0	; () banked
  2561  00120A  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  2562  00120C  1195               	iorwf	sprintf@prec& (0+255),w,b
  2563  00120E  A4D8               	btfss	status,2,c
  2564  001210  D00C               	goto	l5693
  2565                           
  2566                           ; BSR set to: 0
  2567  001212  0100               	movlb	0	; () banked
  2568  001214  0100               	movlb	0	; () banked
  2569  001216  518A               	movf	(sprintf@_val+3)& (0+255),w,b
  2570  001218  1187               	iorwf	sprintf@_val& (0+255),w,b
  2571  00121A  1188               	iorwf	(sprintf@_val+1)& (0+255),w,b
  2572  00121C  1189               	iorwf	(sprintf@_val+2)& (0+255),w,b
  2573  00121E  A4D8               	btfss	status,2,c
  2574  001220  D004               	goto	l5693
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;doprnt.c: 1300: prec++;
  2578  001222  0100               	movlb	0	; () banked
  2579  001224  0100               	movlb	0	; () banked
  2580  001226  4B95               	infsnz	sprintf@prec& (0+255),f,b
  2581  001228  2B96               	incf	(sprintf@prec+1)& (0+255),f,b
  2582  00122A                     l5693:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;doprnt.c: 1348: if(c < prec)
  2586  00122A  0E80               	movlw	128
  2587  00122C  0100               	movlb	0	; () banked
  2588  00122E  0100               	movlb	0	; () banked
  2589  001230  BF97               	btfsc	sprintf@c& (0+255),7,b
  2590  001232  0E7F               	movlw	127
  2591  001234  6F6D               	movwf	??_sprintf& (0+255),b
  2592  001236  0100               	movlb	0	; () banked
  2593  001238  0100               	movlb	0	; () banked
  2594  00123A  5195               	movf	sprintf@prec& (0+255),w,b
  2595  00123C  0100               	movlb	0	; () banked
  2596  00123E  0100               	movlb	0	; () banked
  2597  001240  5D97               	subwf	sprintf@c& (0+255),w,b
  2598  001242  0100               	movlb	0	; () banked
  2599  001244  0100               	movlb	0	; () banked
  2600  001246  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  2601  001248  0A80               	xorlw	128
  2602  00124A  0100               	movlb	0	; () banked
  2603  00124C  596D               	subwfb	??_sprintf& (0+255),w,b
  2604  00124E  B0D8               	btfsc	status,0,c
  2605  001250  D003               	goto	l5697
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;doprnt.c: 1349: c = prec;
  2609  001252  C095  F097         	movff	sprintf@prec,sprintf@c
  2610  001256  D020               	goto	l5701
  2611  001258                     l5697:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;doprnt.c: 1350: else if(prec < c)
  2615  001258  0100               	movlb	0	; () banked
  2616  00125A  0100               	movlb	0	; () banked
  2617  00125C  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  2618  00125E  0A80               	xorlw	128
  2619  001260  0100               	movlb	0	; () banked
  2620  001262  6F6D               	movwf	??_sprintf& (0+255),b
  2621  001264  0100               	movlb	0	; () banked
  2622  001266  0100               	movlb	0	; () banked
  2623  001268  5197               	movf	sprintf@c& (0+255),w,b
  2624  00126A  0100               	movlb	0	; () banked
  2625  00126C  0100               	movlb	0	; () banked
  2626  00126E  5D95               	subwf	sprintf@prec& (0+255),w,b
  2627  001270  0E80               	movlw	128
  2628  001272  0100               	movlb	0	; () banked
  2629  001274  0100               	movlb	0	; () banked
  2630  001276  BF97               	btfsc	sprintf@c& (0+255),7,b
  2631  001278  0E7F               	movlw	127
  2632  00127A  0100               	movlb	0	; () banked
  2633  00127C  596D               	subwfb	??_sprintf& (0+255),w,b
  2634  00127E  B0D8               	btfsc	status,0,c
  2635  001280  D00B               	goto	l5701
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;doprnt.c: 1351: prec = c;
  2639  001282  0100               	movlb	0	; () banked
  2640  001284  0100               	movlb	0	; () banked
  2641  001286  5197               	movf	sprintf@c& (0+255),w,b
  2642  001288  0100               	movlb	0	; () banked
  2643  00128A  0100               	movlb	0	; () banked
  2644  00128C  6F95               	movwf	sprintf@prec& (0+255),b
  2645  00128E  0100               	movlb	0	; () banked
  2646  001290  6B96               	clrf	(sprintf@prec+1)& (0+255),b
  2647  001292  0100               	movlb	0	; () banked
  2648  001294  BF95               	btfsc	sprintf@prec& (0+255),7,b
  2649  001296  0796               	decf	(sprintf@prec+1)& (0+255),f,b
  2650  001298                     l5701:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2654  001298  0100               	movlb	0	; () banked
  2655  00129A  0100               	movlb	0	; () banked
  2656  00129C  518F               	movf	(sprintf@width+1)& (0+255),w,b
  2657  00129E  118E               	iorwf	sprintf@width& (0+255),w,b
  2658  0012A0  B4D8               	btfsc	status,2,c
  2659  0012A2  D016               	goto	l5707
  2660                           
  2661                           ; BSR set to: 0
  2662  0012A4  0E03               	movlw	3
  2663  0012A6  0100               	movlb	0	; () banked
  2664  0012A8  0100               	movlb	0	; () banked
  2665  0012AA  158C               	andwf	sprintf@flag& (0+255),w,b
  2666  0012AC  0100               	movlb	0	; () banked
  2667  0012AE  6F6D               	movwf	??_sprintf& (0+255),b
  2668  0012B0  0E00               	movlw	0
  2669  0012B2  0100               	movlb	0	; () banked
  2670  0012B4  0100               	movlb	0	; () banked
  2671  0012B6  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  2672  0012B8  0100               	movlb	0	; () banked
  2673  0012BA  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  2674  0012BC  0100               	movlb	0	; () banked
  2675  0012BE  516E               	movf	(??_sprintf+1)& (0+255),w,b
  2676  0012C0  116D               	iorwf	??_sprintf& (0+255),w,b
  2677  0012C2  B4D8               	btfsc	status,2,c
  2678  0012C4  D005               	goto	l5707
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;doprnt.c: 1355: width--;
  2682  0012C6  0100               	movlb	0	; () banked
  2683  0012C8  0100               	movlb	0	; () banked
  2684  0012CA  078E               	decf	sprintf@width& (0+255),f,b
  2685  0012CC  A0D8               	btfss	status,0,c
  2686  0012CE  078F               	decf	(sprintf@width+1)& (0+255),f,b
  2687  0012D0                     l5707:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;doprnt.c: 1357: if(flag & 0x4000) {
  2691  0012D0  0100               	movlb	0	; () banked
  2692  0012D2  0100               	movlb	0	; () banked
  2693  0012D4  AD8D               	btfss	(sprintf@flag+1)& (0+255),6,b
  2694  0012D6  D028               	goto	l5715
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;doprnt.c: 1358: if(width > prec)
  2698  0012D8  0100               	movlb	0	; () banked
  2699  0012DA  0100               	movlb	0	; () banked
  2700  0012DC  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  2701  0012DE  0A80               	xorlw	128
  2702  0012E0  0100               	movlb	0	; () banked
  2703  0012E2  6F6D               	movwf	??_sprintf& (0+255),b
  2704  0012E4  0100               	movlb	0	; () banked
  2705  0012E6  0100               	movlb	0	; () banked
  2706  0012E8  518E               	movf	sprintf@width& (0+255),w,b
  2707  0012EA  0100               	movlb	0	; () banked
  2708  0012EC  0100               	movlb	0	; () banked
  2709  0012EE  5D95               	subwf	sprintf@prec& (0+255),w,b
  2710  0012F0  0100               	movlb	0	; () banked
  2711  0012F2  0100               	movlb	0	; () banked
  2712  0012F4  518F               	movf	(sprintf@width+1)& (0+255),w,b
  2713  0012F6  0A80               	xorlw	128
  2714  0012F8  0100               	movlb	0	; () banked
  2715  0012FA  596D               	subwfb	??_sprintf& (0+255),w,b
  2716  0012FC  B0D8               	btfsc	status,0,c
  2717  0012FE  D00D               	goto	l5713
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;doprnt.c: 1359: width -= prec;
  2721  001300  0100               	movlb	0	; () banked
  2722  001302  0100               	movlb	0	; () banked
  2723  001304  5195               	movf	sprintf@prec& (0+255),w,b
  2724  001306  0100               	movlb	0	; () banked
  2725  001308  0100               	movlb	0	; () banked
  2726  00130A  5F8E               	subwf	sprintf@width& (0+255),f,b
  2727  00130C  0100               	movlb	0	; () banked
  2728  00130E  0100               	movlb	0	; () banked
  2729  001310  5196               	movf	(sprintf@prec+1)& (0+255),w,b
  2730  001312  0100               	movlb	0	; () banked
  2731  001314  0100               	movlb	0	; () banked
  2732  001316  5B8F               	subwfb	(sprintf@width+1)& (0+255),f,b
  2733  001318  D007               	goto	l5715
  2734  00131A                     l5713:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;doprnt.c: 1360: else
  2738                           ;doprnt.c: 1361: width = 0;
  2739  00131A  0E00               	movlw	0
  2740  00131C  0100               	movlb	0	; () banked
  2741  00131E  0100               	movlb	0	; () banked
  2742  001320  6F8F               	movwf	(sprintf@width+1)& (0+255),b
  2743  001322  0E00               	movlw	0
  2744  001324  0100               	movlb	0	; () banked
  2745  001326  6F8E               	movwf	sprintf@width& (0+255),b
  2746  001328                     l5715:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;doprnt.c: 1362: }
  2750                           ;doprnt.c: 1390: if(width > c)
  2751  001328  0E80               	movlw	128
  2752  00132A  0100               	movlb	0	; () banked
  2753  00132C  0100               	movlb	0	; () banked
  2754  00132E  BF97               	btfsc	sprintf@c& (0+255),7,b
  2755  001330  0E7F               	movlw	127
  2756  001332  6F6D               	movwf	??_sprintf& (0+255),b
  2757  001334  0100               	movlb	0	; () banked
  2758  001336  0100               	movlb	0	; () banked
  2759  001338  518E               	movf	sprintf@width& (0+255),w,b
  2760  00133A  0100               	movlb	0	; () banked
  2761  00133C  0100               	movlb	0	; () banked
  2762  00133E  5D97               	subwf	sprintf@c& (0+255),w,b
  2763  001340  0100               	movlb	0	; () banked
  2764  001342  0100               	movlb	0	; () banked
  2765  001344  518F               	movf	(sprintf@width+1)& (0+255),w,b
  2766  001346  0A80               	xorlw	128
  2767  001348  0100               	movlb	0	; () banked
  2768  00134A  596D               	subwfb	??_sprintf& (0+255),w,b
  2769  00134C  B0D8               	btfsc	status,0,c
  2770  00134E  D00E               	goto	l5719
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;doprnt.c: 1391: width -= c;
  2774  001350  0100               	movlb	0	; () banked
  2775  001352  0100               	movlb	0	; () banked
  2776  001354  5197               	movf	sprintf@c& (0+255),w,b
  2777  001356  0100               	movlb	0	; () banked
  2778  001358  0100               	movlb	0	; () banked
  2779  00135A  5F8E               	subwf	sprintf@width& (0+255),f,b
  2780  00135C  0E00               	movlw	0
  2781  00135E  0100               	movlb	0	; () banked
  2782  001360  BF97               	btfsc	sprintf@c& (0+255),7,b
  2783  001362  0EFF               	movlw	255
  2784  001364  0100               	movlb	0	; () banked
  2785  001366  0100               	movlb	0	; () banked
  2786  001368  5B8F               	subwfb	(sprintf@width+1)& (0+255),f,b
  2787  00136A  D007               	goto	l5721
  2788  00136C                     l5719:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;doprnt.c: 1392: else
  2792                           ;doprnt.c: 1393: width = 0;
  2793  00136C  0E00               	movlw	0
  2794  00136E  0100               	movlb	0	; () banked
  2795  001370  0100               	movlb	0	; () banked
  2796  001372  6F8F               	movwf	(sprintf@width+1)& (0+255),b
  2797  001374  0E00               	movlw	0
  2798  001376  0100               	movlb	0	; () banked
  2799  001378  6F8E               	movwf	sprintf@width& (0+255),b
  2800  00137A                     l5721:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;doprnt.c: 1431: {
  2804                           ;doprnt.c: 1433: if(width
  2805                           ;doprnt.c: 1437: )
  2806  00137A  0100               	movlb	0	; () banked
  2807  00137C  0100               	movlb	0	; () banked
  2808  00137E  518F               	movf	(sprintf@width+1)& (0+255),w,b
  2809  001380  118E               	iorwf	sprintf@width& (0+255),w,b
  2810  001382  B4D8               	btfsc	status,2,c
  2811  001384  D014               	goto	l5729
  2812  001386                     l5723:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2816  001386  C066  FFD9         	movff	sprintf@sp,fsr2l
  2817  00138A  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2818  00138E  0E20               	movlw	32
  2819  001390  6EDF               	movwf	indf2,c
  2820                           
  2821                           ; BSR set to: 0
  2822  001392  0100               	movlb	0	; () banked
  2823  001394  0100               	movlb	0	; () banked
  2824  001396  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2825  001398  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;doprnt.c: 1440: while(--width);
  2829  00139A  0100               	movlb	0	; () banked
  2830  00139C  0100               	movlb	0	; () banked
  2831  00139E  078E               	decf	sprintf@width& (0+255),f,b
  2832  0013A0  A0D8               	btfss	status,0,c
  2833  0013A2  078F               	decf	(sprintf@width+1)& (0+255),f,b
  2834  0013A4  0100               	movlb	0	; () banked
  2835  0013A6  518F               	movf	(sprintf@width+1)& (0+255),w,b
  2836  0013A8  118E               	iorwf	sprintf@width& (0+255),w,b
  2837  0013AA  A4D8               	btfss	status,2,c
  2838  0013AC  D7EC               	goto	l5723
  2839  0013AE                     l5729:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;doprnt.c: 1447: if(flag & 0x03)
  2843  0013AE  0E03               	movlw	3
  2844  0013B0  0100               	movlb	0	; () banked
  2845  0013B2  0100               	movlb	0	; () banked
  2846  0013B4  158C               	andwf	sprintf@flag& (0+255),w,b
  2847  0013B6  0100               	movlb	0	; () banked
  2848  0013B8  6F6D               	movwf	??_sprintf& (0+255),b
  2849  0013BA  0E00               	movlw	0
  2850  0013BC  0100               	movlb	0	; () banked
  2851  0013BE  0100               	movlb	0	; () banked
  2852  0013C0  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  2853  0013C2  0100               	movlb	0	; () banked
  2854  0013C4  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  2855  0013C6  0100               	movlb	0	; () banked
  2856  0013C8  516E               	movf	(??_sprintf+1)& (0+255),w,b
  2857  0013CA  116D               	iorwf	??_sprintf& (0+255),w,b
  2858  0013CC  B4D8               	btfsc	status,2,c
  2859  0013CE  D00A               	goto	l5735
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2863  0013D0  C066  FFD9         	movff	sprintf@sp,fsr2l
  2864  0013D4  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2865  0013D8  0E2D               	movlw	45
  2866  0013DA  6EDF               	movwf	indf2,c
  2867  0013DC                     L1:
  2868                           
  2869                           ; BSR set to: 0
  2870  0013DC  0100               	movlb	0	; () banked
  2871  0013DE  0100               	movlb	0	; () banked
  2872  0013E0  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2873  0013E2  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2874  0013E4                     l5735:
  2875                           
  2876                           ; BSR set to: 0
  2877  0013E4  0100               	movlb	0	; () banked
  2878  0013E6  C068  FFF6         	movff	sprintf@f,tblptrl
  2879  0013EA  0100               	movlb	0	; () banked
  2880  0013EC  C069  FFF7         	movff	sprintf@f+1,tblptrh
  2881  0013F0  0100               	movlb	0	; () banked
  2882  0013F2  0100               	movlb	0	; () banked
  2883  0013F4  4B68               	infsnz	sprintf@f& (0+255),f,b
  2884  0013F6  2B69               	incf	(sprintf@f+1)& (0+255),f,b
  2885  0013F8  0008               	tblrd		*
  2886  0013FA  0100               	movlb	0	; () banked
  2887  0013FC  CFF5 F097          	movff	tablat,sprintf@c
  2888  001400  0100               	movlb	0	; () banked
  2889  001402  6797               	tstfsz	sprintf@c& (0+255),b
  2890  001404  EF54  F004         	goto	l5477
  2891  001408                     l5737:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;doprnt.c: 1547: *sp = 0;
  2895  001408  C066  FFD9         	movff	sprintf@sp,fsr2l
  2896  00140C  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2897  001410  0E00               	movlw	0
  2898  001412  6EDF               	movwf	indf2,c
  2899                           
  2900                           ; BSR set to: 0
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;doprnt.c: 1549: return 0;
  2904                           ;	Return value of _sprintf is never used
  2905  001414  0012               	return	
  2906  001416                     __end_of_sprintf:
  2907                           	opt stack 0
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           prodh	equ	0xFF4
  2913                           prodl	equ	0xFF3
  2914                           wreg	equ	0xFE8
  2915                           postinc1	equ	0xFE6
  2916                           indf2	equ	0xFDF
  2917                           postinc2	equ	0xFDE
  2918                           postdec2	equ	0xFDD
  2919                           fsr2h	equ	0xFDA
  2920                           fsr2l	equ	0xFD9
  2921                           status	equ	0xFD8
  2922                           
  2923 ;; *************** function _scale *****************
  2924 ;; Defined at:
  2925 ;;		line 425 in file "/opt/microchip/xc8/v1.30/sources/common/doprnt.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  scl             1    wreg     char 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  scl             1   63[COMRAM] char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  3   57[COMRAM] char 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2939 ;;      Params:         3       0       0       0       0       0       0       0       0
  2940 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2942 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2943 ;;Total ram usage:        7 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    5
  2946 ;; This function calls:
  2947 ;;		___awdiv
  2948 ;;		___awmod
  2949 ;;		___ftmul
  2950 ;;		___wmul
  2951 ;; This function is called by:
  2952 ;;		_sprintf
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text2
  2957  001416                     __ptext2:
  2958                           	opt stack 0
  2959  001416                     _scale:
  2960                           	opt stack 24
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;incstack = 0
  2964                           ;scale@scl stored from wreg
  2965  001416  CFE8 F040          	movff	wreg,scale@scl
  2966                           
  2967                           ;doprnt.c: 428: if(scl < 0) {
  2968  00141A  AE40               	btfss	scale@scl,7,c
  2969  00141C  D0EA               	goto	l4259
  2970                           
  2971                           ;doprnt.c: 429: scl = -scl;
  2972  00141E  6C40               	negf	scale@scl,c
  2973                           
  2974                           ;doprnt.c: 430: if(scl>=110)
  2975  001420  5040               	movf	scale@scl,w,c
  2976  001422  0A80               	xorlw	128
  2977  001424  0F12               	addlw	-238
  2978  001426  A0D8               	btfss	status,0,c
  2979  001428  D08B               	goto	l4249
  2980                           
  2981                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2982  00142A  0E00               	movlw	0
  2983  00142C  6E28               	movwf	___wmul@multiplicand+1,c
  2984  00142E  0E03               	movlw	3
  2985  001430  6E27               	movwf	___wmul@multiplicand,c
  2986  001432  0E00               	movlw	0
  2987  001434  6E1F               	movwf	___awdiv@divisor+1,c
  2988  001436  0E0A               	movlw	10
  2989  001438  6E1E               	movwf	___awdiv@divisor,c
  2990  00143A  0E00               	movlw	0
  2991  00143C  6E18               	movwf	___awmod@divisor+1,c
  2992  00143E  0E64               	movlw	100
  2993  001440  6E17               	movwf	___awmod@divisor,c
  2994  001442  5040               	movf	scale@scl,w,c
  2995  001444  6E15               	movwf	___awmod@dividend,c
  2996  001446  6A16               	clrf	___awmod@dividend+1,c
  2997  001448  BE15               	btfsc	___awmod@dividend,7,c
  2998  00144A  0616               	decf	___awmod@dividend+1,f,c
  2999  00144C  EC78  F012         	call	___awmod	;wreg free
  3000  001450  C015  F01C         	movff	?___awmod,___awdiv@dividend
  3001  001454  C016  F01D         	movff	?___awmod+1,___awdiv@dividend+1
  3002  001458  EC79  F011         	call	___awdiv	;wreg free
  3003  00145C  0E09               	movlw	9
  3004  00145E  241C               	addwf	?___awdiv,w,c
  3005  001460  6E25               	movwf	___wmul@multiplier,c
  3006  001462  0E00               	movlw	0
  3007  001464  201D               	addwfc	?___awdiv+1,w,c
  3008  001466  6E26               	movwf	___wmul@multiplier+1,c
  3009  001468  ECBC  F015         	call	___wmul	;wreg free
  3010  00146C  0E29               	movlw	low __npowers_
  3011  00146E  2425               	addwf	?___wmul,w,c
  3012  001470  6EF6               	movwf	tblptrl,c
  3013  001472  0E08               	movlw	high __npowers_
  3014  001474  2026               	addwfc	?___wmul+1,w,c
  3015  001476  6EF7               	movwf	tblptrh,c
  3016  001478  0009               	tblrd		*+
  3017  00147A  CFF5 F02E          	movff	tablat,___ftmul@f2
  3018  00147E  0009               	tblrd		*+
  3019  001480  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3020  001484  000A               	tblrd		*-
  3021  001486  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3022  00148A  0E00               	movlw	0
  3023  00148C  6E28               	movwf	___wmul@multiplicand+1,c
  3024  00148E  0E03               	movlw	3
  3025  001490  6E27               	movwf	___wmul@multiplicand,c
  3026  001492  0E00               	movlw	0
  3027  001494  6E1F               	movwf	___awdiv@divisor+1,c
  3028  001496  0E64               	movlw	100
  3029  001498  6E1E               	movwf	___awdiv@divisor,c
  3030  00149A  5040               	movf	scale@scl,w,c
  3031  00149C  6E1C               	movwf	___awdiv@dividend,c
  3032  00149E  6A1D               	clrf	___awdiv@dividend+1,c
  3033  0014A0  BE1C               	btfsc	___awdiv@dividend,7,c
  3034  0014A2  061D               	decf	___awdiv@dividend+1,f,c
  3035  0014A4  EC79  F011         	call	___awdiv	;wreg free
  3036  0014A8  0E12               	movlw	18
  3037  0014AA  241C               	addwf	?___awdiv,w,c
  3038  0014AC  6E25               	movwf	___wmul@multiplier,c
  3039  0014AE  0E00               	movlw	0
  3040  0014B0  201D               	addwfc	?___awdiv+1,w,c
  3041  0014B2  6E26               	movwf	___wmul@multiplier+1,c
  3042  0014B4  ECBC  F015         	call	___wmul	;wreg free
  3043  0014B8  0E29               	movlw	low __npowers_
  3044  0014BA  2425               	addwf	?___wmul,w,c
  3045  0014BC  6EF6               	movwf	tblptrl,c
  3046  0014BE  0E08               	movlw	high __npowers_
  3047  0014C0  2026               	addwfc	?___wmul+1,w,c
  3048  0014C2  6EF7               	movwf	tblptrh,c
  3049  0014C4  0009               	tblrd		*+
  3050  0014C6  CFF5 F02B          	movff	tablat,___ftmul@f1
  3051  0014CA  0009               	tblrd		*+
  3052  0014CC  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3053  0014D0  000A               	tblrd		*-
  3054  0014D2  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3055  0014D6  EC96  F010         	call	___ftmul	;wreg free
  3056  0014DA  C02B  F03D         	movff	?___ftmul,_scale$2196
  3057  0014DE  C02C  F03E         	movff	?___ftmul+1,_scale$2196+1
  3058  0014E2  C02D  F03F         	movff	?___ftmul+2,_scale$2196+2
  3059                           
  3060                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3061  0014E6  C03D  F02B         	movff	_scale$2196,___ftmul@f1
  3062  0014EA  C03E  F02C         	movff	_scale$2196+1,___ftmul@f1+1
  3063  0014EE  C03F  F02D         	movff	_scale$2196+2,___ftmul@f1+2
  3064  0014F2  0E00               	movlw	0
  3065  0014F4  6E28               	movwf	___wmul@multiplicand+1,c
  3066  0014F6  0E03               	movlw	3
  3067  0014F8  6E27               	movwf	___wmul@multiplicand,c
  3068  0014FA  0E00               	movlw	0
  3069  0014FC  6E18               	movwf	___awmod@divisor+1,c
  3070  0014FE  0E0A               	movlw	10
  3071  001500  6E17               	movwf	___awmod@divisor,c
  3072  001502  5040               	movf	scale@scl,w,c
  3073  001504  6E15               	movwf	___awmod@dividend,c
  3074  001506  6A16               	clrf	___awmod@dividend+1,c
  3075  001508  BE15               	btfsc	___awmod@dividend,7,c
  3076  00150A  0616               	decf	___awmod@dividend+1,f,c
  3077  00150C  EC78  F012         	call	___awmod	;wreg free
  3078  001510  C015  F025         	movff	?___awmod,___wmul@multiplier
  3079  001514  C016  F026         	movff	?___awmod+1,___wmul@multiplier+1
  3080  001518  ECBC  F015         	call	___wmul	;wreg free
  3081  00151C  0E29               	movlw	low __npowers_
  3082  00151E  2425               	addwf	?___wmul,w,c
  3083  001520  6EF6               	movwf	tblptrl,c
  3084  001522  0E08               	movlw	high __npowers_
  3085  001524  2026               	addwfc	?___wmul+1,w,c
  3086  001526  6EF7               	movwf	tblptrh,c
  3087  001528  0009               	tblrd		*+
  3088  00152A  CFF5 F02E          	movff	tablat,___ftmul@f2
  3089  00152E  0009               	tblrd		*+
  3090  001530  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3091  001534  000A               	tblrd		*-
  3092  001536  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3093  00153A  EC96  F010         	call	___ftmul	;wreg free
  3094  00153E  D13A               	goto	L9
  3095  001540                     l4249:
  3096                           
  3097                           ;doprnt.c: 432: else if(scl > 10)
  3098  001540  5040               	movf	scale@scl,w,c
  3099  001542  0A80               	xorlw	128
  3100  001544  0F75               	addlw	-139
  3101  001546  A0D8               	btfss	status,0,c
  3102  001548  D04D               	goto	l4255
  3103                           
  3104                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3105  00154A  0E00               	movlw	0
  3106  00154C  6E28               	movwf	___wmul@multiplicand+1,c
  3107  00154E  0E03               	movlw	3
  3108  001550  6E27               	movwf	___wmul@multiplicand,c
  3109  001552  0E00               	movlw	0
  3110  001554  6E1F               	movwf	___awdiv@divisor+1,c
  3111  001556  0E0A               	movlw	10
  3112  001558  6E1E               	movwf	___awdiv@divisor,c
  3113  00155A  5040               	movf	scale@scl,w,c
  3114  00155C  6E1C               	movwf	___awdiv@dividend,c
  3115  00155E  6A1D               	clrf	___awdiv@dividend+1,c
  3116  001560  BE1C               	btfsc	___awdiv@dividend,7,c
  3117  001562  061D               	decf	___awdiv@dividend+1,f,c
  3118  001564  EC79  F011         	call	___awdiv	;wreg free
  3119  001568  0E09               	movlw	9
  3120  00156A  241C               	addwf	?___awdiv,w,c
  3121  00156C  6E25               	movwf	___wmul@multiplier,c
  3122  00156E  0E00               	movlw	0
  3123  001570  201D               	addwfc	?___awdiv+1,w,c
  3124  001572  6E26               	movwf	___wmul@multiplier+1,c
  3125  001574  ECBC  F015         	call	___wmul	;wreg free
  3126  001578  0E29               	movlw	low __npowers_
  3127  00157A  2425               	addwf	?___wmul,w,c
  3128  00157C  6EF6               	movwf	tblptrl,c
  3129  00157E  0E08               	movlw	high __npowers_
  3130  001580  2026               	addwfc	?___wmul+1,w,c
  3131  001582  6EF7               	movwf	tblptrh,c
  3132  001584  0009               	tblrd		*+
  3133  001586  CFF5 F02B          	movff	tablat,___ftmul@f1
  3134  00158A  0009               	tblrd		*+
  3135  00158C  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3136  001590  000A               	tblrd		*-
  3137  001592  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3138  001596  0E00               	movlw	0
  3139  001598  6E28               	movwf	___wmul@multiplicand+1,c
  3140  00159A  0E03               	movlw	3
  3141  00159C  6E27               	movwf	___wmul@multiplicand,c
  3142  00159E  0E00               	movlw	0
  3143  0015A0  6E18               	movwf	___awmod@divisor+1,c
  3144  0015A2  0E0A               	movlw	10
  3145  0015A4  6E17               	movwf	___awmod@divisor,c
  3146  0015A6  5040               	movf	scale@scl,w,c
  3147  0015A8  6E15               	movwf	___awmod@dividend,c
  3148  0015AA  6A16               	clrf	___awmod@dividend+1,c
  3149  0015AC  BE15               	btfsc	___awmod@dividend,7,c
  3150  0015AE  0616               	decf	___awmod@dividend+1,f,c
  3151  0015B0  EC78  F012         	call	___awmod	;wreg free
  3152  0015B4  C015  F025         	movff	?___awmod,___wmul@multiplier
  3153  0015B8  C016  F026         	movff	?___awmod+1,___wmul@multiplier+1
  3154  0015BC  ECBC  F015         	call	___wmul	;wreg free
  3155  0015C0  0E29               	movlw	low __npowers_
  3156  0015C2  2425               	addwf	?___wmul,w,c
  3157  0015C4  6EF6               	movwf	tblptrl,c
  3158  0015C6  0E08               	movlw	high __npowers_
  3159  0015C8  2026               	addwfc	?___wmul+1,w,c
  3160  0015CA  6EF7               	movwf	tblptrh,c
  3161  0015CC  0009               	tblrd		*+
  3162  0015CE  CFF5 F02E          	movff	tablat,___ftmul@f2
  3163  0015D2  0009               	tblrd		*+
  3164  0015D4  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3165  0015D8  000A               	tblrd		*-
  3166  0015DA  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3167  0015DE  EC96  F010         	call	___ftmul	;wreg free
  3168  0015E2  D0E8               	goto	L9
  3169  0015E4                     l4255:
  3170                           
  3171                           ;doprnt.c: 434: return _npowers_[scl];
  3172  0015E4  5040               	movf	scale@scl,w,c
  3173  0015E6  0D03               	mullw	3
  3174  0015E8  0E29               	movlw	low __npowers_
  3175  0015EA  24F3               	addwf	prodl,w,c
  3176  0015EC  6EF6               	movwf	tblptrl,c
  3177  0015EE  0E08               	movlw	high __npowers_
  3178  0015F0  D0EE               	goto	L8
  3179  0015F2                     l4259:
  3180                           
  3181                           ;doprnt.c: 435: }
  3182                           ;doprnt.c: 436: if(scl>=110)
  3183  0015F2  5040               	movf	scale@scl,w,c
  3184  0015F4  0A80               	xorlw	128
  3185  0015F6  0F12               	addlw	-238
  3186  0015F8  A0D8               	btfss	status,0,c
  3187  0015FA  D08B               	goto	l4267
  3188                           
  3189                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3190  0015FC  0E00               	movlw	0
  3191  0015FE  6E28               	movwf	___wmul@multiplicand+1,c
  3192  001600  0E03               	movlw	3
  3193  001602  6E27               	movwf	___wmul@multiplicand,c
  3194  001604  0E00               	movlw	0
  3195  001606  6E1F               	movwf	___awdiv@divisor+1,c
  3196  001608  0E0A               	movlw	10
  3197  00160A  6E1E               	movwf	___awdiv@divisor,c
  3198  00160C  0E00               	movlw	0
  3199  00160E  6E18               	movwf	___awmod@divisor+1,c
  3200  001610  0E64               	movlw	100
  3201  001612  6E17               	movwf	___awmod@divisor,c
  3202  001614  5040               	movf	scale@scl,w,c
  3203  001616  6E15               	movwf	___awmod@dividend,c
  3204  001618  6A16               	clrf	___awmod@dividend+1,c
  3205  00161A  BE15               	btfsc	___awmod@dividend,7,c
  3206  00161C  0616               	decf	___awmod@dividend+1,f,c
  3207  00161E  EC78  F012         	call	___awmod	;wreg free
  3208  001622  C015  F01C         	movff	?___awmod,___awdiv@dividend
  3209  001626  C016  F01D         	movff	?___awmod+1,___awdiv@dividend+1
  3210  00162A  EC79  F011         	call	___awdiv	;wreg free
  3211  00162E  0E09               	movlw	9
  3212  001630  241C               	addwf	?___awdiv,w,c
  3213  001632  6E25               	movwf	___wmul@multiplier,c
  3214  001634  0E00               	movlw	0
  3215  001636  201D               	addwfc	?___awdiv+1,w,c
  3216  001638  6E26               	movwf	___wmul@multiplier+1,c
  3217  00163A  ECBC  F015         	call	___wmul	;wreg free
  3218  00163E  0E50               	movlw	low __powers_
  3219  001640  2425               	addwf	?___wmul,w,c
  3220  001642  6EF6               	movwf	tblptrl,c
  3221  001644  0E08               	movlw	high __powers_
  3222  001646  2026               	addwfc	?___wmul+1,w,c
  3223  001648  6EF7               	movwf	tblptrh,c
  3224  00164A  0009               	tblrd		*+
  3225  00164C  CFF5 F02E          	movff	tablat,___ftmul@f2
  3226  001650  0009               	tblrd		*+
  3227  001652  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3228  001656  000A               	tblrd		*-
  3229  001658  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3230  00165C  0E00               	movlw	0
  3231  00165E  6E28               	movwf	___wmul@multiplicand+1,c
  3232  001660  0E03               	movlw	3
  3233  001662  6E27               	movwf	___wmul@multiplicand,c
  3234  001664  0E00               	movlw	0
  3235  001666  6E1F               	movwf	___awdiv@divisor+1,c
  3236  001668  0E64               	movlw	100
  3237  00166A  6E1E               	movwf	___awdiv@divisor,c
  3238  00166C  5040               	movf	scale@scl,w,c
  3239  00166E  6E1C               	movwf	___awdiv@dividend,c
  3240  001670  6A1D               	clrf	___awdiv@dividend+1,c
  3241  001672  BE1C               	btfsc	___awdiv@dividend,7,c
  3242  001674  061D               	decf	___awdiv@dividend+1,f,c
  3243  001676  EC79  F011         	call	___awdiv	;wreg free
  3244  00167A  0E12               	movlw	18
  3245  00167C  241C               	addwf	?___awdiv,w,c
  3246  00167E  6E25               	movwf	___wmul@multiplier,c
  3247  001680  0E00               	movlw	0
  3248  001682  201D               	addwfc	?___awdiv+1,w,c
  3249  001684  6E26               	movwf	___wmul@multiplier+1,c
  3250  001686  ECBC  F015         	call	___wmul	;wreg free
  3251  00168A  0E50               	movlw	low __powers_
  3252  00168C  2425               	addwf	?___wmul,w,c
  3253  00168E  6EF6               	movwf	tblptrl,c
  3254  001690  0E08               	movlw	high __powers_
  3255  001692  2026               	addwfc	?___wmul+1,w,c
  3256  001694  6EF7               	movwf	tblptrh,c
  3257  001696  0009               	tblrd		*+
  3258  001698  CFF5 F02B          	movff	tablat,___ftmul@f1
  3259  00169C  0009               	tblrd		*+
  3260  00169E  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3261  0016A2  000A               	tblrd		*-
  3262  0016A4  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3263  0016A8  EC96  F010         	call	___ftmul	;wreg free
  3264  0016AC  C02B  F03D         	movff	?___ftmul,_scale$2196
  3265  0016B0  C02C  F03E         	movff	?___ftmul+1,_scale$2196+1
  3266  0016B4  C02D  F03F         	movff	?___ftmul+2,_scale$2196+2
  3267                           
  3268                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3269  0016B8  C03D  F02B         	movff	_scale$2196,___ftmul@f1
  3270  0016BC  C03E  F02C         	movff	_scale$2196+1,___ftmul@f1+1
  3271  0016C0  C03F  F02D         	movff	_scale$2196+2,___ftmul@f1+2
  3272  0016C4  0E00               	movlw	0
  3273  0016C6  6E28               	movwf	___wmul@multiplicand+1,c
  3274  0016C8  0E03               	movlw	3
  3275  0016CA  6E27               	movwf	___wmul@multiplicand,c
  3276  0016CC  0E00               	movlw	0
  3277  0016CE  6E18               	movwf	___awmod@divisor+1,c
  3278  0016D0  0E0A               	movlw	10
  3279  0016D2  6E17               	movwf	___awmod@divisor,c
  3280  0016D4  5040               	movf	scale@scl,w,c
  3281  0016D6  6E15               	movwf	___awmod@dividend,c
  3282  0016D8  6A16               	clrf	___awmod@dividend+1,c
  3283  0016DA  BE15               	btfsc	___awmod@dividend,7,c
  3284  0016DC  0616               	decf	___awmod@dividend+1,f,c
  3285  0016DE  EC78  F012         	call	___awmod	;wreg free
  3286  0016E2  C015  F025         	movff	?___awmod,___wmul@multiplier
  3287  0016E6  C016  F026         	movff	?___awmod+1,___wmul@multiplier+1
  3288  0016EA  ECBC  F015         	call	___wmul	;wreg free
  3289  0016EE  0E50               	movlw	low __powers_
  3290  0016F0  2425               	addwf	?___wmul,w,c
  3291  0016F2  6EF6               	movwf	tblptrl,c
  3292  0016F4  0E08               	movlw	high __powers_
  3293  0016F6  2026               	addwfc	?___wmul+1,w,c
  3294  0016F8  6EF7               	movwf	tblptrh,c
  3295  0016FA  0009               	tblrd		*+
  3296  0016FC  CFF5 F02E          	movff	tablat,___ftmul@f2
  3297  001700  0009               	tblrd		*+
  3298  001702  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3299  001706  000A               	tblrd		*-
  3300  001708  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3301  00170C  EC96  F010         	call	___ftmul	;wreg free
  3302  001710  D051               	goto	L9
  3303  001712                     l4267:
  3304                           
  3305                           ;doprnt.c: 438: else if(scl > 10)
  3306  001712  5040               	movf	scale@scl,w,c
  3307  001714  0A80               	xorlw	128
  3308  001716  0F75               	addlw	-139
  3309  001718  A0D8               	btfss	status,0,c
  3310  00171A  D053               	goto	l4273
  3311                           
  3312                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3313  00171C  0E00               	movlw	0
  3314  00171E  6E28               	movwf	___wmul@multiplicand+1,c
  3315  001720  0E03               	movlw	3
  3316  001722  6E27               	movwf	___wmul@multiplicand,c
  3317  001724  0E00               	movlw	0
  3318  001726  6E1F               	movwf	___awdiv@divisor+1,c
  3319  001728  0E0A               	movlw	10
  3320  00172A  6E1E               	movwf	___awdiv@divisor,c
  3321  00172C  5040               	movf	scale@scl,w,c
  3322  00172E  6E1C               	movwf	___awdiv@dividend,c
  3323  001730  6A1D               	clrf	___awdiv@dividend+1,c
  3324  001732  BE1C               	btfsc	___awdiv@dividend,7,c
  3325  001734  061D               	decf	___awdiv@dividend+1,f,c
  3326  001736  EC79  F011         	call	___awdiv	;wreg free
  3327  00173A  0E09               	movlw	9
  3328  00173C  241C               	addwf	?___awdiv,w,c
  3329  00173E  6E25               	movwf	___wmul@multiplier,c
  3330  001740  0E00               	movlw	0
  3331  001742  201D               	addwfc	?___awdiv+1,w,c
  3332  001744  6E26               	movwf	___wmul@multiplier+1,c
  3333  001746  ECBC  F015         	call	___wmul	;wreg free
  3334  00174A  0E50               	movlw	low __powers_
  3335  00174C  2425               	addwf	?___wmul,w,c
  3336  00174E  6EF6               	movwf	tblptrl,c
  3337  001750  0E08               	movlw	high __powers_
  3338  001752  2026               	addwfc	?___wmul+1,w,c
  3339  001754  6EF7               	movwf	tblptrh,c
  3340  001756  0009               	tblrd		*+
  3341  001758  CFF5 F02B          	movff	tablat,___ftmul@f1
  3342  00175C  0009               	tblrd		*+
  3343  00175E  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3344  001762  000A               	tblrd		*-
  3345  001764  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3346  001768  0E00               	movlw	0
  3347  00176A  6E28               	movwf	___wmul@multiplicand+1,c
  3348  00176C  0E03               	movlw	3
  3349  00176E  6E27               	movwf	___wmul@multiplicand,c
  3350  001770  0E00               	movlw	0
  3351  001772  6E18               	movwf	___awmod@divisor+1,c
  3352  001774  0E0A               	movlw	10
  3353  001776  6E17               	movwf	___awmod@divisor,c
  3354  001778  5040               	movf	scale@scl,w,c
  3355  00177A  6E15               	movwf	___awmod@dividend,c
  3356  00177C  6A16               	clrf	___awmod@dividend+1,c
  3357  00177E  BE15               	btfsc	___awmod@dividend,7,c
  3358  001780  0616               	decf	___awmod@dividend+1,f,c
  3359  001782  EC78  F012         	call	___awmod	;wreg free
  3360  001786  C015  F025         	movff	?___awmod,___wmul@multiplier
  3361  00178A  C016  F026         	movff	?___awmod+1,___wmul@multiplier+1
  3362  00178E  ECBC  F015         	call	___wmul	;wreg free
  3363  001792  0E50               	movlw	low __powers_
  3364  001794  2425               	addwf	?___wmul,w,c
  3365  001796  6EF6               	movwf	tblptrl,c
  3366  001798  0E08               	movlw	high __powers_
  3367  00179A  2026               	addwfc	?___wmul+1,w,c
  3368  00179C  6EF7               	movwf	tblptrh,c
  3369  00179E  0009               	tblrd		*+
  3370  0017A0  CFF5 F02E          	movff	tablat,___ftmul@f2
  3371  0017A4  0009               	tblrd		*+
  3372  0017A6  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3373  0017AA  000A               	tblrd		*-
  3374  0017AC  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3375  0017B0  EC96  F010         	call	___ftmul	;wreg free
  3376  0017B4                     L9:
  3377  0017B4  C02B  F03A         	movff	?___ftmul,?_scale
  3378  0017B8  C02C  F03B         	movff	?___ftmul+1,?_scale+1
  3379  0017BC  C02D  F03C         	movff	?___ftmul+2,?_scale+2
  3380  0017C0  D011               	goto	l129
  3381  0017C2                     l4273:
  3382                           
  3383                           ;doprnt.c: 440: return _powers_[scl];
  3384  0017C2  5040               	movf	scale@scl,w,c
  3385  0017C4  0D03               	mullw	3
  3386  0017C6  0E50               	movlw	low __powers_
  3387  0017C8  24F3               	addwf	prodl,w,c
  3388  0017CA  6EF6               	movwf	tblptrl,c
  3389  0017CC  0E08               	movlw	high __powers_
  3390  0017CE                     L8:
  3391  0017CE  20F4               	addwfc	prodh,w,c
  3392  0017D0  6EF7               	movwf	tblptrh,c
  3393  0017D2  0009               	tblrd		*+
  3394  0017D4  CFF5 F03A          	movff	tablat,?_scale
  3395  0017D8  0009               	tblrd		*+
  3396  0017DA  CFF5 F03B          	movff	tablat,?_scale+1
  3397  0017DE  000A               	tblrd		*-
  3398  0017E0  CFF5 F03C          	movff	tablat,?_scale+2
  3399  0017E4                     l129:
  3400  0017E4  0012               	return	
  3401  0017E6                     __end_of_scale:
  3402                           	opt stack 0
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           wreg	equ	0xFE8
  3410                           postinc1	equ	0xFE6
  3411                           indf2	equ	0xFDF
  3412                           postinc2	equ	0xFDE
  3413                           postdec2	equ	0xFDD
  3414                           fsr2h	equ	0xFDA
  3415                           fsr2l	equ	0xFD9
  3416                           status	equ	0xFD8
  3417                           
  3418 ;; *************** function _isdigit *****************
  3419 ;; Defined at:
  3420 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/isdigit.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;  c               1    wreg     unsigned char 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  c               1   22[COMRAM] unsigned char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;		None               void
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3434 ;;      Params:         0       0       0       0       0       0       0       0       0
  3435 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3436 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3437 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3438 ;;Total ram usage:        3 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    3
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_sprintf
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text3
  3449  002CA6                     __ptext3:
  3450                           	opt stack 0
  3451  002CA6                     _isdigit:
  3452                           	opt stack 26
  3453                           
  3454                           ;incstack = 0
  3455                           ;isdigit@c stored from wreg
  3456  002CA6  CFE8 F017          	movff	wreg,isdigit@c
  3457  002CAA  6E15               	movwf	??_isdigit& (0+255),c
  3458  002CAC  0E00               	movlw	0
  3459  002CAE  6E16               	movwf	_isdigit$1861,c
  3460  002CB0  5015               	movf	??_isdigit& (0+255),w,c
  3461  002CB2  0E3A               	movlw	58
  3462  002CB4  5C17               	subwf	isdigit@c,w,c
  3463  002CB6  B0D8               	btfsc	status,0,c
  3464  002CB8  D007               	goto	l4285
  3465  002CBA  0E2F               	movlw	47
  3466  002CBC  6417               	cpfsgt	isdigit@c,c
  3467  002CBE  D004               	goto	l4285
  3468  002CC0  6E15               	movwf	??_isdigit& (0+255),c
  3469  002CC2  0E01               	movlw	1
  3470  002CC4  6E16               	movwf	_isdigit$1861,c
  3471  002CC6  5015               	movf	??_isdigit& (0+255),w,c
  3472  002CC8                     l4285:
  3473  002CC8  C016  F015         	movff	_isdigit$1861,??_isdigit
  3474  002CCC  3015               	rrcf	??_isdigit,w,c
  3475  002CCE  0012               	return	
  3476  002CD0                     __end_of_isdigit:
  3477                           	opt stack 0
  3478                           tblptru	equ	0xFF8
  3479                           tblptrh	equ	0xFF7
  3480                           tblptrl	equ	0xFF6
  3481                           tablat	equ	0xFF5
  3482                           prodh	equ	0xFF4
  3483                           prodl	equ	0xFF3
  3484                           wreg	equ	0xFE8
  3485                           postinc1	equ	0xFE6
  3486                           indf2	equ	0xFDF
  3487                           postinc2	equ	0xFDE
  3488                           postdec2	equ	0xFDD
  3489                           fsr2h	equ	0xFDA
  3490                           fsr2l	equ	0xFD9
  3491                           status	equ	0xFD8
  3492                           
  3493 ;; *************** function _fround *****************
  3494 ;; Defined at:
  3495 ;;		line 409 in file "/opt/microchip/xc8/v1.30/sources/common/doprnt.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  prec            1    wreg     unsigned char 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  prec            1   66[COMRAM] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  3   57[COMRAM] unsigned char 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3509 ;;      Params:         3       0       0       0       0       0       0       0       0
  3510 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3512 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3513 ;;Total ram usage:       10 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    5
  3516 ;; This function calls:
  3517 ;;		___awdiv
  3518 ;;		___awmod
  3519 ;;		___ftmul
  3520 ;;		___wmul
  3521 ;; This function is called by:
  3522 ;;		_sprintf
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text4
  3527  0017E6                     __ptext4:
  3528                           	opt stack 0
  3529  0017E6                     _fround:
  3530                           	opt stack 24
  3531                           
  3532                           ;incstack = 0
  3533                           ;fround@prec stored from wreg
  3534  0017E6  CFE8 F043          	movff	wreg,fround@prec
  3535                           
  3536                           ;doprnt.c: 413: if(prec>=110)
  3537  0017EA  0E6D               	movlw	109
  3538  0017EC  6443               	cpfsgt	fround@prec,c
  3539  0017EE  D099               	goto	l4227
  3540                           
  3541                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3542  0017F0  0E00               	movlw	0
  3543  0017F2  6E28               	movwf	___wmul@multiplicand+1,c
  3544  0017F4  0E03               	movlw	3
  3545  0017F6  6E27               	movwf	___wmul@multiplicand,c
  3546  0017F8  0E00               	movlw	0
  3547  0017FA  6E1F               	movwf	___awdiv@divisor+1,c
  3548  0017FC  0E0A               	movlw	10
  3549  0017FE  6E1E               	movwf	___awdiv@divisor,c
  3550  001800  0E00               	movlw	0
  3551  001802  6E18               	movwf	___awmod@divisor+1,c
  3552  001804  0E64               	movlw	100
  3553  001806  6E17               	movwf	___awmod@divisor,c
  3554  001808  C043  F015         	movff	fround@prec,___awmod@dividend
  3555  00180C  6A16               	clrf	___awmod@dividend+1,c
  3556  00180E  EC78  F012         	call	___awmod	;wreg free
  3557  001812  C015  F01C         	movff	?___awmod,___awdiv@dividend
  3558  001816  C016  F01D         	movff	?___awmod+1,___awdiv@dividend+1
  3559  00181A  EC79  F011         	call	___awdiv	;wreg free
  3560  00181E  0E09               	movlw	9
  3561  001820  241C               	addwf	?___awdiv,w,c
  3562  001822  6E25               	movwf	___wmul@multiplier,c
  3563  001824  0E00               	movlw	0
  3564  001826  201D               	addwfc	?___awdiv+1,w,c
  3565  001828  6E26               	movwf	___wmul@multiplier+1,c
  3566  00182A  ECBC  F015         	call	___wmul	;wreg free
  3567  00182E  0E29               	movlw	low __npowers_
  3568  001830  2425               	addwf	?___wmul,w,c
  3569  001832  6EF6               	movwf	tblptrl,c
  3570  001834  0E08               	movlw	high __npowers_
  3571  001836  2026               	addwfc	?___wmul+1,w,c
  3572  001838  6EF7               	movwf	tblptrh,c
  3573  00183A  0009               	tblrd		*+
  3574  00183C  CFF5 F02E          	movff	tablat,___ftmul@f2
  3575  001840  0009               	tblrd		*+
  3576  001842  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3577  001846  000A               	tblrd		*-
  3578  001848  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3579  00184C  0E00               	movlw	0
  3580  00184E  6E28               	movwf	___wmul@multiplicand+1,c
  3581  001850  0E03               	movlw	3
  3582  001852  6E27               	movwf	___wmul@multiplicand,c
  3583  001854  0E00               	movlw	0
  3584  001856  6E1F               	movwf	___awdiv@divisor+1,c
  3585  001858  0E64               	movlw	100
  3586  00185A  6E1E               	movwf	___awdiv@divisor,c
  3587  00185C  C043  F01C         	movff	fround@prec,___awdiv@dividend
  3588  001860  6A1D               	clrf	___awdiv@dividend+1,c
  3589  001862  EC79  F011         	call	___awdiv	;wreg free
  3590  001866  0E12               	movlw	18
  3591  001868  241C               	addwf	?___awdiv,w,c
  3592  00186A  6E25               	movwf	___wmul@multiplier,c
  3593  00186C  0E00               	movlw	0
  3594  00186E  201D               	addwfc	?___awdiv+1,w,c
  3595  001870  6E26               	movwf	___wmul@multiplier+1,c
  3596  001872  ECBC  F015         	call	___wmul	;wreg free
  3597  001876  0E29               	movlw	low __npowers_
  3598  001878  2425               	addwf	?___wmul,w,c
  3599  00187A  6EF6               	movwf	tblptrl,c
  3600  00187C  0E08               	movlw	high __npowers_
  3601  00187E  2026               	addwfc	?___wmul+1,w,c
  3602  001880  6EF7               	movwf	tblptrh,c
  3603  001882  0009               	tblrd		*+
  3604  001884  CFF5 F02B          	movff	tablat,___ftmul@f1
  3605  001888  0009               	tblrd		*+
  3606  00188A  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3607  00188E  000A               	tblrd		*-
  3608  001890  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3609  001894  EC96  F010         	call	___ftmul	;wreg free
  3610  001898  C02B  F040         	movff	?___ftmul,_fround$2194
  3611  00189C  C02C  F041         	movff	?___ftmul+1,_fround$2194+1
  3612  0018A0  C02D  F042         	movff	?___ftmul+2,_fround$2194+2
  3613                           
  3614                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3615  0018A4  0E00               	movlw	0
  3616  0018A6  6E28               	movwf	___wmul@multiplicand+1,c
  3617  0018A8  0E03               	movlw	3
  3618  0018AA  6E27               	movwf	___wmul@multiplicand,c
  3619  0018AC  0E00               	movlw	0
  3620  0018AE  6E18               	movwf	___awmod@divisor+1,c
  3621  0018B0  0E0A               	movlw	10
  3622  0018B2  6E17               	movwf	___awmod@divisor,c
  3623  0018B4  C043  F015         	movff	fround@prec,___awmod@dividend
  3624  0018B8  6A16               	clrf	___awmod@dividend+1,c
  3625  0018BA  EC78  F012         	call	___awmod	;wreg free
  3626  0018BE  C015  F025         	movff	?___awmod,___wmul@multiplier
  3627  0018C2  C016  F026         	movff	?___awmod+1,___wmul@multiplier+1
  3628  0018C6  ECBC  F015         	call	___wmul	;wreg free
  3629  0018CA  0E29               	movlw	low __npowers_
  3630  0018CC  2425               	addwf	?___wmul,w,c
  3631  0018CE  6EF6               	movwf	tblptrl,c
  3632  0018D0  0E08               	movlw	high __npowers_
  3633  0018D2  2026               	addwfc	?___wmul+1,w,c
  3634  0018D4  6EF7               	movwf	tblptrh,c
  3635  0018D6  0009               	tblrd		*+
  3636  0018D8  CFF5 F02E          	movff	tablat,___ftmul@f2
  3637  0018DC  0009               	tblrd		*+
  3638  0018DE  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3639  0018E2  000A               	tblrd		*-
  3640  0018E4  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3641  0018E8  C040  F02B         	movff	_fround$2194,___ftmul@f1
  3642  0018EC  C041  F02C         	movff	_fround$2194+1,___ftmul@f1+1
  3643  0018F0  C042  F02D         	movff	_fround$2194+2,___ftmul@f1+2
  3644  0018F4  EC96  F010         	call	___ftmul	;wreg free
  3645  0018F8  C02B  F03D         	movff	?___ftmul,_fround$2195
  3646  0018FC  C02C  F03E         	movff	?___ftmul+1,_fround$2195+1
  3647  001900  C02D  F03F         	movff	?___ftmul+2,_fround$2195+2
  3648                           
  3649                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3650  001904  C03D  F02B         	movff	_fround$2195,___ftmul@f1
  3651  001908  C03E  F02C         	movff	_fround$2195+1,___ftmul@f1+1
  3652  00190C  C03F  F02D         	movff	_fround$2195+2,___ftmul@f1+2
  3653  001910  0E00               	movlw	0
  3654  001912  6E2E               	movwf	___ftmul@f2,c
  3655  001914  0E00               	movlw	0
  3656  001916  6E2F               	movwf	___ftmul@f2+1,c
  3657  001918  0E3F               	movlw	63
  3658  00191A  6E30               	movwf	___ftmul@f2+2,c
  3659  00191C  EC96  F010         	call	___ftmul	;wreg free
  3660  001920  D079               	goto	L11
  3661  001922                     l4227:
  3662                           
  3663                           ;doprnt.c: 415: else if(prec > 10)
  3664  001922  0E0A               	movlw	10
  3665  001924  6443               	cpfsgt	fround@prec,c
  3666  001926  D05D               	goto	l4235
  3667                           
  3668                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3669  001928  0E00               	movlw	0
  3670  00192A  6E28               	movwf	___wmul@multiplicand+1,c
  3671  00192C  0E03               	movlw	3
  3672  00192E  6E27               	movwf	___wmul@multiplicand,c
  3673  001930  0E00               	movlw	0
  3674  001932  6E18               	movwf	___awmod@divisor+1,c
  3675  001934  0E0A               	movlw	10
  3676  001936  6E17               	movwf	___awmod@divisor,c
  3677  001938  C043  F015         	movff	fround@prec,___awmod@dividend
  3678  00193C  6A16               	clrf	___awmod@dividend+1,c
  3679  00193E  EC78  F012         	call	___awmod	;wreg free
  3680  001942  C015  F025         	movff	?___awmod,___wmul@multiplier
  3681  001946  C016  F026         	movff	?___awmod+1,___wmul@multiplier+1
  3682  00194A  ECBC  F015         	call	___wmul	;wreg free
  3683  00194E  0E29               	movlw	low __npowers_
  3684  001950  2425               	addwf	?___wmul,w,c
  3685  001952  6EF6               	movwf	tblptrl,c
  3686  001954  0E08               	movlw	high __npowers_
  3687  001956  2026               	addwfc	?___wmul+1,w,c
  3688  001958  6EF7               	movwf	tblptrh,c
  3689  00195A  0009               	tblrd		*+
  3690  00195C  CFF5 F02E          	movff	tablat,___ftmul@f2
  3691  001960  0009               	tblrd		*+
  3692  001962  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3693  001966  000A               	tblrd		*-
  3694  001968  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3695  00196C  0E00               	movlw	0
  3696  00196E  6E28               	movwf	___wmul@multiplicand+1,c
  3697  001970  0E03               	movlw	3
  3698  001972  6E27               	movwf	___wmul@multiplicand,c
  3699  001974  0E00               	movlw	0
  3700  001976  6E1F               	movwf	___awdiv@divisor+1,c
  3701  001978  0E0A               	movlw	10
  3702  00197A  6E1E               	movwf	___awdiv@divisor,c
  3703  00197C  C043  F01C         	movff	fround@prec,___awdiv@dividend
  3704  001980  6A1D               	clrf	___awdiv@dividend+1,c
  3705  001982  EC79  F011         	call	___awdiv	;wreg free
  3706  001986  0E09               	movlw	9
  3707  001988  241C               	addwf	?___awdiv,w,c
  3708  00198A  6E25               	movwf	___wmul@multiplier,c
  3709  00198C  0E00               	movlw	0
  3710  00198E  201D               	addwfc	?___awdiv+1,w,c
  3711  001990  6E26               	movwf	___wmul@multiplier+1,c
  3712  001992  ECBC  F015         	call	___wmul	;wreg free
  3713  001996  0E29               	movlw	low __npowers_
  3714  001998  2425               	addwf	?___wmul,w,c
  3715  00199A  6EF6               	movwf	tblptrl,c
  3716  00199C  0E08               	movlw	high __npowers_
  3717  00199E  2026               	addwfc	?___wmul+1,w,c
  3718  0019A0  6EF7               	movwf	tblptrh,c
  3719  0019A2  0009               	tblrd		*+
  3720  0019A4  CFF5 F02B          	movff	tablat,___ftmul@f1
  3721  0019A8  0009               	tblrd		*+
  3722  0019AA  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3723  0019AE  000A               	tblrd		*-
  3724  0019B0  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3725  0019B4  EC96  F010         	call	___ftmul	;wreg free
  3726  0019B8  C02B  F040         	movff	?___ftmul,_fround$2194
  3727  0019BC  C02C  F041         	movff	?___ftmul+1,_fround$2194+1
  3728  0019C0  C02D  F042         	movff	?___ftmul+2,_fround$2194+2
  3729                           
  3730                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3731  0019C4  C040  F02B         	movff	_fround$2194,___ftmul@f1
  3732  0019C8  C041  F02C         	movff	_fround$2194+1,___ftmul@f1+1
  3733  0019CC  C042  F02D         	movff	_fround$2194+2,___ftmul@f1+2
  3734  0019D0  0E00               	movlw	0
  3735  0019D2  6E2E               	movwf	___ftmul@f2,c
  3736  0019D4  0E00               	movlw	0
  3737  0019D6  6E2F               	movwf	___ftmul@f2+1,c
  3738  0019D8  0E3F               	movlw	63
  3739  0019DA  6E30               	movwf	___ftmul@f2+2,c
  3740  0019DC  EC96  F010         	call	___ftmul	;wreg free
  3741  0019E0  D019               	goto	L11
  3742  0019E2                     l4235:
  3743                           
  3744                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3745  0019E2  5043               	movf	fround@prec,w,c
  3746  0019E4  0D03               	mullw	3
  3747  0019E6  0E29               	movlw	low __npowers_
  3748  0019E8  24F3               	addwf	prodl,w,c
  3749  0019EA  6EF6               	movwf	tblptrl,c
  3750  0019EC  0E08               	movlw	high __npowers_
  3751  0019EE  20F4               	addwfc	prodh,w,c
  3752  0019F0  6EF7               	movwf	tblptrh,c
  3753  0019F2  0009               	tblrd		*+
  3754  0019F4  CFF5 F02B          	movff	tablat,___ftmul@f1
  3755  0019F8  0009               	tblrd		*+
  3756  0019FA  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3757  0019FE  000A               	tblrd		*-
  3758  001A00  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3759  001A04  0E00               	movlw	0
  3760  001A06  6E2E               	movwf	___ftmul@f2,c
  3761  001A08  0E00               	movlw	0
  3762  001A0A  6E2F               	movwf	___ftmul@f2+1,c
  3763  001A0C  0E3F               	movlw	63
  3764  001A0E  6E30               	movwf	___ftmul@f2+2,c
  3765  001A10  EC96  F010         	call	___ftmul	;wreg free
  3766  001A14                     L11:
  3767  001A14  C02B  F03A         	movff	?___ftmul,?_fround
  3768  001A18  C02C  F03B         	movff	?___ftmul+1,?_fround+1
  3769  001A1C  C02D  F03C         	movff	?___ftmul+2,?_fround+2
  3770  001A20  0012               	return	
  3771  001A22                     __end_of_fround:
  3772                           	opt stack 0
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           prodh	equ	0xFF4
  3778                           prodl	equ	0xFF3
  3779                           wreg	equ	0xFE8
  3780                           postinc1	equ	0xFE6
  3781                           indf2	equ	0xFDF
  3782                           postinc2	equ	0xFDE
  3783                           postdec2	equ	0xFDD
  3784                           fsr2h	equ	0xFDA
  3785                           fsr2l	equ	0xFD9
  3786                           status	equ	0xFD8
  3787                           
  3788 ;; *************** function ___wmul *****************
  3789 ;; Defined at:
  3790 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/wmul.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  multiplier      2   36[COMRAM] unsigned int 
  3793 ;;  multiplicand    2   38[COMRAM] unsigned int 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  product         2   40[COMRAM] unsigned int 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  2   36[COMRAM] unsigned int 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, prodl, prodh
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3805 ;;      Params:         4       0       0       0       0       0       0       0       0
  3806 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3808 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3809 ;;Total ram usage:        6 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    3
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_fround
  3816 ;;		_scale
  3817 ;;		_sprintf
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text5
  3822  002B78                     __ptext5:
  3823                           	opt stack 0
  3824  002B78                     ___wmul:
  3825                           	opt stack 25
  3826                           
  3827                           ;incstack = 0
  3828  002B78  5025               	movf	___wmul@multiplier,w,c
  3829  002B7A  0227               	mulwf	___wmul@multiplicand,c
  3830  002B7C  CFF3 F029          	movff	prodl,___wmul@product
  3831  002B80  CFF4 F02A          	movff	prodh,___wmul@product+1
  3832  002B84  5025               	movf	___wmul@multiplier,w,c
  3833  002B86  0228               	mulwf	___wmul@multiplicand+1,c
  3834  002B88  CFF3 FFF4          	movff	prodl,prodh
  3835  002B8C  6AF3               	clrf	prodl,c
  3836  002B8E  50F3               	movf	prodl,w,c
  3837  002B90  2629               	addwf	___wmul@product,f,c
  3838  002B92  50F4               	movf	prodh,w,c
  3839  002B94  222A               	addwfc	___wmul@product+1,f,c
  3840  002B96  5026               	movf	___wmul@multiplier+1,w,c
  3841  002B98  0227               	mulwf	___wmul@multiplicand,c
  3842  002B9A  CFF3 FFF4          	movff	prodl,prodh
  3843  002B9E  6AF3               	clrf	prodl,c
  3844  002BA0  50F3               	movf	prodl,w,c
  3845  002BA2  2629               	addwf	___wmul@product,f,c
  3846  002BA4  50F4               	movf	prodh,w,c
  3847  002BA6  222A               	addwfc	___wmul@product+1,f,c
  3848  002BA8  C029  F025         	movff	___wmul@product,?___wmul
  3849  002BAC  C02A  F026         	movff	___wmul@product+1,?___wmul+1
  3850  002BB0  0012               	return	
  3851  002BB2                     __end_of___wmul:
  3852                           	opt stack 0
  3853                           tblptru	equ	0xFF8
  3854                           tblptrh	equ	0xFF7
  3855                           tblptrl	equ	0xFF6
  3856                           tablat	equ	0xFF5
  3857                           prodh	equ	0xFF4
  3858                           prodl	equ	0xFF3
  3859                           wreg	equ	0xFE8
  3860                           postinc1	equ	0xFE6
  3861                           indf2	equ	0xFDF
  3862                           postinc2	equ	0xFDE
  3863                           postdec2	equ	0xFDD
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8
  3867                           
  3868 ;; *************** function ___awmod *****************
  3869 ;; Defined at:
  3870 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/awmod.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  dividend        2   20[COMRAM] int 
  3873 ;;  divisor         2   22[COMRAM] int 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  sign            1   26[COMRAM] unsigned char 
  3876 ;;  counter         1   25[COMRAM] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  2   20[COMRAM] int 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0, prodl
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3886 ;;      Params:         4       0       0       0       0       0       0       0       0
  3887 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3888 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3889 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3890 ;;Total ram usage:        7 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    3
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_fround
  3897 ;;		_scale
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text6
  3902  0024F0                     __ptext6:
  3903                           	opt stack 0
  3904  0024F0                     ___awmod:
  3905                           	opt stack 25
  3906                           
  3907                           ;incstack = 0
  3908  0024F0  6E19               	movwf	??___awmod& (0+255),c
  3909  0024F2  0E00               	movlw	0
  3910  0024F4  6E1B               	movwf	___awmod@sign,c
  3911  0024F6  5019               	movf	??___awmod& (0+255),w,c
  3912  0024F8  5016               	movf	___awmod@dividend+1,w,c
  3913  0024FA  0A80               	xorlw	128
  3914  0024FC  6EF3               	movwf	prodl,c
  3915  0024FE  0E80               	movlw	128
  3916  002500  5CF3               	subwf	prodl,w,c
  3917  002502  0E00               	movlw	0
  3918  002504  B4D8               	btfsc	status,2,c
  3919  002506  5C15               	subwf	___awmod@dividend,w,c
  3920  002508  B0D8               	btfsc	status,0,c
  3921  00250A  D008               	goto	l4703
  3922  00250C  6C15               	negf	___awmod@dividend,c
  3923  00250E  1E16               	comf	___awmod@dividend+1,f,c
  3924  002510  B0D8               	btfsc	status,0,c
  3925  002512  2A16               	incf	___awmod@dividend+1,f,c
  3926  002514  6E19               	movwf	??___awmod& (0+255),c
  3927  002516  0E01               	movlw	1
  3928  002518  6E1B               	movwf	___awmod@sign,c
  3929  00251A  5019               	movf	??___awmod& (0+255),w,c
  3930  00251C                     l4703:
  3931  00251C  5018               	movf	___awmod@divisor+1,w,c
  3932  00251E  0A80               	xorlw	128
  3933  002520  6EF3               	movwf	prodl,c
  3934  002522  0E80               	movlw	128
  3935  002524  5CF3               	subwf	prodl,w,c
  3936  002526  0E00               	movlw	0
  3937  002528  B4D8               	btfsc	status,2,c
  3938  00252A  5C17               	subwf	___awmod@divisor,w,c
  3939  00252C  B0D8               	btfsc	status,0,c
  3940  00252E  D004               	goto	l4707
  3941  002530  6C17               	negf	___awmod@divisor,c
  3942  002532  1E18               	comf	___awmod@divisor+1,f,c
  3943  002534  B0D8               	btfsc	status,0,c
  3944  002536  2A18               	incf	___awmod@divisor+1,f,c
  3945  002538                     l4707:
  3946  002538  5018               	movf	___awmod@divisor+1,w,c
  3947  00253A  1017               	iorwf	___awmod@divisor,w,c
  3948  00253C  B4D8               	btfsc	status,2,c
  3949  00253E  D01A               	goto	l4723
  3950  002540  6E19               	movwf	??___awmod& (0+255),c
  3951  002542  0E01               	movlw	1
  3952  002544  6E1A               	movwf	___awmod@counter,c
  3953  002546  5019               	movf	??___awmod& (0+255),w,c
  3954  002548  D004               	goto	l4713
  3955  00254A                     l4711:
  3956  00254A  90D8               	bcf	status,0,c
  3957  00254C  3617               	rlcf	___awmod@divisor,f,c
  3958  00254E  3618               	rlcf	___awmod@divisor+1,f,c
  3959  002550  2A1A               	incf	___awmod@counter,f,c
  3960  002552                     l4713:
  3961  002552  AE18               	btfss	___awmod@divisor+1,7,c
  3962  002554  D7FA               	goto	l4711
  3963  002556                     l4715:
  3964  002556  5017               	movf	___awmod@divisor,w,c
  3965  002558  5C15               	subwf	___awmod@dividend,w,c
  3966  00255A  5018               	movf	___awmod@divisor+1,w,c
  3967  00255C  5816               	subwfb	___awmod@dividend+1,w,c
  3968  00255E  A0D8               	btfss	status,0,c
  3969  002560  D004               	goto	l4719
  3970  002562  5017               	movf	___awmod@divisor,w,c
  3971  002564  5E15               	subwf	___awmod@dividend,f,c
  3972  002566  5018               	movf	___awmod@divisor+1,w,c
  3973  002568  5A16               	subwfb	___awmod@dividend+1,f,c
  3974  00256A                     l4719:
  3975  00256A  90D8               	bcf	status,0,c
  3976  00256C  3218               	rrcf	___awmod@divisor+1,f,c
  3977  00256E  3217               	rrcf	___awmod@divisor,f,c
  3978  002570  2E1A               	decfsz	___awmod@counter,f,c
  3979  002572  D7F1               	goto	l4715
  3980  002574                     l4723:
  3981  002574  501B               	movf	___awmod@sign,w,c
  3982  002576  B4D8               	btfsc	status,2,c
  3983  002578  D004               	goto	l4727
  3984  00257A  6C15               	negf	___awmod@dividend,c
  3985  00257C  1E16               	comf	___awmod@dividend+1,f,c
  3986  00257E  B0D8               	btfsc	status,0,c
  3987  002580  2A16               	incf	___awmod@dividend+1,f,c
  3988  002582                     l4727:
  3989  002582  C015  F015         	movff	___awmod@dividend,?___awmod
  3990  002586  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  3991  00258A  0012               	return	
  3992  00258C                     __end_of___awmod:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           prodh	equ	0xFF4
  3999                           prodl	equ	0xFF3
  4000                           wreg	equ	0xFE8
  4001                           postinc1	equ	0xFE6
  4002                           indf2	equ	0xFDF
  4003                           postinc2	equ	0xFDE
  4004                           postdec2	equ	0xFDD
  4005                           fsr2h	equ	0xFDA
  4006                           fsr2l	equ	0xFD9
  4007                           status	equ	0xFD8
  4008                           
  4009 ;; *************** function ___awdiv *****************
  4010 ;; Defined at:
  4011 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/awdiv.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  dividend        2   27[COMRAM] int 
  4014 ;;  divisor         2   29[COMRAM] int 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  quotient        2   34[COMRAM] int 
  4017 ;;  sign            1   33[COMRAM] unsigned char 
  4018 ;;  counter         1   32[COMRAM] unsigned char 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2   27[COMRAM] int 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0, prodl
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4028 ;;      Params:         4       0       0       0       0       0       0       0       0
  4029 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4030 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4031 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4032 ;;Total ram usage:        9 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    3
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_fround
  4039 ;;		_scale
  4040 ;;		_sprintf
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text7
  4045  0022F2                     __ptext7:
  4046                           	opt stack 0
  4047  0022F2                     ___awdiv:
  4048                           	opt stack 25
  4049                           
  4050                           ;incstack = 0
  4051  0022F2  6E20               	movwf	??___awdiv& (0+255),c
  4052  0022F4  0E00               	movlw	0
  4053  0022F6  6E22               	movwf	___awdiv@sign,c
  4054  0022F8  5020               	movf	??___awdiv& (0+255),w,c
  4055  0022FA  501F               	movf	___awdiv@divisor+1,w,c
  4056  0022FC  0A80               	xorlw	128
  4057  0022FE  6EF3               	movwf	prodl,c
  4058  002300  0E80               	movlw	128
  4059  002302  5CF3               	subwf	prodl,w,c
  4060  002304  0E00               	movlw	0
  4061  002306  B4D8               	btfsc	status,2,c
  4062  002308  5C1E               	subwf	___awdiv@divisor,w,c
  4063  00230A  B0D8               	btfsc	status,0,c
  4064  00230C  D008               	goto	l4659
  4065  00230E  6C1E               	negf	___awdiv@divisor,c
  4066  002310  1E1F               	comf	___awdiv@divisor+1,f,c
  4067  002312  B0D8               	btfsc	status,0,c
  4068  002314  2A1F               	incf	___awdiv@divisor+1,f,c
  4069  002316  6E20               	movwf	??___awdiv& (0+255),c
  4070  002318  0E01               	movlw	1
  4071  00231A  6E22               	movwf	___awdiv@sign,c
  4072  00231C  5020               	movf	??___awdiv& (0+255),w,c
  4073  00231E                     l4659:
  4074  00231E  501D               	movf	___awdiv@dividend+1,w,c
  4075  002320  0A80               	xorlw	128
  4076  002322  6EF3               	movwf	prodl,c
  4077  002324  0E80               	movlw	128
  4078  002326  5CF3               	subwf	prodl,w,c
  4079  002328  0E00               	movlw	0
  4080  00232A  B4D8               	btfsc	status,2,c
  4081  00232C  5C1C               	subwf	___awdiv@dividend,w,c
  4082  00232E  B0D8               	btfsc	status,0,c
  4083  002330  D006               	goto	l4665
  4084  002332  6C1C               	negf	___awdiv@dividend,c
  4085  002334  1E1D               	comf	___awdiv@dividend+1,f,c
  4086  002336  B0D8               	btfsc	status,0,c
  4087  002338  2A1D               	incf	___awdiv@dividend+1,f,c
  4088  00233A  0E01               	movlw	1
  4089  00233C  1A22               	xorwf	___awdiv@sign,f,c
  4090  00233E                     l4665:
  4091  00233E  0E00               	movlw	0
  4092  002340  6E24               	movwf	___awdiv@quotient+1,c
  4093  002342  0E00               	movlw	0
  4094  002344  6E23               	movwf	___awdiv@quotient,c
  4095  002346  501F               	movf	___awdiv@divisor+1,w,c
  4096  002348  101E               	iorwf	___awdiv@divisor,w,c
  4097  00234A  B4D8               	btfsc	status,2,c
  4098  00234C  D01E               	goto	l4687
  4099  00234E  6E20               	movwf	??___awdiv& (0+255),c
  4100  002350  0E01               	movlw	1
  4101  002352  6E21               	movwf	___awdiv@counter,c
  4102  002354  5020               	movf	??___awdiv& (0+255),w,c
  4103  002356  D004               	goto	l4673
  4104  002358                     l4671:
  4105  002358  90D8               	bcf	status,0,c
  4106  00235A  361E               	rlcf	___awdiv@divisor,f,c
  4107  00235C  361F               	rlcf	___awdiv@divisor+1,f,c
  4108  00235E  2A21               	incf	___awdiv@counter,f,c
  4109  002360                     l4673:
  4110  002360  AE1F               	btfss	___awdiv@divisor+1,7,c
  4111  002362  D7FA               	goto	l4671
  4112  002364                     l4675:
  4113  002364  90D8               	bcf	status,0,c
  4114  002366  3623               	rlcf	___awdiv@quotient,f,c
  4115  002368  3624               	rlcf	___awdiv@quotient+1,f,c
  4116  00236A  501E               	movf	___awdiv@divisor,w,c
  4117  00236C  5C1C               	subwf	___awdiv@dividend,w,c
  4118  00236E  501F               	movf	___awdiv@divisor+1,w,c
  4119  002370  581D               	subwfb	___awdiv@dividend+1,w,c
  4120  002372  A0D8               	btfss	status,0,c
  4121  002374  D005               	goto	l4683
  4122  002376  501E               	movf	___awdiv@divisor,w,c
  4123  002378  5E1C               	subwf	___awdiv@dividend,f,c
  4124  00237A  501F               	movf	___awdiv@divisor+1,w,c
  4125  00237C  5A1D               	subwfb	___awdiv@dividend+1,f,c
  4126  00237E  8023               	bsf	___awdiv@quotient,0,c
  4127  002380                     l4683:
  4128  002380  90D8               	bcf	status,0,c
  4129  002382  321F               	rrcf	___awdiv@divisor+1,f,c
  4130  002384  321E               	rrcf	___awdiv@divisor,f,c
  4131  002386  2E21               	decfsz	___awdiv@counter,f,c
  4132  002388  D7ED               	goto	l4675
  4133  00238A                     l4687:
  4134  00238A  5022               	movf	___awdiv@sign,w,c
  4135  00238C  B4D8               	btfsc	status,2,c
  4136  00238E  D004               	goto	l4691
  4137  002390  6C23               	negf	___awdiv@quotient,c
  4138  002392  1E24               	comf	___awdiv@quotient+1,f,c
  4139  002394  B0D8               	btfsc	status,0,c
  4140  002396  2A24               	incf	___awdiv@quotient+1,f,c
  4141  002398                     l4691:
  4142  002398  C023  F01C         	movff	___awdiv@quotient,?___awdiv
  4143  00239C  C024  F01D         	movff	___awdiv@quotient+1,?___awdiv+1
  4144  0023A0  0012               	return	
  4145  0023A2                     __end_of___awdiv:
  4146                           	opt stack 0
  4147                           tblptru	equ	0xFF8
  4148                           tblptrh	equ	0xFF7
  4149                           tblptrl	equ	0xFF6
  4150                           tablat	equ	0xFF5
  4151                           prodh	equ	0xFF4
  4152                           prodl	equ	0xFF3
  4153                           wreg	equ	0xFE8
  4154                           postinc1	equ	0xFE6
  4155                           indf2	equ	0xFDF
  4156                           postinc2	equ	0xFDE
  4157                           postdec2	equ	0xFDD
  4158                           fsr2h	equ	0xFDA
  4159                           fsr2l	equ	0xFD9
  4160                           status	equ	0xFD8
  4161                           
  4162 ;; *************** function __tdiv_to_l_ *****************
  4163 ;; Defined at:
  4164 ;;		line 60 in file "/opt/microchip/xc8/v1.30/sources/common/ftdivl.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  f1              3   20[COMRAM] float 
  4167 ;;  f2              3   23[COMRAM] float 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  quot            4   29[COMRAM] unsigned long 
  4170 ;;  exp1            1   34[COMRAM] unsigned char 
  4171 ;;  cntr            1   33[COMRAM] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  4   20[COMRAM] unsigned long 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4181 ;;      Params:         6       0       0       0       0       0       0       0       0
  4182 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4183 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4184 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4185 ;;Total ram usage:       15 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    3
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_sprintf
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text8
  4196  002028                     __ptext8:
  4197                           	opt stack 0
  4198  002028                     __tdiv_to_l_:
  4199                           	opt stack 26
  4200                           
  4201                           ;incstack = 0
  4202  002028  C017  F01B         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4203  00202C  6A1C               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4204  00202E  6A1D               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4205  002030  3416               	rlcf	__tdiv_to_l_@f1+1,w,c
  4206  002032  361B               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4207  002034  E301               	bnc	u2861
  4208  002036  801C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4209  002038                     u2861:
  4210  002038  501B               	movf	??__tdiv_to_l_,w,c
  4211  00203A  6E23               	movwf	__tdiv_to_l_@exp1,c
  4212  00203C  6623               	tstfsz	__tdiv_to_l_@exp1& (0+255),c
  4213  00203E  D001               	goto	l4295
  4214  002040  D05B               	goto	u2930
  4215  002042                     l4295:
  4216  002042  C01A  F01B         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4217  002046  6A1C               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4218  002048  6A1D               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4219  00204A  3419               	rlcf	__tdiv_to_l_@f2+1,w,c
  4220  00204C  361B               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4221  00204E  E301               	bnc	u2881
  4222  002050  801C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4223  002052                     u2881:
  4224  002052  501B               	movf	??__tdiv_to_l_,w,c
  4225  002054  6E22               	movwf	__tdiv_to_l_@cntr,c
  4226  002056  6622               	tstfsz	__tdiv_to_l_@cntr& (0+255),c
  4227  002058  D001               	goto	l4301
  4228  00205A  D04E               	goto	u2930
  4229  00205C                     l4301:
  4230  00205C  8E16               	bsf	__tdiv_to_l_@f1+1,7,c
  4231  00205E  0EFF               	movlw	255
  4232  002060  1615               	andwf	__tdiv_to_l_@f1,f,c
  4233  002062  0EFF               	movlw	255
  4234  002064  1616               	andwf	__tdiv_to_l_@f1+1,f,c
  4235  002066  0E00               	movlw	0
  4236  002068  1617               	andwf	__tdiv_to_l_@f1+2,f,c
  4237  00206A  8E19               	bsf	__tdiv_to_l_@f2+1,7,c
  4238  00206C  0EFF               	movlw	255
  4239  00206E  1618               	andwf	__tdiv_to_l_@f2,f,c
  4240  002070  0EFF               	movlw	255
  4241  002072  1619               	andwf	__tdiv_to_l_@f2+1,f,c
  4242  002074  0E00               	movlw	0
  4243  002076  161A               	andwf	__tdiv_to_l_@f2+2,f,c
  4244  002078  0E00               	movlw	0
  4245  00207A  6E1E               	movwf	__tdiv_to_l_@quot,c
  4246  00207C  0E00               	movlw	0
  4247  00207E  6E1F               	movwf	__tdiv_to_l_@quot+1,c
  4248  002080  0E00               	movlw	0
  4249  002082  6E20               	movwf	__tdiv_to_l_@quot+2,c
  4250  002084  0E00               	movlw	0
  4251  002086  6E21               	movwf	__tdiv_to_l_@quot+3,c
  4252  002088  0E7F               	movlw	127
  4253  00208A  5E23               	subwf	__tdiv_to_l_@exp1,f,c
  4254  00208C  5022               	movf	__tdiv_to_l_@cntr,w,c
  4255  00208E  0F98               	addlw	152
  4256  002090  5E23               	subwf	__tdiv_to_l_@exp1,f,c
  4257  002092  6E1B               	movwf	??__tdiv_to_l_& (0+255),c
  4258  002094  0E18               	movlw	24
  4259  002096  6E22               	movwf	__tdiv_to_l_@cntr,c
  4260  002098  501B               	movf	??__tdiv_to_l_& (0+255),w,c
  4261  00209A                     l4315:
  4262  00209A  90D8               	bcf	status,0,c
  4263  00209C  361E               	rlcf	__tdiv_to_l_@quot,f,c
  4264  00209E  361F               	rlcf	__tdiv_to_l_@quot+1,f,c
  4265  0020A0  3620               	rlcf	__tdiv_to_l_@quot+2,f,c
  4266  0020A2  3621               	rlcf	__tdiv_to_l_@quot+3,f,c
  4267  0020A4  5018               	movf	__tdiv_to_l_@f2,w,c
  4268  0020A6  5C15               	subwf	__tdiv_to_l_@f1,w,c
  4269  0020A8  5019               	movf	__tdiv_to_l_@f2+1,w,c
  4270  0020AA  5816               	subwfb	__tdiv_to_l_@f1+1,w,c
  4271  0020AC  501A               	movf	__tdiv_to_l_@f2+2,w,c
  4272  0020AE  5817               	subwfb	__tdiv_to_l_@f1+2,w,c
  4273  0020B0  A0D8               	btfss	status,0,c
  4274  0020B2  D007               	goto	l827
  4275  0020B4  5018               	movf	__tdiv_to_l_@f2,w,c
  4276  0020B6  5E15               	subwf	__tdiv_to_l_@f1,f,c
  4277  0020B8  5019               	movf	__tdiv_to_l_@f2+1,w,c
  4278  0020BA  5A16               	subwfb	__tdiv_to_l_@f1+1,f,c
  4279  0020BC  501A               	movf	__tdiv_to_l_@f2+2,w,c
  4280  0020BE  5A17               	subwfb	__tdiv_to_l_@f1+2,f,c
  4281  0020C0  801E               	bsf	__tdiv_to_l_@quot,0,c
  4282  0020C2                     l827:
  4283  0020C2  90D8               	bcf	status,0,c
  4284  0020C4  3615               	rlcf	__tdiv_to_l_@f1,f,c
  4285  0020C6  3616               	rlcf	__tdiv_to_l_@f1+1,f,c
  4286  0020C8  3617               	rlcf	__tdiv_to_l_@f1+2,f,c
  4287  0020CA  2E22               	decfsz	__tdiv_to_l_@cntr,f,c
  4288  0020CC  D7E6               	goto	l4315
  4289  0020CE  AE23               	btfss	__tdiv_to_l_@exp1,7,c
  4290  0020D0  D010               	goto	l4335
  4291  0020D2  5023               	movf	__tdiv_to_l_@exp1,w,c
  4292  0020D4  0A80               	xorlw	128
  4293  0020D6  6E1B               	movwf	??__tdiv_to_l_& (0+255),c
  4294  0020D8  0EE9               	movlw	233
  4295  0020DA  0A80               	xorlw	128
  4296  0020DC  5C1B               	subwf	??__tdiv_to_l_,w,c
  4297  0020DE  A0D8               	btfss	status,0,c
  4298  0020E0  D00B               	goto	u2930
  4299  0020E2                     l4331:
  4300  0020E2  90D8               	bcf	status,0,c
  4301  0020E4  3221               	rrcf	__tdiv_to_l_@quot+3,f,c
  4302  0020E6  3220               	rrcf	__tdiv_to_l_@quot+2,f,c
  4303  0020E8  321F               	rrcf	__tdiv_to_l_@quot+1,f,c
  4304  0020EA  321E               	rrcf	__tdiv_to_l_@quot,f,c
  4305  0020EC  3E23               	incfsz	__tdiv_to_l_@exp1,f,c
  4306  0020EE  D7F9               	goto	l4331
  4307  0020F0  D014               	goto	l833
  4308  0020F2                     l4335:
  4309  0020F2  0E17               	movlw	23
  4310  0020F4  6423               	cpfsgt	__tdiv_to_l_@exp1,c
  4311  0020F6  D00F               	goto	l4343
  4312  0020F8                     u2930:
  4313  0020F8  0E00               	movlw	0
  4314  0020FA  6E15               	movwf	?__tdiv_to_l_,c
  4315  0020FC  0E00               	movlw	0
  4316  0020FE  6E16               	movwf	?__tdiv_to_l_+1,c
  4317  002100  0E00               	movlw	0
  4318  002102  6E17               	movwf	?__tdiv_to_l_+2,c
  4319  002104  0E00               	movlw	0
  4320  002106  6E18               	movwf	?__tdiv_to_l_+3,c
  4321  002108  D010               	goto	l824
  4322  00210A                     l4341:
  4323  00210A  90D8               	bcf	status,0,c
  4324  00210C  361E               	rlcf	__tdiv_to_l_@quot,f,c
  4325  00210E  361F               	rlcf	__tdiv_to_l_@quot+1,f,c
  4326  002110  3620               	rlcf	__tdiv_to_l_@quot+2,f,c
  4327  002112  3621               	rlcf	__tdiv_to_l_@quot+3,f,c
  4328  002114  0623               	decf	__tdiv_to_l_@exp1,f,c
  4329  002116                     l4343:
  4330  002116  6623               	tstfsz	__tdiv_to_l_@exp1,c
  4331  002118  D7F8               	goto	l4341
  4332  00211A                     l833:
  4333  00211A  C01E  F015         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4334  00211E  C01F  F016         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4335  002122  C020  F017         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4336  002126  C021  F018         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4337  00212A                     l824:
  4338  00212A  0012               	return	
  4339  00212C                     __end_of__tdiv_to_l_:
  4340                           	opt stack 0
  4341                           tblptru	equ	0xFF8
  4342                           tblptrh	equ	0xFF7
  4343                           tblptrl	equ	0xFF6
  4344                           tablat	equ	0xFF5
  4345                           prodh	equ	0xFF4
  4346                           prodl	equ	0xFF3
  4347                           wreg	equ	0xFE8
  4348                           postinc1	equ	0xFE6
  4349                           indf2	equ	0xFDF
  4350                           postinc2	equ	0xFDE
  4351                           postdec2	equ	0xFDD
  4352                           fsr2h	equ	0xFDA
  4353                           fsr2l	equ	0xFD9
  4354                           status	equ	0xFD8
  4355                           
  4356 ;; *************** function __div_to_l_ *****************
  4357 ;; Defined at:
  4358 ;;		line 60 in file "/opt/microchip/xc8/v1.30/sources/common/fldivl.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  f1              3   20[COMRAM] unsigned long 
  4361 ;;  f2              3   23[COMRAM] unsigned long 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  quot            4   30[COMRAM] unsigned long 
  4364 ;;  exp1            1   35[COMRAM] unsigned char 
  4365 ;;  cntr            1   34[COMRAM] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  4   20[COMRAM] unsigned long 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4375 ;;      Params:         6       0       0       0       0       0       0       0       0
  4376 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4377 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4378 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4379 ;;Total ram usage:       16 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    3
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_sprintf
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text9
  4390  001DC2                     __ptext9:
  4391                           	opt stack 0
  4392  001DC2                     __div_to_l_:
  4393                           	opt stack 26
  4394                           
  4395                           ;incstack = 0
  4396  001DC2  C015  F01B         	movff	__div_to_l_@f1,??__div_to_l_
  4397  001DC6  C016  F01C         	movff	__div_to_l_@f1+1,??__div_to_l_+1
  4398  001DCA  C017  F01D         	movff	__div_to_l_@f1+2,??__div_to_l_+2
  4399  001DCE  C018  F01E         	movff	__div_to_l_@f1+3,??__div_to_l_+3
  4400  001DD2  0E18               	movlw	24
  4401  001DD4  D005               	goto	u2950
  4402  001DD6                     u2955:
  4403  001DD6  90D8               	bcf	status,0,c
  4404  001DD8  321E               	rrcf	??__div_to_l_+3,f,c
  4405  001DDA  321D               	rrcf	??__div_to_l_+2,f,c
  4406  001DDC  321C               	rrcf	??__div_to_l_+1,f,c
  4407  001DDE  321B               	rrcf	??__div_to_l_,f,c
  4408  001DE0                     u2950:
  4409  001DE0  2EE8               	decfsz	wreg,f,c
  4410  001DE2  D7F9               	goto	u2955
  4411  001DE4  501B               	movf	??__div_to_l_,w,c
  4412  001DE6  6E24               	movwf	__div_to_l_@exp1,c
  4413  001DE8  6624               	tstfsz	__div_to_l_@exp1& (0+255),c
  4414  001DEA  D001               	goto	l4351
  4415  001DEC  D06D               	goto	u3020
  4416  001DEE                     l4351:
  4417  001DEE  C018  F01B         	movff	__div_to_l_@f2,??__div_to_l_
  4418  001DF2  C019  F01C         	movff	__div_to_l_@f2+1,??__div_to_l_+1
  4419  001DF6  C01A  F01D         	movff	__div_to_l_@f2+2,??__div_to_l_+2
  4420  001DFA  C01B  F01E         	movff	__div_to_l_@f2+3,??__div_to_l_+3
  4421  001DFE  0E18               	movlw	24
  4422  001E00  D005               	goto	u2970
  4423  001E02                     u2975:
  4424  001E02  90D8               	bcf	status,0,c
  4425  001E04  321E               	rrcf	??__div_to_l_+3,f,c
  4426  001E06  321D               	rrcf	??__div_to_l_+2,f,c
  4427  001E08  321C               	rrcf	??__div_to_l_+1,f,c
  4428  001E0A  321B               	rrcf	??__div_to_l_,f,c
  4429  001E0C                     u2970:
  4430  001E0C  2EE8               	decfsz	wreg,f,c
  4431  001E0E  D7F9               	goto	u2975
  4432  001E10  501B               	movf	??__div_to_l_,w,c
  4433  001E12  6E23               	movwf	__div_to_l_@cntr,c
  4434  001E14  6623               	tstfsz	__div_to_l_@cntr& (0+255),c
  4435  001E16  D001               	goto	l4357
  4436  001E18  D057               	goto	u3020
  4437  001E1A                     l4357:
  4438  001E1A  8E17               	bsf	__div_to_l_@f1+2,7,c
  4439  001E1C  0EFF               	movlw	255
  4440  001E1E  1615               	andwf	__div_to_l_@f1,f,c
  4441  001E20  0EFF               	movlw	255
  4442  001E22  1616               	andwf	__div_to_l_@f1+1,f,c
  4443  001E24  0EFF               	movlw	255
  4444  001E26  1617               	andwf	__div_to_l_@f1+2,f,c
  4445  001E28  0E00               	movlw	0
  4446  001E2A  1618               	andwf	__div_to_l_@f1+3,f,c
  4447  001E2C  8E1A               	bsf	__div_to_l_@f2+2,7,c
  4448  001E2E  0EFF               	movlw	255
  4449  001E30  1618               	andwf	__div_to_l_@f2,f,c
  4450  001E32  0EFF               	movlw	255
  4451  001E34  1619               	andwf	__div_to_l_@f2+1,f,c
  4452  001E36  0EFF               	movlw	255
  4453  001E38  161A               	andwf	__div_to_l_@f2+2,f,c
  4454  001E3A  0E00               	movlw	0
  4455  001E3C  161B               	andwf	__div_to_l_@f2+3,f,c
  4456  001E3E  0E00               	movlw	0
  4457  001E40  6E1F               	movwf	__div_to_l_@quot,c
  4458  001E42  0E00               	movlw	0
  4459  001E44  6E20               	movwf	__div_to_l_@quot+1,c
  4460  001E46  0E00               	movlw	0
  4461  001E48  6E21               	movwf	__div_to_l_@quot+2,c
  4462  001E4A  0E00               	movlw	0
  4463  001E4C  6E22               	movwf	__div_to_l_@quot+3,c
  4464  001E4E  0E7F               	movlw	127
  4465  001E50  5E24               	subwf	__div_to_l_@exp1,f,c
  4466  001E52  5023               	movf	__div_to_l_@cntr,w,c
  4467  001E54  0FA0               	addlw	160
  4468  001E56  5E24               	subwf	__div_to_l_@exp1,f,c
  4469  001E58  6E1B               	movwf	??__div_to_l_& (0+255),c
  4470  001E5A  0E20               	movlw	32
  4471  001E5C  6E23               	movwf	__div_to_l_@cntr,c
  4472  001E5E  501B               	movf	??__div_to_l_& (0+255),w,c
  4473  001E60                     l708:
  4474  001E60  90D8               	bcf	status,0,c
  4475  001E62  361F               	rlcf	__div_to_l_@quot,f,c
  4476  001E64  3620               	rlcf	__div_to_l_@quot+1,f,c
  4477  001E66  3621               	rlcf	__div_to_l_@quot+2,f,c
  4478  001E68  3622               	rlcf	__div_to_l_@quot+3,f,c
  4479  001E6A  5018               	movf	__div_to_l_@f2,w,c
  4480  001E6C  5C15               	subwf	__div_to_l_@f1,w,c
  4481  001E6E  5019               	movf	__div_to_l_@f2+1,w,c
  4482  001E70  5816               	subwfb	__div_to_l_@f1+1,w,c
  4483  001E72  501A               	movf	__div_to_l_@f2+2,w,c
  4484  001E74  5817               	subwfb	__div_to_l_@f1+2,w,c
  4485  001E76  501B               	movf	__div_to_l_@f2+3,w,c
  4486  001E78  5818               	subwfb	__div_to_l_@f1+3,w,c
  4487  001E7A  A0D8               	btfss	status,0,c
  4488  001E7C  D009               	goto	l4377
  4489  001E7E  5018               	movf	__div_to_l_@f2,w,c
  4490  001E80  5E15               	subwf	__div_to_l_@f1,f,c
  4491  001E82  5019               	movf	__div_to_l_@f2+1,w,c
  4492  001E84  5A16               	subwfb	__div_to_l_@f1+1,f,c
  4493  001E86  501A               	movf	__div_to_l_@f2+2,w,c
  4494  001E88  5A17               	subwfb	__div_to_l_@f1+2,f,c
  4495  001E8A  501B               	movf	__div_to_l_@f2+3,w,c
  4496  001E8C  5A18               	subwfb	__div_to_l_@f1+3,f,c
  4497  001E8E  801F               	bsf	__div_to_l_@quot,0,c
  4498  001E90                     l4377:
  4499  001E90  90D8               	bcf	status,0,c
  4500  001E92  3615               	rlcf	__div_to_l_@f1,f,c
  4501  001E94  3616               	rlcf	__div_to_l_@f1+1,f,c
  4502  001E96  3617               	rlcf	__div_to_l_@f1+2,f,c
  4503  001E98  3618               	rlcf	__div_to_l_@f1+3,f,c
  4504  001E9A  2E23               	decfsz	__div_to_l_@cntr,f,c
  4505  001E9C  D7E1               	goto	l708
  4506  001E9E  AE24               	btfss	__div_to_l_@exp1,7,c
  4507  001EA0  D010               	goto	l4391
  4508  001EA2  5024               	movf	__div_to_l_@exp1,w,c
  4509  001EA4  0A80               	xorlw	128
  4510  001EA6  6E1B               	movwf	??__div_to_l_& (0+255),c
  4511  001EA8  0EE1               	movlw	225
  4512  001EAA  0A80               	xorlw	128
  4513  001EAC  5C1B               	subwf	??__div_to_l_,w,c
  4514  001EAE  A0D8               	btfss	status,0,c
  4515  001EB0  D00B               	goto	u3020
  4516  001EB2                     l4387:
  4517  001EB2  90D8               	bcf	status,0,c
  4518  001EB4  3222               	rrcf	__div_to_l_@quot+3,f,c
  4519  001EB6  3221               	rrcf	__div_to_l_@quot+2,f,c
  4520  001EB8  3220               	rrcf	__div_to_l_@quot+1,f,c
  4521  001EBA  321F               	rrcf	__div_to_l_@quot,f,c
  4522  001EBC  3E24               	incfsz	__div_to_l_@exp1,f,c
  4523  001EBE  D7F9               	goto	l4387
  4524  001EC0  D014               	goto	l715
  4525  001EC2                     l4391:
  4526  001EC2  0E1F               	movlw	31
  4527  001EC4  6424               	cpfsgt	__div_to_l_@exp1,c
  4528  001EC6  D00F               	goto	l4399
  4529  001EC8                     u3020:
  4530  001EC8  0E00               	movlw	0
  4531  001ECA  6E15               	movwf	?__div_to_l_,c
  4532  001ECC  0E00               	movlw	0
  4533  001ECE  6E16               	movwf	?__div_to_l_+1,c
  4534  001ED0  0E00               	movlw	0
  4535  001ED2  6E17               	movwf	?__div_to_l_+2,c
  4536  001ED4  0E00               	movlw	0
  4537  001ED6  6E18               	movwf	?__div_to_l_+3,c
  4538  001ED8  D010               	goto	l706
  4539  001EDA                     l4397:
  4540  001EDA  90D8               	bcf	status,0,c
  4541  001EDC  361F               	rlcf	__div_to_l_@quot,f,c
  4542  001EDE  3620               	rlcf	__div_to_l_@quot+1,f,c
  4543  001EE0  3621               	rlcf	__div_to_l_@quot+2,f,c
  4544  001EE2  3622               	rlcf	__div_to_l_@quot+3,f,c
  4545  001EE4  0624               	decf	__div_to_l_@exp1,f,c
  4546  001EE6                     l4399:
  4547  001EE6  6624               	tstfsz	__div_to_l_@exp1,c
  4548  001EE8  D7F8               	goto	l4397
  4549  001EEA                     l715:
  4550  001EEA  C01F  F015         	movff	__div_to_l_@quot,?__div_to_l_
  4551  001EEE  C020  F016         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4552  001EF2  C021  F017         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4553  001EF6  C022  F018         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4554  001EFA                     l706:
  4555  001EFA  0012               	return	
  4556  001EFC                     __end_of__div_to_l_:
  4557                           	opt stack 0
  4558                           tblptru	equ	0xFF8
  4559                           tblptrh	equ	0xFF7
  4560                           tblptrl	equ	0xFF6
  4561                           tablat	equ	0xFF5
  4562                           prodh	equ	0xFF4
  4563                           prodl	equ	0xFF3
  4564                           wreg	equ	0xFE8
  4565                           postinc1	equ	0xFE6
  4566                           indf2	equ	0xFDF
  4567                           postinc2	equ	0xFDE
  4568                           postdec2	equ	0xFDD
  4569                           fsr2h	equ	0xFDA
  4570                           fsr2l	equ	0xFD9
  4571                           status	equ	0xFD8
  4572                           
  4573 ;; *************** function ___lltoft *****************
  4574 ;; Defined at:
  4575 ;;		line 35 in file "/opt/microchip/xc8/v1.30/sources/common/lltoft.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  c               4   28[COMRAM] unsigned long 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  exp             1   36[COMRAM] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  3   28[COMRAM] float 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4589 ;;      Params:         4       0       0       0       0       0       0       0       0
  4590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4591 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4592 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4593 ;;Total ram usage:        9 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    4
  4596 ;; This function calls:
  4597 ;;		___ftpack
  4598 ;; This function is called by:
  4599 ;;		_sprintf
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text10
  4604  002812                     __ptext10:
  4605                           	opt stack 0
  4606  002812                     ___lltoft:
  4607                           	opt stack 25
  4608                           
  4609                           ;incstack = 0
  4610  002812  6E21               	movwf	??___lltoft& (0+255),c
  4611  002814  0E8E               	movlw	142
  4612  002816  6E25               	movwf	___lltoft@exp,c
  4613  002818  5021               	movf	??___lltoft& (0+255),w,c
  4614  00281A  D006               	goto	l4841
  4615  00281C                     l4839:
  4616  00281C  90D8               	bcf	status,0,c
  4617  00281E  3220               	rrcf	___lltoft@c+3,f,c
  4618  002820  321F               	rrcf	___lltoft@c+2,f,c
  4619  002822  321E               	rrcf	___lltoft@c+1,f,c
  4620  002824  321D               	rrcf	___lltoft@c,f,c
  4621  002826  2A25               	incf	___lltoft@exp,f,c
  4622  002828                     l4841:
  4623  002828  0E00               	movlw	0
  4624  00282A  141D               	andwf	___lltoft@c,w,c
  4625  00282C  6E21               	movwf	??___lltoft& (0+255),c
  4626  00282E  0E00               	movlw	0
  4627  002830  141E               	andwf	___lltoft@c+1,w,c
  4628  002832  6E22               	movwf	(??___lltoft+1)& (0+255),c
  4629  002834  0E00               	movlw	0
  4630  002836  141F               	andwf	___lltoft@c+2,w,c
  4631  002838  6E23               	movwf	(??___lltoft+2)& (0+255),c
  4632  00283A  0EFF               	movlw	255
  4633  00283C  1420               	andwf	___lltoft@c+3,w,c
  4634  00283E  6E24               	movwf	(??___lltoft+3)& (0+255),c
  4635  002840  5024               	movf	??___lltoft+3,w,c
  4636  002842  1021               	iorwf	??___lltoft,w,c
  4637  002844  1022               	iorwf	??___lltoft+1,w,c
  4638  002846  1023               	iorwf	??___lltoft+2,w,c
  4639  002848  A4D8               	btfss	status,2,c
  4640  00284A  D7E8               	goto	l4839
  4641  00284C  C01D  F015         	movff	___lltoft@c,___ftpack@arg
  4642  002850  C01E  F016         	movff	___lltoft@c+1,___ftpack@arg+1
  4643  002854  C01F  F017         	movff	___lltoft@c+2,___ftpack@arg+2
  4644  002858  C025  F018         	movff	___lltoft@exp,___ftpack@exp
  4645  00285C  6E21               	movwf	??___lltoft& (0+255),c
  4646  00285E  0E00               	movlw	0
  4647  002860  6E19               	movwf	___ftpack@sign,c
  4648  002862  5021               	movf	??___lltoft& (0+255),w,c
  4649  002864  ECD1  F011         	call	___ftpack	;wreg free
  4650  002868  C015  F01D         	movff	?___ftpack,?___lltoft
  4651  00286C  C016  F01E         	movff	?___ftpack+1,?___lltoft+1
  4652  002870  C017  F01F         	movff	?___ftpack+2,?___lltoft+2
  4653  002874  0012               	return	
  4654  002876                     __end_of___lltoft:
  4655                           	opt stack 0
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           prodh	equ	0xFF4
  4661                           prodl	equ	0xFF3
  4662                           wreg	equ	0xFE8
  4663                           postinc1	equ	0xFE6
  4664                           indf2	equ	0xFDF
  4665                           postinc2	equ	0xFDE
  4666                           postdec2	equ	0xFDD
  4667                           fsr2h	equ	0xFDA
  4668                           fsr2l	equ	0xFD9
  4669                           status	equ	0xFD8
  4670                           
  4671 ;; *************** function ___llmod *****************
  4672 ;; Defined at:
  4673 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/llmod.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  dividend        4   20[COMRAM] unsigned long 
  4676 ;;  divisor         4   24[COMRAM] unsigned long 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  counter         1   29[COMRAM] unsigned char 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  4   20[COMRAM] unsigned long 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4688 ;;      Params:         8       0       0       0       0       0       0       0       0
  4689 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4690 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4691 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4692 ;;Total ram usage:       10 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    3
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_sprintf
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text11
  4703  00273E                     __ptext11:
  4704                           	opt stack 0
  4705  00273E                     ___llmod:
  4706                           	opt stack 26
  4707                           
  4708                           ;incstack = 0
  4709  00273E  501C               	movf	___llmod@divisor+3,w,c
  4710  002740  1019               	iorwf	___llmod@divisor,w,c
  4711  002742  101A               	iorwf	___llmod@divisor+1,w,c
  4712  002744  101B               	iorwf	___llmod@divisor+2,w,c
  4713  002746  B4D8               	btfsc	status,2,c
  4714  002748  D026               	goto	l922
  4715  00274A  6E1D               	movwf	??___llmod& (0+255),c
  4716  00274C  0E01               	movlw	1
  4717  00274E  6E1E               	movwf	___llmod@counter,c
  4718  002750  501D               	movf	??___llmod& (0+255),w,c
  4719  002752  D006               	goto	l4827
  4720  002754                     l4825:
  4721  002754  90D8               	bcf	status,0,c
  4722  002756  3619               	rlcf	___llmod@divisor,f,c
  4723  002758  361A               	rlcf	___llmod@divisor+1,f,c
  4724  00275A  361B               	rlcf	___llmod@divisor+2,f,c
  4725  00275C  361C               	rlcf	___llmod@divisor+3,f,c
  4726  00275E  2A1E               	incf	___llmod@counter,f,c
  4727  002760                     l4827:
  4728  002760  AE1C               	btfss	___llmod@divisor+3,7,c
  4729  002762  D7F8               	goto	l4825
  4730  002764                     l4829:
  4731  002764  5019               	movf	___llmod@divisor,w,c
  4732  002766  5C15               	subwf	___llmod@dividend,w,c
  4733  002768  501A               	movf	___llmod@divisor+1,w,c
  4734  00276A  5816               	subwfb	___llmod@dividend+1,w,c
  4735  00276C  501B               	movf	___llmod@divisor+2,w,c
  4736  00276E  5817               	subwfb	___llmod@dividend+2,w,c
  4737  002770  501C               	movf	___llmod@divisor+3,w,c
  4738  002772  5818               	subwfb	___llmod@dividend+3,w,c
  4739  002774  A0D8               	btfss	status,0,c
  4740  002776  D008               	goto	l4833
  4741  002778  5019               	movf	___llmod@divisor,w,c
  4742  00277A  5E15               	subwf	___llmod@dividend,f,c
  4743  00277C  501A               	movf	___llmod@divisor+1,w,c
  4744  00277E  5A16               	subwfb	___llmod@dividend+1,f,c
  4745  002780  501B               	movf	___llmod@divisor+2,w,c
  4746  002782  5A17               	subwfb	___llmod@dividend+2,f,c
  4747  002784  501C               	movf	___llmod@divisor+3,w,c
  4748  002786  5A18               	subwfb	___llmod@dividend+3,f,c
  4749  002788                     l4833:
  4750  002788  90D8               	bcf	status,0,c
  4751  00278A  321C               	rrcf	___llmod@divisor+3,f,c
  4752  00278C  321B               	rrcf	___llmod@divisor+2,f,c
  4753  00278E  321A               	rrcf	___llmod@divisor+1,f,c
  4754  002790  3219               	rrcf	___llmod@divisor,f,c
  4755  002792  2E1E               	decfsz	___llmod@counter,f,c
  4756  002794  D7E7               	goto	l4829
  4757  002796                     l922:
  4758  002796  C015  F015         	movff	___llmod@dividend,?___llmod
  4759  00279A  C016  F016         	movff	___llmod@dividend+1,?___llmod+1
  4760  00279E  C017  F017         	movff	___llmod@dividend+2,?___llmod+2
  4761  0027A2  C018  F018         	movff	___llmod@dividend+3,?___llmod+3
  4762  0027A6  0012               	return	
  4763  0027A8                     __end_of___llmod:
  4764                           	opt stack 0
  4765                           tblptru	equ	0xFF8
  4766                           tblptrh	equ	0xFF7
  4767                           tblptrl	equ	0xFF6
  4768                           tablat	equ	0xFF5
  4769                           prodh	equ	0xFF4
  4770                           prodl	equ	0xFF3
  4771                           wreg	equ	0xFE8
  4772                           postinc1	equ	0xFE6
  4773                           indf2	equ	0xFDF
  4774                           postinc2	equ	0xFDE
  4775                           postdec2	equ	0xFDD
  4776                           fsr2h	equ	0xFDA
  4777                           fsr2l	equ	0xFD9
  4778                           status	equ	0xFD8
  4779                           
  4780 ;; *************** function ___lldiv *****************
  4781 ;; Defined at:
  4782 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/lldiv.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  dividend        4   20[COMRAM] unsigned long 
  4785 ;;  divisor         4   24[COMRAM] unsigned long 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  quotient        4   29[COMRAM] unsigned long 
  4788 ;;  counter         1   33[COMRAM] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  4   20[COMRAM] unsigned long 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4798 ;;      Params:         8       0       0       0       0       0       0       0       0
  4799 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4800 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4801 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4802 ;;Total ram usage:       14 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    3
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_sprintf
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text12
  4813  0026B8                     __ptext12:
  4814                           	opt stack 0
  4815  0026B8                     ___lldiv:
  4816                           	opt stack 26
  4817                           
  4818                           ;incstack = 0
  4819  0026B8  0E00               	movlw	0
  4820  0026BA  6E1E               	movwf	___lldiv@quotient,c
  4821  0026BC  0E00               	movlw	0
  4822  0026BE  6E1F               	movwf	___lldiv@quotient+1,c
  4823  0026C0  0E00               	movlw	0
  4824  0026C2  6E20               	movwf	___lldiv@quotient+2,c
  4825  0026C4  0E00               	movlw	0
  4826  0026C6  6E21               	movwf	___lldiv@quotient+3,c
  4827  0026C8  501C               	movf	___lldiv@divisor+3,w,c
  4828  0026CA  1019               	iorwf	___lldiv@divisor,w,c
  4829  0026CC  101A               	iorwf	___lldiv@divisor+1,w,c
  4830  0026CE  101B               	iorwf	___lldiv@divisor+2,w,c
  4831  0026D0  B4D8               	btfsc	status,2,c
  4832  0026D2  D02C               	goto	l912
  4833  0026D4  6E1D               	movwf	??___lldiv& (0+255),c
  4834  0026D6  0E01               	movlw	1
  4835  0026D8  6E22               	movwf	___lldiv@counter,c
  4836  0026DA  501D               	movf	??___lldiv& (0+255),w,c
  4837  0026DC  D006               	goto	l4807
  4838  0026DE                     l4805:
  4839  0026DE  90D8               	bcf	status,0,c
  4840  0026E0  3619               	rlcf	___lldiv@divisor,f,c
  4841  0026E2  361A               	rlcf	___lldiv@divisor+1,f,c
  4842  0026E4  361B               	rlcf	___lldiv@divisor+2,f,c
  4843  0026E6  361C               	rlcf	___lldiv@divisor+3,f,c
  4844  0026E8  2A22               	incf	___lldiv@counter,f,c
  4845  0026EA                     l4807:
  4846  0026EA  AE1C               	btfss	___lldiv@divisor+3,7,c
  4847  0026EC  D7F8               	goto	l4805
  4848  0026EE                     l4809:
  4849  0026EE  90D8               	bcf	status,0,c
  4850  0026F0  361E               	rlcf	___lldiv@quotient,f,c
  4851  0026F2  361F               	rlcf	___lldiv@quotient+1,f,c
  4852  0026F4  3620               	rlcf	___lldiv@quotient+2,f,c
  4853  0026F6  3621               	rlcf	___lldiv@quotient+3,f,c
  4854  0026F8  5019               	movf	___lldiv@divisor,w,c
  4855  0026FA  5C15               	subwf	___lldiv@dividend,w,c
  4856  0026FC  501A               	movf	___lldiv@divisor+1,w,c
  4857  0026FE  5816               	subwfb	___lldiv@dividend+1,w,c
  4858  002700  501B               	movf	___lldiv@divisor+2,w,c
  4859  002702  5817               	subwfb	___lldiv@dividend+2,w,c
  4860  002704  501C               	movf	___lldiv@divisor+3,w,c
  4861  002706  5818               	subwfb	___lldiv@dividend+3,w,c
  4862  002708  A0D8               	btfss	status,0,c
  4863  00270A  D009               	goto	l4817
  4864  00270C  5019               	movf	___lldiv@divisor,w,c
  4865  00270E  5E15               	subwf	___lldiv@dividend,f,c
  4866  002710  501A               	movf	___lldiv@divisor+1,w,c
  4867  002712  5A16               	subwfb	___lldiv@dividend+1,f,c
  4868  002714  501B               	movf	___lldiv@divisor+2,w,c
  4869  002716  5A17               	subwfb	___lldiv@dividend+2,f,c
  4870  002718  501C               	movf	___lldiv@divisor+3,w,c
  4871  00271A  5A18               	subwfb	___lldiv@dividend+3,f,c
  4872  00271C  801E               	bsf	___lldiv@quotient,0,c
  4873  00271E                     l4817:
  4874  00271E  90D8               	bcf	status,0,c
  4875  002720  321C               	rrcf	___lldiv@divisor+3,f,c
  4876  002722  321B               	rrcf	___lldiv@divisor+2,f,c
  4877  002724  321A               	rrcf	___lldiv@divisor+1,f,c
  4878  002726  3219               	rrcf	___lldiv@divisor,f,c
  4879  002728  2E22               	decfsz	___lldiv@counter,f,c
  4880  00272A  D7E1               	goto	l4809
  4881  00272C                     l912:
  4882  00272C  C01E  F015         	movff	___lldiv@quotient,?___lldiv
  4883  002730  C01F  F016         	movff	___lldiv@quotient+1,?___lldiv+1
  4884  002734  C020  F017         	movff	___lldiv@quotient+2,?___lldiv+2
  4885  002738  C021  F018         	movff	___lldiv@quotient+3,?___lldiv+3
  4886  00273C  0012               	return	
  4887  00273E                     __end_of___lldiv:
  4888                           	opt stack 0
  4889                           tblptru	equ	0xFF8
  4890                           tblptrh	equ	0xFF7
  4891                           tblptrl	equ	0xFF6
  4892                           tablat	equ	0xFF5
  4893                           prodh	equ	0xFF4
  4894                           prodl	equ	0xFF3
  4895                           wreg	equ	0xFE8
  4896                           postinc1	equ	0xFE6
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           
  4904 ;; *************** function ___fttol *****************
  4905 ;; Defined at:
  4906 ;;		line 44 in file "/opt/microchip/xc8/v1.30/sources/common/fttol.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  f1              3   64[COMRAM] float 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  lval            4    1[BANK0 ] unsigned long 
  4911 ;;  exp1            1    5[BANK0 ] unsigned char 
  4912 ;;  sign1           1    0[BANK0 ] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  4   64[COMRAM] long 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4922 ;;      Params:         4       0       0       0       0       0       0       0       0
  4923 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4924 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4925 ;;      Totals:         9       6       0       0       0       0       0       0       0
  4926 ;;Total ram usage:       15 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    3
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_sprintf
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text13
  4937  001EFC                     __ptext13:
  4938                           	opt stack 0
  4939  001EFC                     ___fttol:
  4940                           	opt stack 26
  4941                           
  4942                           ;incstack = 0
  4943  001EFC  C043  F045         	movff	___fttol@f1+2,??___fttol
  4944  001F00  6A46               	clrf	(??___fttol+1)& (0+255),c
  4945  001F02  6A47               	clrf	(??___fttol+2)& (0+255),c
  4946  001F04  3442               	rlcf	___fttol@f1+1,w,c
  4947  001F06  3645               	rlcf	??___fttol& (0+255),f,c
  4948  001F08  E301               	bnc	u4901
  4949  001F0A  8046               	bsf	(??___fttol+1)& (0+255),0,c
  4950  001F0C                     u4901:
  4951  001F0C  5045               	movf	??___fttol,w,c
  4952  001F0E  0100               	movlb	0	; () banked
  4953  001F10  0100               	movlb	0	; () banked
  4954  001F12  6F65               	movwf	___fttol@exp1& (0+255),b
  4955  001F14  0100               	movlb	0	; () banked
  4956  001F16  6765               	tstfsz	___fttol@exp1& (0+255),b
  4957  001F18  D001               	goto	l5747
  4958  001F1A  D04E               	goto	u4950
  4959  001F1C                     l5747:
  4960                           
  4961                           ; BSR set to: 0
  4962  001F1C  0E17               	movlw	23
  4963  001F1E  6E45               	movwf	??___fttol& (0+255),c
  4964  001F20  C041  F046         	movff	___fttol@f1,??___fttol+1
  4965  001F24  C042  F047         	movff	___fttol@f1+1,??___fttol+2
  4966  001F28  C043  F048         	movff	___fttol@f1+2,??___fttol+3
  4967  001F2C  2845               	incf	??___fttol,w,c
  4968  001F2E  6E49               	movwf	(??___fttol+4)& (0+255),c
  4969  001F30  D004               	goto	u4920
  4970  001F32                     u4925:
  4971  001F32  90D8               	bcf	status,0,c
  4972  001F34  3248               	rrcf	??___fttol+3,f,c
  4973  001F36  3247               	rrcf	??___fttol+2,f,c
  4974  001F38  3246               	rrcf	??___fttol+1,f,c
  4975  001F3A                     u4920:
  4976  001F3A  2E49               	decfsz	(??___fttol+4)& (0+255),f,c
  4977  001F3C  D7FA               	goto	u4925
  4978  001F3E  5046               	movf	??___fttol+1,w,c
  4979  001F40  0100               	movlb	0	; () banked
  4980  001F42  0100               	movlb	0	; () banked
  4981  001F44  6F60               	movwf	___fttol@sign1& (0+255),b
  4982                           
  4983                           ; BSR set to: 0
  4984  001F46  8E42               	bsf	___fttol@f1+1,7,c
  4985                           
  4986                           ; BSR set to: 0
  4987  001F48  0EFF               	movlw	255
  4988  001F4A  1641               	andwf	___fttol@f1,f,c
  4989  001F4C  0EFF               	movlw	255
  4990  001F4E  1642               	andwf	___fttol@f1+1,f,c
  4991  001F50  0E00               	movlw	0
  4992  001F52  1643               	andwf	___fttol@f1+2,f,c
  4993                           
  4994                           ; BSR set to: 0
  4995  001F54  5041               	movf	___fttol@f1,w,c
  4996  001F56  0100               	movlb	0	; () banked
  4997  001F58  0100               	movlb	0	; () banked
  4998  001F5A  6F61               	movwf	___fttol@lval& (0+255),b
  4999  001F5C  5042               	movf	___fttol@f1+1,w,c
  5000  001F5E  0100               	movlb	0	; () banked
  5001  001F60  6F62               	movwf	(___fttol@lval+1)& (0+255),b
  5002  001F62  5043               	movf	___fttol@f1+2,w,c
  5003  001F64  0100               	movlb	0	; () banked
  5004  001F66  6F63               	movwf	(___fttol@lval+2)& (0+255),b
  5005  001F68  0100               	movlb	0	; () banked
  5006  001F6A  6B64               	clrf	(___fttol@lval+3)& (0+255),b
  5007                           
  5008                           ; BSR set to: 0
  5009  001F6C  0E8E               	movlw	142
  5010  001F6E  0100               	movlb	0	; () banked
  5011  001F70  0100               	movlb	0	; () banked
  5012  001F72  5F65               	subwf	___fttol@exp1& (0+255),f,b
  5013                           
  5014                           ; BSR set to: 0
  5015  001F74  0100               	movlb	0	; () banked
  5016  001F76  0100               	movlb	0	; () banked
  5017  001F78  AF65               	btfss	___fttol@exp1& (0+255),7,b
  5018  001F7A  D019               	goto	l5769
  5019                           
  5020                           ; BSR set to: 0
  5021  001F7C  0100               	movlb	0	; () banked
  5022  001F7E  0100               	movlb	0	; () banked
  5023  001F80  5165               	movf	___fttol@exp1& (0+255),w,b
  5024  001F82  0A80               	xorlw	128
  5025  001F84  6E45               	movwf	??___fttol& (0+255),c
  5026  001F86  0EF1               	movlw	241
  5027  001F88  0A80               	xorlw	128
  5028  001F8A  5C45               	subwf	??___fttol,w,c
  5029  001F8C  A0D8               	btfss	status,0,c
  5030  001F8E  D014               	goto	u4950
  5031  001F90                     l5765:
  5032                           
  5033                           ; BSR set to: 0
  5034  001F90  0100               	movlb	0	; () banked
  5035  001F92  90D8               	bcf	status,0,c
  5036  001F94  0100               	movlb	0	; () banked
  5037  001F96  3364               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5038  001F98  0100               	movlb	0	; () banked
  5039  001F9A  3363               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5040  001F9C  0100               	movlb	0	; () banked
  5041  001F9E  3362               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5042  001FA0  0100               	movlb	0	; () banked
  5043  001FA2  3361               	rrcf	___fttol@lval& (0+255),f,b
  5044                           
  5045                           ; BSR set to: 0
  5046  001FA4  0100               	movlb	0	; () banked
  5047  001FA6  0100               	movlb	0	; () banked
  5048  001FA8  3F65               	incfsz	___fttol@exp1& (0+255),f,b
  5049  001FAA  D7F2               	goto	l5765
  5050  001FAC  D01F               	goto	l5779
  5051  001FAE                     l5769:
  5052                           
  5053                           ; BSR set to: 0
  5054  001FAE  0E17               	movlw	23
  5055  001FB0  0100               	movlb	0	; () banked
  5056  001FB2  0100               	movlb	0	; () banked
  5057  001FB4  6565               	cpfsgt	___fttol@exp1& (0+255),b
  5058  001FB6  D016               	goto	l5777
  5059  001FB8                     u4950:
  5060                           
  5061                           ; BSR set to: 0
  5062  001FB8  0E00               	movlw	0
  5063  001FBA  6E41               	movwf	?___fttol,c
  5064  001FBC  0E00               	movlw	0
  5065  001FBE  6E42               	movwf	?___fttol+1,c
  5066  001FC0  0E00               	movlw	0
  5067  001FC2  6E43               	movwf	?___fttol+2,c
  5068  001FC4  0E00               	movlw	0
  5069  001FC6  6E44               	movwf	?___fttol+3,c
  5070  001FC8  D02E               	goto	l868
  5071  001FCA                     l5775:
  5072                           
  5073                           ; BSR set to: 0
  5074  001FCA  0100               	movlb	0	; () banked
  5075  001FCC  90D8               	bcf	status,0,c
  5076  001FCE  0100               	movlb	0	; () banked
  5077  001FD0  3761               	rlcf	___fttol@lval& (0+255),f,b
  5078  001FD2  0100               	movlb	0	; () banked
  5079  001FD4  3762               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5080  001FD6  0100               	movlb	0	; () banked
  5081  001FD8  3763               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5082  001FDA  0100               	movlb	0	; () banked
  5083  001FDC  3764               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5084  001FDE  0100               	movlb	0	; () banked
  5085  001FE0  0100               	movlb	0	; () banked
  5086  001FE2  0765               	decf	___fttol@exp1& (0+255),f,b
  5087  001FE4                     l5777:
  5088                           
  5089                           ; BSR set to: 0
  5090  001FE4  0100               	movlb	0	; () banked
  5091  001FE6  0100               	movlb	0	; () banked
  5092  001FE8  6765               	tstfsz	___fttol@exp1& (0+255),b
  5093  001FEA  D7EF               	goto	l5775
  5094  001FEC                     l5779:
  5095                           
  5096                           ; BSR set to: 0
  5097  001FEC  0100               	movlb	0	; () banked
  5098  001FEE  0100               	movlb	0	; () banked
  5099  001FF0  5160               	movf	___fttol@sign1& (0+255),w,b
  5100  001FF2  B4D8               	btfsc	status,2,c
  5101  001FF4  D010               	goto	l5783
  5102                           
  5103                           ; BSR set to: 0
  5104  001FF6  0100               	movlb	0	; () banked
  5105  001FF8  0100               	movlb	0	; () banked
  5106  001FFA  1F64               	comf	(___fttol@lval+3)& (0+255),f,b
  5107  001FFC  0100               	movlb	0	; () banked
  5108  001FFE  1F63               	comf	(___fttol@lval+2)& (0+255),f,b
  5109  002000  0100               	movlb	0	; () banked
  5110  002002  1F62               	comf	(___fttol@lval+1)& (0+255),f,b
  5111  002004  0100               	movlb	0	; () banked
  5112  002006  6D61               	negf	___fttol@lval& (0+255),b
  5113  002008  0E00               	movlw	0
  5114  00200A  0100               	movlb	0	; () banked
  5115  00200C  2362               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5116  00200E  0100               	movlb	0	; () banked
  5117  002010  2363               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5118  002012  0100               	movlb	0	; () banked
  5119  002014  2364               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5120  002016                     l5783:
  5121                           
  5122                           ; BSR set to: 0
  5123  002016  C061  F041         	movff	___fttol@lval,?___fttol
  5124  00201A  C062  F042         	movff	___fttol@lval+1,?___fttol+1
  5125  00201E  C063  F043         	movff	___fttol@lval+2,?___fttol+2
  5126  002022  C064  F044         	movff	___fttol@lval+3,?___fttol+3
  5127  002026                     l868:
  5128                           
  5129                           ; BSR set to: 0
  5130  002026  0012               	return	
  5131  002028                     __end_of___fttol:
  5132                           	opt stack 0
  5133                           tblptru	equ	0xFF8
  5134                           tblptrh	equ	0xFF7
  5135                           tblptrl	equ	0xFF6
  5136                           tablat	equ	0xFF5
  5137                           prodh	equ	0xFF4
  5138                           prodl	equ	0xFF3
  5139                           wreg	equ	0xFE8
  5140                           postinc1	equ	0xFE6
  5141                           indf2	equ	0xFDF
  5142                           postinc2	equ	0xFDE
  5143                           postdec2	equ	0xFDD
  5144                           fsr2h	equ	0xFDA
  5145                           fsr2l	equ	0xFD9
  5146                           status	equ	0xFD8
  5147                           
  5148 ;; *************** function ___ftneg *****************
  5149 ;; Defined at:
  5150 ;;		line 15 in file "/opt/microchip/xc8/v1.30/sources/common/ftneg.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  f1              3   20[COMRAM] float 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  3   20[COMRAM] float 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5164 ;;      Params:         3       0       0       0       0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5167 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5168 ;;Total ram usage:        3 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    3
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_sprintf
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text14
  5179  002CD0                     __ptext14:
  5180                           	opt stack 0
  5181  002CD0                     ___ftneg:
  5182                           	opt stack 26
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;incstack = 0
  5186  002CD0  0E7F               	movlw	127
  5187  002CD2  1417               	andwf	___ftneg@f1+2,w,c
  5188  002CD4  1016               	iorwf	___ftneg@f1+1,w,c
  5189  002CD6  1015               	iorwf	___ftneg@f1,w,c
  5190  002CD8  B4D8               	btfsc	status,2,c
  5191  002CDA  D006               	goto	l858
  5192  002CDC  0E00               	movlw	0
  5193  002CDE  1A15               	xorwf	___ftneg@f1,f,c
  5194  002CE0  0E00               	movlw	0
  5195  002CE2  1A16               	xorwf	___ftneg@f1+1,f,c
  5196  002CE4  0E80               	movlw	128
  5197  002CE6  1A17               	xorwf	___ftneg@f1+2,f,c
  5198  002CE8                     l858:
  5199  002CE8  C015  F015         	movff	___ftneg@f1,?___ftneg
  5200  002CEC  C016  F016         	movff	___ftneg@f1+1,?___ftneg+1
  5201  002CF0  C017  F017         	movff	___ftneg@f1+2,?___ftneg+2
  5202  002CF4  0012               	return	
  5203  002CF6                     __end_of___ftneg:
  5204                           	opt stack 0
  5205                           tblptru	equ	0xFF8
  5206                           tblptrh	equ	0xFF7
  5207                           tblptrl	equ	0xFF6
  5208                           tablat	equ	0xFF5
  5209                           prodh	equ	0xFF4
  5210                           prodl	equ	0xFF3
  5211                           wreg	equ	0xFE8
  5212                           postinc1	equ	0xFE6
  5213                           indf2	equ	0xFDF
  5214                           postinc2	equ	0xFDE
  5215                           postdec2	equ	0xFDD
  5216                           fsr2h	equ	0xFDA
  5217                           fsr2l	equ	0xFD9
  5218                           status	equ	0xFD8
  5219                           
  5220 ;; *************** function ___ftge *****************
  5221 ;; Defined at:
  5222 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/ftge.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  ff1             3   20[COMRAM] float 
  5225 ;;  ff2             3   23[COMRAM] float 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;		None               void
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5237 ;;      Params:         6       0       0       0       0       0       0       0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5239 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5240 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5241 ;;Total ram usage:        9 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    3
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_sprintf
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text15
  5252  002628                     __ptext15:
  5253                           	opt stack 0
  5254  002628                     ___ftge:
  5255                           	opt stack 26
  5256                           
  5257                           ;incstack = 0
  5258  002628  AE17               	btfss	___ftge@ff1+2,7,c
  5259  00262A  D016               	goto	l4735
  5260  00262C  C015  F01B         	movff	___ftge@ff1,??___ftge
  5261  002630  C016  F01C         	movff	___ftge@ff1+1,??___ftge+1
  5262  002634  C017  F01D         	movff	___ftge@ff1+2,??___ftge+2
  5263  002638  1E1B               	comf	??___ftge,f,c
  5264  00263A  1E1C               	comf	??___ftge+1,f,c
  5265  00263C  1E1D               	comf	??___ftge+2,f,c
  5266  00263E  2A1B               	incf	??___ftge,f,c
  5267  002640  0E00               	movlw	0
  5268  002642  221C               	addwfc	??___ftge+1,f,c
  5269  002644  221D               	addwfc	??___ftge+2,f,c
  5270  002646  0E00               	movlw	0
  5271  002648  241B               	addwf	??___ftge,w,c
  5272  00264A  6E15               	movwf	___ftge@ff1,c
  5273  00264C  0E00               	movlw	0
  5274  00264E  201C               	addwfc	??___ftge+1,w,c
  5275  002650  6E16               	movwf	___ftge@ff1+1,c
  5276  002652  0E80               	movlw	128
  5277  002654  201D               	addwfc	??___ftge+2,w,c
  5278  002656  6E17               	movwf	___ftge@ff1+2,c
  5279  002658                     l4735:
  5280  002658  AE1A               	btfss	___ftge@ff2+2,7,c
  5281  00265A  D016               	goto	l4739
  5282  00265C  C018  F01B         	movff	___ftge@ff2,??___ftge
  5283  002660  C019  F01C         	movff	___ftge@ff2+1,??___ftge+1
  5284  002664  C01A  F01D         	movff	___ftge@ff2+2,??___ftge+2
  5285  002668  1E1B               	comf	??___ftge,f,c
  5286  00266A  1E1C               	comf	??___ftge+1,f,c
  5287  00266C  1E1D               	comf	??___ftge+2,f,c
  5288  00266E  2A1B               	incf	??___ftge,f,c
  5289  002670  0E00               	movlw	0
  5290  002672  221C               	addwfc	??___ftge+1,f,c
  5291  002674  221D               	addwfc	??___ftge+2,f,c
  5292  002676  0E00               	movlw	0
  5293  002678  241B               	addwf	??___ftge,w,c
  5294  00267A  6E18               	movwf	___ftge@ff2,c
  5295  00267C  0E00               	movlw	0
  5296  00267E  201C               	addwfc	??___ftge+1,w,c
  5297  002680  6E19               	movwf	___ftge@ff2+1,c
  5298  002682  0E80               	movlw	128
  5299  002684  201D               	addwfc	??___ftge+2,w,c
  5300  002686  6E1A               	movwf	___ftge@ff2+2,c
  5301  002688                     l4739:
  5302  002688  0E00               	movlw	0
  5303  00268A  1A15               	xorwf	___ftge@ff1,f,c
  5304  00268C  0E00               	movlw	0
  5305  00268E  1A16               	xorwf	___ftge@ff1+1,f,c
  5306  002690  0E80               	movlw	128
  5307  002692  1A17               	xorwf	___ftge@ff1+2,f,c
  5308  002694  0E00               	movlw	0
  5309  002696  1A18               	xorwf	___ftge@ff2,f,c
  5310  002698  0E00               	movlw	0
  5311  00269A  1A19               	xorwf	___ftge@ff2+1,f,c
  5312  00269C  0E80               	movlw	128
  5313  00269E  1A1A               	xorwf	___ftge@ff2+2,f,c
  5314  0026A0  5018               	movf	___ftge@ff2,w,c
  5315  0026A2  5C15               	subwf	___ftge@ff1,w,c
  5316  0026A4  5019               	movf	___ftge@ff2+1,w,c
  5317  0026A6  5816               	subwfb	___ftge@ff1+1,w,c
  5318  0026A8  501A               	movf	___ftge@ff2+2,w,c
  5319  0026AA  5817               	subwfb	___ftge@ff1+2,w,c
  5320  0026AC  B0D8               	btfsc	status,0,c
  5321  0026AE  D002               	goto	l4745
  5322  0026B0  90D8               	bcf	status,0,c
  5323  0026B2  D001               	goto	l842
  5324  0026B4                     l4745:
  5325  0026B4  80D8               	bsf	status,0,c
  5326  0026B6                     l842:
  5327  0026B6  0012               	return	
  5328  0026B8                     __end_of___ftge:
  5329                           	opt stack 0
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           wreg	equ	0xFE8
  5337                           postinc1	equ	0xFE6
  5338                           indf2	equ	0xFDF
  5339                           postinc2	equ	0xFDE
  5340                           postdec2	equ	0xFDD
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function ___asftsub *****************
  5346 ;; Defined at:
  5347 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/pic18/asftsub.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  f1p             2   46[COMRAM] PTR float 
  5350 ;;		 -> sprintf@fval(3), 
  5351 ;;  f2              3   48[COMRAM] float 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  3   46[COMRAM] float 
  5356 ;; Registers used:
  5357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5363 ;;      Params:         5       0       0       0       0       0       0       0       0
  5364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5366 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5367 ;;Total ram usage:        5 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    6
  5370 ;; This function calls:
  5371 ;;		___ftsub
  5372 ;; This function is called by:
  5373 ;;		_sprintf
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text16
  5378  002AC4                     __ptext16:
  5379                           	opt stack 0
  5380  002AC4                     ___asftsub:
  5381                           	opt stack 23
  5382                           
  5383                           ;	Return value of ___asftsub is never used
  5384                           
  5385                           ;incstack = 0
  5386  002AC4  C02F  FFD9         	movff	___asftsub@f1p,fsr2l
  5387  002AC8  C030  FFDA         	movff	___asftsub@f1p+1,fsr2h
  5388  002ACC  CFDE F029          	movff	postinc2,___ftsub@f1
  5389  002AD0  CFDE F02A          	movff	postinc2,___ftsub@f1+1
  5390  002AD4  CFDD F02B          	movff	postdec2,___ftsub@f1+2
  5391  002AD8  C031  F02C         	movff	___asftsub@f2,___ftsub@f2
  5392  002ADC  C032  F02D         	movff	___asftsub@f2+1,___ftsub@f2+1
  5393  002AE0  C033  F02E         	movff	___asftsub@f2+2,___ftsub@f2+2
  5394  002AE4  ECF6  F015         	call	___ftsub	;wreg free
  5395  002AE8  C02F  FFD9         	movff	___asftsub@f1p,fsr2l
  5396  002AEC  C030  FFDA         	movff	___asftsub@f1p+1,fsr2h
  5397  002AF0  C029  FFDE         	movff	?___ftsub,postinc2
  5398  002AF4  C02A  FFDE         	movff	?___ftsub+1,postinc2
  5399  002AF8  C02B  FFDD         	movff	?___ftsub+2,postdec2
  5400  002AFC  52DD               	movf	postdec2,f,c
  5401  002AFE  0012               	return	
  5402  002B00                     __end_of___asftsub:
  5403                           	opt stack 0
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           wreg	equ	0xFE8
  5411                           postinc1	equ	0xFE6
  5412                           indf2	equ	0xFDF
  5413                           postinc2	equ	0xFDE
  5414                           postdec2	equ	0xFDD
  5415                           fsr2h	equ	0xFDA
  5416                           fsr2l	equ	0xFD9
  5417                           status	equ	0xFD8
  5418                           
  5419 ;; *************** function ___ftsub *****************
  5420 ;; Defined at:
  5421 ;;		line 20 in file "/opt/microchip/xc8/v1.30/sources/common/ftsub.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  f1              3   40[COMRAM] float 
  5424 ;;  f2              3   43[COMRAM] float 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  3   40[COMRAM] float 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5436 ;;      Params:         6       0       0       0       0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5439 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5440 ;;Total ram usage:        6 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    5
  5443 ;; This function calls:
  5444 ;;		___ftadd
  5445 ;; This function is called by:
  5446 ;;		___asftsub
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text17
  5451  002BEC                     __ptext17:
  5452                           	opt stack 0
  5453  002BEC                     ___ftsub:
  5454                           	opt stack 23
  5455                           
  5456                           ;incstack = 0
  5457  002BEC  0E00               	movlw	0
  5458  002BEE  1A2C               	xorwf	___ftsub@f2,f,c
  5459  002BF0  0E00               	movlw	0
  5460  002BF2  1A2D               	xorwf	___ftsub@f2+1,f,c
  5461  002BF4  0E80               	movlw	128
  5462  002BF6  1A2E               	xorwf	___ftsub@f2+2,f,c
  5463  002BF8  C029  F01D         	movff	___ftsub@f1,___ftadd@f1
  5464  002BFC  C02A  F01E         	movff	___ftsub@f1+1,___ftadd@f1+1
  5465  002C00  C02B  F01F         	movff	___ftsub@f1+2,___ftadd@f1+2
  5466  002C04  C02C  F020         	movff	___ftsub@f2,___ftadd@f2
  5467  002C08  C02D  F021         	movff	___ftsub@f2+1,___ftadd@f2+1
  5468  002C0C  C02E  F022         	movff	___ftsub@f2+2,___ftadd@f2+2
  5469  002C10  EC05  F00E         	call	___ftadd	;wreg free
  5470  002C14  C01D  F029         	movff	?___ftadd,?___ftsub
  5471  002C18  C01E  F02A         	movff	?___ftadd+1,?___ftsub+1
  5472  002C1C  C01F  F02B         	movff	?___ftadd+2,?___ftsub+2
  5473  002C20  0012               	return	
  5474  002C22                     __end_of___ftsub:
  5475                           	opt stack 0
  5476                           tblptru	equ	0xFF8
  5477                           tblptrh	equ	0xFF7
  5478                           tblptrl	equ	0xFF6
  5479                           tablat	equ	0xFF5
  5480                           prodh	equ	0xFF4
  5481                           prodl	equ	0xFF3
  5482                           wreg	equ	0xFE8
  5483                           postinc1	equ	0xFE6
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function ___asftmul *****************
  5492 ;; Defined at:
  5493 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/pic18/asftmul.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  f1p             2   57[COMRAM] PTR float 
  5496 ;;		 -> sprintf@integ(3), 
  5497 ;;  f2              3   59[COMRAM] float 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  3   57[COMRAM] float 
  5502 ;; Registers used:
  5503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5509 ;;      Params:         5       0       0       0       0       0       0       0       0
  5510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5512 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5513 ;;Total ram usage:        5 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    5
  5516 ;; This function calls:
  5517 ;;		___ftmul
  5518 ;; This function is called by:
  5519 ;;		_sprintf
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text18
  5524  002B00                     __ptext18:
  5525                           	opt stack 0
  5526  002B00                     ___asftmul:
  5527                           	opt stack 24
  5528                           
  5529                           ;	Return value of ___asftmul is never used
  5530                           
  5531                           ;incstack = 0
  5532  002B00  C03A  FFD9         	movff	___asftmul@f1p,fsr2l
  5533  002B04  C03B  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5534  002B08  CFDE F02B          	movff	postinc2,___ftmul@f1
  5535  002B0C  CFDE F02C          	movff	postinc2,___ftmul@f1+1
  5536  002B10  CFDD F02D          	movff	postdec2,___ftmul@f1+2
  5537  002B14  C03C  F02E         	movff	___asftmul@f2,___ftmul@f2
  5538  002B18  C03D  F02F         	movff	___asftmul@f2+1,___ftmul@f2+1
  5539  002B1C  C03E  F030         	movff	___asftmul@f2+2,___ftmul@f2+2
  5540  002B20  EC96  F010         	call	___ftmul	;wreg free
  5541  002B24  C03A  FFD9         	movff	___asftmul@f1p,fsr2l
  5542  002B28  C03B  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5543  002B2C  C02B  FFDE         	movff	?___ftmul,postinc2
  5544  002B30  C02C  FFDE         	movff	?___ftmul+1,postinc2
  5545  002B34  C02D  FFDD         	movff	?___ftmul+2,postdec2
  5546  002B38  52DD               	movf	postdec2,f,c
  5547  002B3A  0012               	return	
  5548  002B3C                     __end_of___asftmul:
  5549                           	opt stack 0
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           prodh	equ	0xFF4
  5555                           prodl	equ	0xFF3
  5556                           wreg	equ	0xFE8
  5557                           postinc1	equ	0xFE6
  5558                           indf2	equ	0xFDF
  5559                           postinc2	equ	0xFDE
  5560                           postdec2	equ	0xFDD
  5561                           fsr2h	equ	0xFDA
  5562                           fsr2l	equ	0xFD9
  5563                           status	equ	0xFD8
  5564                           
  5565 ;; *************** function ___asftadd *****************
  5566 ;; Defined at:
  5567 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/pic18/asftadd.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  f1p             2   67[COMRAM] PTR float 
  5570 ;;		 -> sprintf@fval(3), 
  5571 ;;  f2              3   69[COMRAM] float 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  3   67[COMRAM] float 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5583 ;;      Params:         5       0       0       0       0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5586 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5587 ;;Total ram usage:        5 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    5
  5590 ;; This function calls:
  5591 ;;		___ftadd
  5592 ;; This function is called by:
  5593 ;;		_sprintf
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text19
  5598  002B3C                     __ptext19:
  5599                           	opt stack 0
  5600  002B3C                     ___asftadd:
  5601                           	opt stack 24
  5602                           
  5603                           ;	Return value of ___asftadd is never used
  5604                           
  5605                           ;incstack = 0
  5606  002B3C  C044  FFD9         	movff	___asftadd@f1p,fsr2l
  5607  002B40  C045  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5608  002B44  CFDE F01D          	movff	postinc2,___ftadd@f1
  5609  002B48  CFDE F01E          	movff	postinc2,___ftadd@f1+1
  5610  002B4C  CFDD F01F          	movff	postdec2,___ftadd@f1+2
  5611  002B50  C046  F020         	movff	___asftadd@f2,___ftadd@f2
  5612  002B54  C047  F021         	movff	___asftadd@f2+1,___ftadd@f2+1
  5613  002B58  C048  F022         	movff	___asftadd@f2+2,___ftadd@f2+2
  5614  002B5C  EC05  F00E         	call	___ftadd	;wreg free
  5615  002B60  C044  FFD9         	movff	___asftadd@f1p,fsr2l
  5616  002B64  C045  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5617  002B68  C01D  FFDE         	movff	?___ftadd,postinc2
  5618  002B6C  C01E  FFDE         	movff	?___ftadd+1,postinc2
  5619  002B70  C01F  FFDD         	movff	?___ftadd+2,postdec2
  5620  002B74  52DD               	movf	postdec2,f,c
  5621  002B76  0012               	return	
  5622  002B78                     __end_of___asftadd:
  5623                           	opt stack 0
  5624                           tblptru	equ	0xFF8
  5625                           tblptrh	equ	0xFF7
  5626                           tblptrl	equ	0xFF6
  5627                           tablat	equ	0xFF5
  5628                           prodh	equ	0xFF4
  5629                           prodl	equ	0xFF3
  5630                           wreg	equ	0xFE8
  5631                           postinc1	equ	0xFE6
  5632                           indf2	equ	0xFDF
  5633                           postinc2	equ	0xFDE
  5634                           postdec2	equ	0xFDD
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function ___ftadd *****************
  5640 ;; Defined at:
  5641 ;;		line 86 in file "/opt/microchip/xc8/v1.30/sources/common/ftadd.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  f1              3   28[COMRAM] float 
  5644 ;;  f2              3   31[COMRAM] float 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  exp1            1   39[COMRAM] unsigned char 
  5647 ;;  exp2            1   38[COMRAM] unsigned char 
  5648 ;;  sign            1   37[COMRAM] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  3   28[COMRAM] float 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5658 ;;      Params:         6       0       0       0       0       0       0       0       0
  5659 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5660 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5661 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5662 ;;Total ram usage:       12 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    4
  5665 ;; This function calls:
  5666 ;;		___ftpack
  5667 ;; This function is called by:
  5668 ;;		___asftadd
  5669 ;;		___ftsub
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text20
  5674  001C0A                     __ptext20:
  5675                           	opt stack 0
  5676  001C0A                     ___ftadd:
  5677                           	opt stack 23
  5678                           
  5679                           ;incstack = 0
  5680  001C0A  C01F  F023         	movff	___ftadd@f1+2,??___ftadd
  5681  001C0E  6A24               	clrf	(??___ftadd+1)& (0+255),c
  5682  001C10  6A25               	clrf	(??___ftadd+2)& (0+255),c
  5683  001C12  341E               	rlcf	___ftadd@f1+1,w,c
  5684  001C14  3623               	rlcf	??___ftadd& (0+255),f,c
  5685  001C16  E301               	bnc	u3131
  5686  001C18  8024               	bsf	(??___ftadd+1)& (0+255),0,c
  5687  001C1A                     u3131:
  5688  001C1A  5023               	movf	??___ftadd,w,c
  5689  001C1C  6E28               	movwf	___ftadd@exp1,c
  5690  001C1E  C022  F023         	movff	___ftadd@f2+2,??___ftadd
  5691  001C22  6A24               	clrf	(??___ftadd+1)& (0+255),c
  5692  001C24  6A25               	clrf	(??___ftadd+2)& (0+255),c
  5693  001C26  3421               	rlcf	___ftadd@f2+1,w,c
  5694  001C28  3623               	rlcf	??___ftadd& (0+255),f,c
  5695  001C2A  E301               	bnc	u3141
  5696  001C2C  8024               	bsf	(??___ftadd+1)& (0+255),0,c
  5697  001C2E                     u3141:
  5698  001C2E  5023               	movf	??___ftadd,w,c
  5699  001C30  6E27               	movwf	___ftadd@exp2,c
  5700  001C32  5028               	movf	___ftadd@exp1,w,c
  5701  001C34  B4D8               	btfsc	status,2,c
  5702  001C36  D00C               	goto	l784
  5703  001C38  5027               	movf	___ftadd@exp2,w,c
  5704  001C3A  5C28               	subwf	___ftadd@exp1,w,c
  5705  001C3C  B0D8               	btfsc	status,0,c
  5706  001C3E  D00F               	goto	l4483
  5707  001C40  5028               	movf	___ftadd@exp1,w,c
  5708  001C42  0800               	sublw	0
  5709  001C44  2427               	addwf	___ftadd@exp2,w,c
  5710  001C46  6E23               	movwf	??___ftadd& (0+255),c
  5711  001C48  0E19               	movlw	25
  5712  001C4A  5C23               	subwf	??___ftadd,w,c
  5713  001C4C  A0D8               	btfss	status,0,c
  5714  001C4E  D007               	goto	l4483
  5715  001C50                     l784:
  5716  001C50  C020  F01D         	movff	___ftadd@f2,?___ftadd
  5717  001C54  C021  F01E         	movff	___ftadd@f2+1,?___ftadd+1
  5718  001C58  C022  F01F         	movff	___ftadd@f2+2,?___ftadd+2
  5719  001C5C  D0B1               	goto	l785
  5720  001C5E                     l4483:
  5721  001C5E  5027               	movf	___ftadd@exp2,w,c
  5722  001C60  B4D8               	btfsc	status,2,c
  5723  001C62  D00C               	goto	l788
  5724  001C64  5028               	movf	___ftadd@exp1,w,c
  5725  001C66  5C27               	subwf	___ftadd@exp2,w,c
  5726  001C68  B0D8               	btfsc	status,0,c
  5727  001C6A  D00F               	goto	l4489
  5728  001C6C  5027               	movf	___ftadd@exp2,w,c
  5729  001C6E  0800               	sublw	0
  5730  001C70  2428               	addwf	___ftadd@exp1,w,c
  5731  001C72  6E23               	movwf	??___ftadd& (0+255),c
  5732  001C74  0E19               	movlw	25
  5733  001C76  5C23               	subwf	??___ftadd,w,c
  5734  001C78  A0D8               	btfss	status,0,c
  5735  001C7A  D007               	goto	l4489
  5736  001C7C                     l788:
  5737  001C7C  C01D  F01D         	movff	___ftadd@f1,?___ftadd
  5738  001C80  C01E  F01E         	movff	___ftadd@f1+1,?___ftadd+1
  5739  001C84  C01F  F01F         	movff	___ftadd@f1+2,?___ftadd+2
  5740  001C88  D09B               	goto	l785
  5741  001C8A                     l4489:
  5742  001C8A  6E23               	movwf	??___ftadd& (0+255),c
  5743  001C8C  0E06               	movlw	6
  5744  001C8E  6E26               	movwf	___ftadd@sign,c
  5745  001C90  5023               	movf	??___ftadd& (0+255),w,c
  5746  001C92  BE1F               	btfsc	___ftadd@f1+2,7,c
  5747  001C94  8E26               	bsf	___ftadd@sign,7,c
  5748  001C96  BE22               	btfsc	___ftadd@f2+2,7,c
  5749  001C98  8C26               	bsf	___ftadd@sign,6,c
  5750  001C9A  8E1E               	bsf	___ftadd@f1+1,7,c
  5751  001C9C  0EFF               	movlw	255
  5752  001C9E  161D               	andwf	___ftadd@f1,f,c
  5753  001CA0  0EFF               	movlw	255
  5754  001CA2  161E               	andwf	___ftadd@f1+1,f,c
  5755  001CA4  0E00               	movlw	0
  5756  001CA6  161F               	andwf	___ftadd@f1+2,f,c
  5757  001CA8  8E21               	bsf	___ftadd@f2+1,7,c
  5758  001CAA  0EFF               	movlw	255
  5759  001CAC  1620               	andwf	___ftadd@f2,f,c
  5760  001CAE  0EFF               	movlw	255
  5761  001CB0  1621               	andwf	___ftadd@f2+1,f,c
  5762  001CB2  0E00               	movlw	0
  5763  001CB4  1622               	andwf	___ftadd@f2+2,f,c
  5764  001CB6  5027               	movf	___ftadd@exp2,w,c
  5765  001CB8  5C28               	subwf	___ftadd@exp1,w,c
  5766  001CBA  B0D8               	btfsc	status,0,c
  5767  001CBC  D01A               	goto	l4515
  5768  001CBE                     l4505:
  5769  001CBE  90D8               	bcf	status,0,c
  5770  001CC0  3620               	rlcf	___ftadd@f2,f,c
  5771  001CC2  3621               	rlcf	___ftadd@f2+1,f,c
  5772  001CC4  3622               	rlcf	___ftadd@f2+2,f,c
  5773  001CC6  0627               	decf	___ftadd@exp2,f,c
  5774  001CC8  5027               	movf	___ftadd@exp2,w,c
  5775  001CCA  1828               	xorwf	___ftadd@exp1,w,c
  5776  001CCC  B4D8               	btfsc	status,2,c
  5777  001CCE  D00D               	goto	l4513
  5778  001CD0  0626               	decf	___ftadd@sign,f,c
  5779  001CD2  C026  F023         	movff	___ftadd@sign,??___ftadd
  5780  001CD6  0E07               	movlw	7
  5781  001CD8  1623               	andwf	??___ftadd,f,c
  5782  001CDA  B4D8               	btfsc	status,2,c
  5783  001CDC  D006               	goto	l4513
  5784  001CDE  D7EF               	goto	l4505
  5785  001CE0                     l4511:
  5786  001CE0  90D8               	bcf	status,0,c
  5787  001CE2  321F               	rrcf	___ftadd@f1+2,f,c
  5788  001CE4  321E               	rrcf	___ftadd@f1+1,f,c
  5789  001CE6  321D               	rrcf	___ftadd@f1,f,c
  5790  001CE8  2A28               	incf	___ftadd@exp1,f,c
  5791  001CEA                     l4513:
  5792  001CEA  5027               	movf	___ftadd@exp2,w,c
  5793  001CEC  6228               	cpfseq	___ftadd@exp1,c
  5794  001CEE  D7F8               	goto	l4511
  5795  001CF0  D01D               	goto	l799
  5796  001CF2                     l4515:
  5797  001CF2  5028               	movf	___ftadd@exp1,w,c
  5798  001CF4  5C27               	subwf	___ftadd@exp2,w,c
  5799  001CF6  B0D8               	btfsc	status,0,c
  5800  001CF8  D019               	goto	l799
  5801  001CFA                     l4517:
  5802  001CFA  90D8               	bcf	status,0,c
  5803  001CFC  361D               	rlcf	___ftadd@f1,f,c
  5804  001CFE  361E               	rlcf	___ftadd@f1+1,f,c
  5805  001D00  361F               	rlcf	___ftadd@f1+2,f,c
  5806  001D02  0628               	decf	___ftadd@exp1,f,c
  5807  001D04  5027               	movf	___ftadd@exp2,w,c
  5808  001D06  1828               	xorwf	___ftadd@exp1,w,c
  5809  001D08  B4D8               	btfsc	status,2,c
  5810  001D0A  D00D               	goto	l4525
  5811  001D0C  0626               	decf	___ftadd@sign,f,c
  5812  001D0E  C026  F023         	movff	___ftadd@sign,??___ftadd
  5813  001D12  0E07               	movlw	7
  5814  001D14  1623               	andwf	??___ftadd,f,c
  5815  001D16  B4D8               	btfsc	status,2,c
  5816  001D18  D006               	goto	l4525
  5817  001D1A  D7EF               	goto	l4517
  5818  001D1C                     l4523:
  5819  001D1C  90D8               	bcf	status,0,c
  5820  001D1E  3222               	rrcf	___ftadd@f2+2,f,c
  5821  001D20  3221               	rrcf	___ftadd@f2+1,f,c
  5822  001D22  3220               	rrcf	___ftadd@f2,f,c
  5823  001D24  2A27               	incf	___ftadd@exp2,f,c
  5824  001D26                     l4525:
  5825  001D26  5027               	movf	___ftadd@exp2,w,c
  5826  001D28  6228               	cpfseq	___ftadd@exp1,c
  5827  001D2A  D7F8               	goto	l4523
  5828  001D2C                     l799:
  5829  001D2C  AE26               	btfss	___ftadd@sign,7,c
  5830  001D2E  D00C               	goto	l808
  5831  001D30  0EFF               	movlw	255
  5832  001D32  1A1D               	xorwf	___ftadd@f1,f,c
  5833  001D34  0EFF               	movlw	255
  5834  001D36  1A1E               	xorwf	___ftadd@f1+1,f,c
  5835  001D38  0EFF               	movlw	255
  5836  001D3A  1A1F               	xorwf	___ftadd@f1+2,f,c
  5837  001D3C  0E01               	movlw	1
  5838  001D3E  261D               	addwf	___ftadd@f1,f,c
  5839  001D40  0E00               	movlw	0
  5840  001D42  221E               	addwfc	___ftadd@f1+1,f,c
  5841  001D44  0E00               	movlw	0
  5842  001D46  221F               	addwfc	___ftadd@f1+2,f,c
  5843  001D48                     l808:
  5844  001D48  AC26               	btfss	___ftadd@sign,6,c
  5845  001D4A  D00C               	goto	l4531
  5846  001D4C  0EFF               	movlw	255
  5847  001D4E  1A20               	xorwf	___ftadd@f2,f,c
  5848  001D50  0EFF               	movlw	255
  5849  001D52  1A21               	xorwf	___ftadd@f2+1,f,c
  5850  001D54  0EFF               	movlw	255
  5851  001D56  1A22               	xorwf	___ftadd@f2+2,f,c
  5852  001D58  0E01               	movlw	1
  5853  001D5A  2620               	addwf	___ftadd@f2,f,c
  5854  001D5C  0E00               	movlw	0
  5855  001D5E  2221               	addwfc	___ftadd@f2+1,f,c
  5856  001D60  0E00               	movlw	0
  5857  001D62  2222               	addwfc	___ftadd@f2+2,f,c
  5858  001D64                     l4531:
  5859  001D64  6E23               	movwf	??___ftadd& (0+255),c
  5860  001D66  0E00               	movlw	0
  5861  001D68  6E26               	movwf	___ftadd@sign,c
  5862  001D6A  5023               	movf	??___ftadd& (0+255),w,c
  5863  001D6C  501D               	movf	___ftadd@f1,w,c
  5864  001D6E  2620               	addwf	___ftadd@f2,f,c
  5865  001D70  501E               	movf	___ftadd@f1+1,w,c
  5866  001D72  2221               	addwfc	___ftadd@f2+1,f,c
  5867  001D74  501F               	movf	___ftadd@f1+2,w,c
  5868  001D76  2222               	addwfc	___ftadd@f2+2,f,c
  5869  001D78  AE22               	btfss	___ftadd@f2+2,7,c
  5870  001D7A  D010               	goto	l4541
  5871  001D7C  0EFF               	movlw	255
  5872  001D7E  1A20               	xorwf	___ftadd@f2,f,c
  5873  001D80  0EFF               	movlw	255
  5874  001D82  1A21               	xorwf	___ftadd@f2+1,f,c
  5875  001D84  0EFF               	movlw	255
  5876  001D86  1A22               	xorwf	___ftadd@f2+2,f,c
  5877  001D88  0E01               	movlw	1
  5878  001D8A  2620               	addwf	___ftadd@f2,f,c
  5879  001D8C  0E00               	movlw	0
  5880  001D8E  2221               	addwfc	___ftadd@f2+1,f,c
  5881  001D90  0E00               	movlw	0
  5882  001D92  2222               	addwfc	___ftadd@f2+2,f,c
  5883  001D94  6E23               	movwf	??___ftadd& (0+255),c
  5884  001D96  0E01               	movlw	1
  5885  001D98  6E26               	movwf	___ftadd@sign,c
  5886  001D9A  5023               	movf	??___ftadd& (0+255),w,c
  5887  001D9C                     l4541:
  5888  001D9C  C020  F015         	movff	___ftadd@f2,___ftpack@arg
  5889  001DA0  C021  F016         	movff	___ftadd@f2+1,___ftpack@arg+1
  5890  001DA4  C022  F017         	movff	___ftadd@f2+2,___ftpack@arg+2
  5891  001DA8  C028  F018         	movff	___ftadd@exp1,___ftpack@exp
  5892  001DAC  C026  F019         	movff	___ftadd@sign,___ftpack@sign
  5893  001DB0  ECD1  F011         	call	___ftpack	;wreg free
  5894  001DB4  C015  F01D         	movff	?___ftpack,?___ftadd
  5895  001DB8  C016  F01E         	movff	?___ftpack+1,?___ftadd+1
  5896  001DBC  C017  F01F         	movff	?___ftpack+2,?___ftadd+2
  5897  001DC0                     l785:
  5898  001DC0  0012               	return	
  5899  001DC2                     __end_of___ftadd:
  5900                           	opt stack 0
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           prodh	equ	0xFF4
  5906                           prodl	equ	0xFF3
  5907                           wreg	equ	0xFE8
  5908                           postinc1	equ	0xFE6
  5909                           indf2	equ	0xFDF
  5910                           postinc2	equ	0xFDE
  5911                           postdec2	equ	0xFDD
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function _setupMCU *****************
  5917 ;; Defined at:
  5918 ;;		line 44 in file "sensor_temp_adc_comm_main.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;		None
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;		None               void
  5925 ;; Registers used:
  5926 ;;		wreg, status,2
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    3
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_main
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text21
  5947  002C22                     __ptext21:
  5948                           	opt stack 0
  5949  002C22                     _setupMCU:
  5950                           	opt stack 27
  5951                           
  5952                           ;sensor_temp_adc_comm_main.c: 47: CMCONbits.CM2 = 1;
  5953                           
  5954                           ;incstack = 0
  5955  002C22  84B4               	bsf	4020,2,c	;volatile
  5956                           
  5957                           ;sensor_temp_adc_comm_main.c: 48: CMCONbits.CM1 = 1;
  5958  002C24  82B4               	bsf	4020,1,c	;volatile
  5959                           
  5960                           ;sensor_temp_adc_comm_main.c: 49: CMCONbits.CM0 = 1;
  5961  002C26  80B4               	bsf	4020,0,c	;volatile
  5962                           
  5963                           ;sensor_temp_adc_comm_main.c: 50: TRISB = 0;
  5964  002C28  0E00               	movlw	0
  5965  002C2A  6E93               	movwf	3987,c	;volatile
  5966                           
  5967                           ;sensor_temp_adc_comm_main.c: 51: TRISAbits.RA0 = 1;
  5968  002C2C  8092               	bsf	3986,0,c	;volatile
  5969                           
  5970                           ;sensor_temp_adc_comm_main.c: 52: TRISAbits.RA1 = 1;
  5971  002C2E  8292               	bsf	3986,1,c	;volatile
  5972                           
  5973                           ;sensor_temp_adc_comm_main.c: 53: TRISAbits.RA2 = 1;
  5974  002C30  8492               	bsf	3986,2,c	;volatile
  5975                           
  5976                           ;sensor_temp_adc_comm_main.c: 56: ADCON0 = 0b00000001;
  5977  002C32  0E01               	movlw	1
  5978  002C34  6EC2               	movwf	4034,c	;volatile
  5979                           
  5980                           ;sensor_temp_adc_comm_main.c: 57: ADCON0bits.ADON = 1;
  5981  002C36  80C2               	bsf	4034,0,c	;volatile
  5982                           
  5983                           ;sensor_temp_adc_comm_main.c: 59: ADCON1 = 0b00001100;
  5984  002C38  0E0C               	movlw	12
  5985  002C3A  6EC1               	movwf	4033,c	;volatile
  5986                           
  5987                           ;sensor_temp_adc_comm_main.c: 62: TRISCbits.RC6 = 0;
  5988  002C3C  9C94               	bcf	3988,6,c	;volatile
  5989                           
  5990                           ;sensor_temp_adc_comm_main.c: 63: TRISCbits.RC7 = 1;
  5991  002C3E  8E94               	bsf	3988,7,c	;volatile
  5992                           
  5993                           ;sensor_temp_adc_comm_main.c: 64: RCSTAbits.SPEN = 1;
  5994  002C40  8EAB               	bsf	4011,7,c	;volatile
  5995                           
  5996                           ;sensor_temp_adc_comm_main.c: 66: RCIF = 0;
  5997  002C42  9A9E               	bcf	3998,5,c	;volatile
  5998                           
  5999                           ;sensor_temp_adc_comm_main.c: 67: RCIP = 0;
  6000  002C44  9A9F               	bcf	3999,5,c	;volatile
  6001                           
  6002                           ;sensor_temp_adc_comm_main.c: 68: RCIE = 1;
  6003  002C46  8A9D               	bsf	3997,5,c	;volatile
  6004                           
  6005                           ;sensor_temp_adc_comm_main.c: 69: PEIE = 1;
  6006  002C48  8CF2               	bsf	intcon,6,c	;volatile
  6007                           
  6008                           ;sensor_temp_adc_comm_main.c: 70: (INTCONbits.GIE = 1);
  6009  002C4A  8EF2               	bsf	intcon,7,c	;volatile
  6010  002C4C  0012               	return	
  6011  002C4E                     __end_of_setupMCU:
  6012                           	opt stack 0
  6013                           tblptru	equ	0xFF8
  6014                           tblptrh	equ	0xFF7
  6015                           tblptrl	equ	0xFF6
  6016                           tablat	equ	0xFF5
  6017                           prodh	equ	0xFF4
  6018                           prodl	equ	0xFF3
  6019                           intcon	equ	0xFF2
  6020                           wreg	equ	0xFE8
  6021                           postinc1	equ	0xFE6
  6022                           indf2	equ	0xFDF
  6023                           postinc2	equ	0xFDE
  6024                           postdec2	equ	0xFDD
  6025                           fsr2h	equ	0xFDA
  6026                           fsr2l	equ	0xFD9
  6027                           status	equ	0xFD8
  6028                           
  6029 ;; *************** function _putsUSART *****************
  6030 ;; Defined at:
  6031 ;;		line 14 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uputs.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  data            2   21[COMRAM] PTR unsigned char 
  6034 ;;		 -> NULL(0), STR_5(3), STR_1(9), main@buffer(6), 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;		None               void
  6039 ;; Registers used:
  6040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6046 ;;      Params:         2       0       0       0       0       0       0       0       0
  6047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6048 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6049 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6050 ;;Total ram usage:        4 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    4
  6053 ;; This function calls:
  6054 ;;		_WriteUSART
  6055 ;; This function is called by:
  6056 ;;		_main
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text22
  6061  0028D6                     __ptext22:
  6062                           	opt stack 0
  6063  0028D6                     _putsUSART:
  6064                           	opt stack 26
  6065  0028D6                     l288:
  6066  0028D6  A2AC               	btfss	4012,1,c	;volatile
  6067  0028D8  D7FE               	goto	l288
  6068  0028DA  C016  FFF6         	movff	putsUSART@data,tblptrl
  6069  0028DE  C017  FFF7         	movff	putsUSART@data+1,tblptrh
  6070  0028E2  6AF8               	clrf	tblptru,c
  6071  0028E4  0E07               	movlw	(high __ramtop+-1)
  6072  0028E6  64F7               	cpfsgt	tblptrh,c
  6073  0028E8  D003               	bra	u2107
  6074  0028EA  0008               	tblrd		*
  6075  0028EC  50F5               	movf	tablat,w,c
  6076  0028EE  D005               	bra	u2100
  6077  0028F0                     u2107:
  6078  0028F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6079  0028F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6080  0028F8  50EF               	movf	indf0,w,c
  6081  0028FA                     u2100:
  6082  0028FA  ECB6  F016         	call	_WriteUSART
  6083  0028FE  5016               	movf	putsUSART@data,w,c
  6084  002900  6E18               	movwf	??_putsUSART& (0+255),c
  6085  002902  5017               	movf	putsUSART@data+1,w,c
  6086  002904  6E19               	movwf	(??_putsUSART+1)& (0+255),c
  6087  002906  4A16               	infsnz	putsUSART@data,f,c
  6088  002908  2A17               	incf	putsUSART@data+1,f,c
  6089  00290A  C018  FFF6         	movff	??_putsUSART,tblptrl
  6090  00290E  C019  FFF7         	movff	??_putsUSART+1,tblptrh
  6091  002912  6AF8               	clrf	tblptru,c
  6092  002914  0E07               	movlw	(high __ramtop+-1)
  6093  002916  64F7               	cpfsgt	tblptrh,c
  6094  002918  D003               	bra	u2117
  6095  00291A  0008               	tblrd		*
  6096  00291C  50F5               	movf	tablat,w,c
  6097  00291E  D005               	bra	u2110
  6098  002920                     u2117:
  6099  002920  CFF6 FFE9          	movff	tblptrl,fsr0l
  6100  002924  CFF7 FFEA          	movff	tblptrh,fsr0h
  6101  002928  50EF               	movf	indf0,w,c
  6102  00292A                     u2110:
  6103  00292A  0900               	iorlw	0
  6104  00292C  B4D8               	btfsc	status,2,c
  6105  00292E  0012               	return	
  6106  002930  D7D2               	goto	l288
  6107  002932                     __end_of_putsUSART:
  6108                           	opt stack 0
  6109                           tblptru	equ	0xFF8
  6110                           tblptrh	equ	0xFF7
  6111                           tblptrl	equ	0xFF6
  6112                           tablat	equ	0xFF5
  6113                           prodh	equ	0xFF4
  6114                           prodl	equ	0xFF3
  6115                           intcon	equ	0xFF2
  6116                           indf0	equ	0xFEF
  6117                           fsr0h	equ	0xFEA
  6118                           fsr0l	equ	0xFE9
  6119                           wreg	equ	0xFE8
  6120                           postinc1	equ	0xFE6
  6121                           indf2	equ	0xFDF
  6122                           postinc2	equ	0xFDE
  6123                           postdec2	equ	0xFDD
  6124                           fsr2h	equ	0xFDA
  6125                           fsr2l	equ	0xFD9
  6126                           status	equ	0xFD8
  6127                           
  6128 ;; *************** function _WriteUSART *****************
  6129 ;; Defined at:
  6130 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  data            1    wreg     unsigned char 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  data            1   20[COMRAM] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;		None               void
  6137 ;; Registers used:
  6138 ;;		wreg
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0
  6145 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6147 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6148 ;;Total ram usage:        1 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    3
  6151 ;; This function calls:
  6152 ;;		Nothing
  6153 ;; This function is called by:
  6154 ;;		_putsUSART
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           	psect	text23
  6159  002D6C                     __ptext23:
  6160                           	opt stack 0
  6161  002D6C                     _WriteUSART:
  6162                           	opt stack 26
  6163                           
  6164                           ;incstack = 0
  6165                           ;WriteUSART@data stored from wreg
  6166  002D6C  CFE8 F015          	movff	wreg,WriteUSART@data
  6167  002D70  ACAC               	btfss	4012,6,c	;volatile
  6168  002D72  D003               	goto	l4407
  6169  002D74  90AC               	bcf	4012,0,c	;volatile
  6170  002D76  B24A               	btfsc	_USART_Status,1,c
  6171  002D78  80AC               	bsf	4012,0,c	;volatile
  6172  002D7A                     l4407:
  6173  002D7A  C015  FFAD         	movff	WriteUSART@data,4013	;volatile
  6174  002D7E  0012               	return	
  6175  002D80                     __end_of_WriteUSART:
  6176                           	opt stack 0
  6177                           tblptru	equ	0xFF8
  6178                           tblptrh	equ	0xFF7
  6179                           tblptrl	equ	0xFF6
  6180                           tablat	equ	0xFF5
  6181                           prodh	equ	0xFF4
  6182                           prodl	equ	0xFF3
  6183                           intcon	equ	0xFF2
  6184                           indf0	equ	0xFEF
  6185                           fsr0h	equ	0xFEA
  6186                           fsr0l	equ	0xFE9
  6187                           wreg	equ	0xFE8
  6188                           postinc1	equ	0xFE6
  6189                           indf2	equ	0xFDF
  6190                           postinc2	equ	0xFDE
  6191                           postdec2	equ	0xFDD
  6192                           fsr2h	equ	0xFDA
  6193                           fsr2l	equ	0xFD9
  6194                           status	equ	0xFD8
  6195                           
  6196 ;; *************** function _putrsXLCD *****************
  6197 ;; Defined at:
  6198 ;;		line 16 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/putrxlcd.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  buffer          2   21[COMRAM] PTR const unsigned char 
  6201 ;;		 -> NULL(0), STR_3(2), STR_2(7), main@buffer(6), 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;		None               void
  6206 ;; Registers used:
  6207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6213 ;;      Params:         2       0       0       0       0       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6216 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6217 ;;Total ram usage:        2 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    5
  6220 ;; This function calls:
  6221 ;;		_BusyXLCD
  6222 ;;		_WriteDataXLCD
  6223 ;; This function is called by:
  6224 ;;		_main
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text24
  6229  002932                     __ptext24:
  6230                           	opt stack 0
  6231  002932                     _putrsXLCD:
  6232                           	opt stack 25
  6233                           
  6234                           ;incstack = 0
  6235  002932  D019               	goto	l3909
  6236  002934                     l3903:
  6237  002934  ECD9  F015         	call	_BusyXLCD	;wreg free
  6238  002938  0900               	iorlw	0
  6239  00293A  A4D8               	btfss	status,2,c
  6240  00293C  D7FB               	goto	l3903
  6241  00293E  C016  FFF6         	movff	putrsXLCD@buffer,tblptrl
  6242  002942  C017  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  6243  002946  6AF8               	clrf	tblptru,c
  6244  002948  0E07               	movlw	(high __ramtop+-1)
  6245  00294A  64F7               	cpfsgt	tblptrh,c
  6246  00294C  D003               	bra	u2247
  6247  00294E  0008               	tblrd		*
  6248  002950  50F5               	movf	tablat,w,c
  6249  002952  D005               	bra	u2240
  6250  002954                     u2247:
  6251  002954  CFF6 FFE9          	movff	tblptrl,fsr0l
  6252  002958  CFF7 FFEA          	movff	tblptrh,fsr0h
  6253  00295C  50EF               	movf	indf0,w,c
  6254  00295E                     u2240:
  6255  00295E  EC22  F015         	call	_WriteDataXLCD
  6256  002962  4A16               	infsnz	putrsXLCD@buffer,f,c
  6257  002964  2A17               	incf	putrsXLCD@buffer+1,f,c
  6258  002966                     l3909:
  6259  002966  C016  FFF6         	movff	putrsXLCD@buffer,tblptrl
  6260  00296A  C017  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  6261  00296E  6AF8               	clrf	tblptru,c
  6262  002970  0E07               	movlw	(high __ramtop+-1)
  6263  002972  64F7               	cpfsgt	tblptrh,c
  6264  002974  D003               	bra	u2257
  6265  002976  0008               	tblrd		*
  6266  002978  50F5               	movf	tablat,w,c
  6267  00297A  D005               	bra	u2250
  6268  00297C                     u2257:
  6269  00297C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6270  002980  CFF7 FFEA          	movff	tblptrh,fsr0h
  6271  002984  50EF               	movf	indf0,w,c
  6272  002986                     u2250:
  6273  002986  0900               	iorlw	0
  6274  002988  B4D8               	btfsc	status,2,c
  6275  00298A  0012               	return	
  6276  00298C  D7D3               	goto	l3903
  6277  00298E                     __end_of_putrsXLCD:
  6278                           	opt stack 0
  6279                           tblptru	equ	0xFF8
  6280                           tblptrh	equ	0xFF7
  6281                           tblptrl	equ	0xFF6
  6282                           tablat	equ	0xFF5
  6283                           prodh	equ	0xFF4
  6284                           prodl	equ	0xFF3
  6285                           intcon	equ	0xFF2
  6286                           indf0	equ	0xFEF
  6287                           fsr0h	equ	0xFEA
  6288                           fsr0l	equ	0xFE9
  6289                           wreg	equ	0xFE8
  6290                           postinc1	equ	0xFE6
  6291                           indf2	equ	0xFDF
  6292                           postinc2	equ	0xFDE
  6293                           postdec2	equ	0xFDD
  6294                           fsr2h	equ	0xFDA
  6295                           fsr2l	equ	0xFD9
  6296                           status	equ	0xFD8
  6297                           
  6298 ;; *************** function _WriteDataXLCD *****************
  6299 ;; Defined at:
  6300 ;;		line 16 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/writdata.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;  data            1    wreg     unsigned char 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;  data            1   20[COMRAM] unsigned char 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;		None               void
  6307 ;; Registers used:
  6308 ;;		wreg, status,2, status,0, cstack
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6314 ;;      Params:         0       0       0       0       0       0       0       0       0
  6315 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6317 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6318 ;;Total ram usage:        1 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    4
  6321 ;; This function calls:
  6322 ;;		_DelayFor18TCY
  6323 ;; This function is called by:
  6324 ;;		_putrsXLCD
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text25
  6329  002A44                     __ptext25:
  6330                           	opt stack 0
  6331  002A44                     _WriteDataXLCD:
  6332                           	opt stack 25
  6333                           
  6334                           ;incstack = 0
  6335                           ;WriteDataXLCD@data stored from wreg
  6336  002A44  CFE8 F015          	movff	wreg,WriteDataXLCD@data
  6337  002A48  0EF0               	movlw	240
  6338  002A4A  1693               	andwf	3987,f,c	;volatile
  6339  002A4C  0EF0               	movlw	240
  6340  002A4E  1681               	andwf	3969,f,c	;volatile
  6341  002A50  3815               	swapf	WriteDataXLCD@data,w,c
  6342  002A52  0B0F               	andlw	15
  6343  002A54  0B0F               	andlw	15
  6344  002A56  1281               	iorwf	3969,f,c	;volatile
  6345  002A58  8A8A               	bsf	3978,5,c	;volatile
  6346  002A5A  9C8A               	bcf	3978,6,c	;volatile
  6347  002A5C  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6348  002A60  888A               	bsf	3978,4,c	;volatile
  6349  002A62  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6350  002A66  988A               	bcf	3978,4,c	;volatile
  6351  002A68  0EF0               	movlw	240
  6352  002A6A  1681               	andwf	3969,f,c	;volatile
  6353  002A6C  5015               	movf	WriteDataXLCD@data,w,c
  6354  002A6E  0B0F               	andlw	15
  6355  002A70  1281               	iorwf	3969,f,c	;volatile
  6356  002A72  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6357  002A76  888A               	bsf	3978,4,c	;volatile
  6358  002A78  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6359  002A7C  988A               	bcf	3978,4,c	;volatile
  6360  002A7E  0E0F               	movlw	15
  6361  002A80  1293               	iorwf	3987,f,c	;volatile
  6362  002A82  0012               	return	
  6363  002A84                     __end_of_WriteDataXLCD:
  6364                           	opt stack 0
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           indf0	equ	0xFEF
  6373                           fsr0h	equ	0xFEA
  6374                           fsr0l	equ	0xFE9
  6375                           wreg	equ	0xFE8
  6376                           postinc1	equ	0xFE6
  6377                           indf2	equ	0xFDF
  6378                           postinc2	equ	0xFDE
  6379                           postdec2	equ	0xFDD
  6380                           fsr2h	equ	0xFDA
  6381                           fsr2l	equ	0xFD9
  6382                           status	equ	0xFD8
  6383                           
  6384 ;; *************** function ___lwtoft *****************
  6385 ;; Defined at:
  6386 ;;		line 28 in file "/opt/microchip/xc8/v1.30/sources/common/lwtoft.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  c               2   28[COMRAM] unsigned int 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  3   28[COMRAM] float 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6400 ;;      Params:         3       0       0       0       0       0       0       0       0
  6401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6402 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6403 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6404 ;;Total ram usage:        5 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:    4
  6407 ;; This function calls:
  6408 ;;		___ftpack
  6409 ;; This function is called by:
  6410 ;;		_main
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text26
  6415  002C4E                     __ptext26:
  6416                           	opt stack 0
  6417  002C4E                     ___lwtoft:
  6418                           	opt stack 26
  6419                           
  6420                           ;incstack = 0
  6421  002C4E  C01D  F015         	movff	___lwtoft@c,___ftpack@arg
  6422  002C52  C01E  F016         	movff	___lwtoft@c+1,___ftpack@arg+1
  6423  002C56  6A17               	clrf	___ftpack@arg+2,c
  6424  002C58  6E20               	movwf	??___lwtoft& (0+255),c
  6425  002C5A  0E8E               	movlw	142
  6426  002C5C  6E18               	movwf	___ftpack@exp,c
  6427  002C5E  5020               	movf	??___lwtoft& (0+255),w,c
  6428  002C60  6E21               	movwf	(??___lwtoft+1)& (0+255),c
  6429  002C62  0E00               	movlw	0
  6430  002C64  6E19               	movwf	___ftpack@sign,c
  6431  002C66  5021               	movf	(??___lwtoft+1)& (0+255),w,c
  6432  002C68  ECD1  F011         	call	___ftpack	;wreg free
  6433  002C6C  C015  F01D         	movff	?___ftpack,?___lwtoft
  6434  002C70  C016  F01E         	movff	?___ftpack+1,?___lwtoft+1
  6435  002C74  C017  F01F         	movff	?___ftpack+2,?___lwtoft+2
  6436  002C78  0012               	return	
  6437  002C7A                     __end_of___lwtoft:
  6438                           	opt stack 0
  6439                           tblptru	equ	0xFF8
  6440                           tblptrh	equ	0xFF7
  6441                           tblptrl	equ	0xFF6
  6442                           tablat	equ	0xFF5
  6443                           prodh	equ	0xFF4
  6444                           prodl	equ	0xFF3
  6445                           intcon	equ	0xFF2
  6446                           indf0	equ	0xFEF
  6447                           fsr0h	equ	0xFEA
  6448                           fsr0l	equ	0xFE9
  6449                           wreg	equ	0xFE8
  6450                           postinc1	equ	0xFE6
  6451                           indf2	equ	0xFDF
  6452                           postinc2	equ	0xFDE
  6453                           postdec2	equ	0xFDD
  6454                           fsr2h	equ	0xFDA
  6455                           fsr2l	equ	0xFD9
  6456                           status	equ	0xFD8
  6457                           
  6458 ;; *************** function ___ftdiv *****************
  6459 ;; Defined at:
  6460 ;;		line 49 in file "/opt/microchip/xc8/v1.30/sources/common/ftdiv.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  f1              3   57[COMRAM] float 
  6463 ;;  f2              3   60[COMRAM] float 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  f3              3   67[COMRAM] float 
  6466 ;;  sign            1   71[COMRAM] unsigned char 
  6467 ;;  exp             1   70[COMRAM] unsigned char 
  6468 ;;  cntr            1   66[COMRAM] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  3   57[COMRAM] float 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6478 ;;      Params:         6       0       0       0       0       0       0       0       0
  6479 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6480 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6481 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6482 ;;Total ram usage:       15 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    4
  6485 ;; This function calls:
  6486 ;;		___ftpack
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text27
  6493  002218                     __ptext27:
  6494                           	opt stack 0
  6495  002218                     ___ftdiv:
  6496                           	opt stack 26
  6497                           
  6498                           ;incstack = 0
  6499  002218  C03C  F040         	movff	___ftdiv@f1+2,??___ftdiv
  6500  00221C  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  6501  00221E  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  6502  002220  343B               	rlcf	___ftdiv@f1+1,w,c
  6503  002222  3640               	rlcf	??___ftdiv& (0+255),f,c
  6504  002224  E301               	bnc	u3341
  6505  002226  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  6506  002228                     u3341:
  6507  002228  5040               	movf	??___ftdiv,w,c
  6508  00222A  6E47               	movwf	___ftdiv@exp,c
  6509  00222C  6647               	tstfsz	___ftdiv@exp& (0+255),c
  6510  00222E  D001               	goto	l4551
  6511  002230  D00C               	goto	u3370
  6512  002232                     l4551:
  6513  002232  C03F  F040         	movff	___ftdiv@f2+2,??___ftdiv
  6514  002236  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  6515  002238  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  6516  00223A  343E               	rlcf	___ftdiv@f2+1,w,c
  6517  00223C  3640               	rlcf	??___ftdiv& (0+255),f,c
  6518  00223E  E301               	bnc	u3361
  6519  002240  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  6520  002242                     u3361:
  6521  002242  5040               	movf	??___ftdiv,w,c
  6522  002244  6E48               	movwf	___ftdiv@sign,c
  6523  002246  6648               	tstfsz	___ftdiv@sign& (0+255),c
  6524  002248  D007               	goto	l4557
  6525  00224A                     u3370:
  6526  00224A  0E00               	movlw	0
  6527  00224C  6E3A               	movwf	?___ftdiv,c
  6528  00224E  0E00               	movlw	0
  6529  002250  6E3B               	movwf	?___ftdiv+1,c
  6530  002252  0E00               	movlw	0
  6531  002254  6E3C               	movwf	?___ftdiv+2,c
  6532  002256  D04C               	goto	l816
  6533  002258                     l4557:
  6534  002258  0E00               	movlw	0
  6535  00225A  6E44               	movwf	___ftdiv@f3,c
  6536  00225C  0E00               	movlw	0
  6537  00225E  6E45               	movwf	___ftdiv@f3+1,c
  6538  002260  0E00               	movlw	0
  6539  002262  6E46               	movwf	___ftdiv@f3+2,c
  6540  002264  5048               	movf	___ftdiv@sign,w,c
  6541  002266  0F89               	addlw	137
  6542  002268  5E47               	subwf	___ftdiv@exp,f,c
  6543  00226A  C03C  F048         	movff	___ftdiv@f1+2,___ftdiv@sign
  6544  00226E  503F               	movf	___ftdiv@f2+2,w,c
  6545  002270  1A48               	xorwf	___ftdiv@sign,f,c
  6546  002272  0E80               	movlw	128
  6547  002274  1648               	andwf	___ftdiv@sign,f,c
  6548  002276  8E3B               	bsf	___ftdiv@f1+1,7,c
  6549  002278  0EFF               	movlw	255
  6550  00227A  163A               	andwf	___ftdiv@f1,f,c
  6551  00227C  0EFF               	movlw	255
  6552  00227E  163B               	andwf	___ftdiv@f1+1,f,c
  6553  002280  0E00               	movlw	0
  6554  002282  163C               	andwf	___ftdiv@f1+2,f,c
  6555  002284  8E3E               	bsf	___ftdiv@f2+1,7,c
  6556  002286  0EFF               	movlw	255
  6557  002288  163D               	andwf	___ftdiv@f2,f,c
  6558  00228A  0EFF               	movlw	255
  6559  00228C  163E               	andwf	___ftdiv@f2+1,f,c
  6560  00228E  0E00               	movlw	0
  6561  002290  163F               	andwf	___ftdiv@f2+2,f,c
  6562  002292  6E40               	movwf	??___ftdiv& (0+255),c
  6563  002294  0E18               	movlw	24
  6564  002296  6E43               	movwf	___ftdiv@cntr,c
  6565  002298  5040               	movf	??___ftdiv& (0+255),w,c
  6566  00229A                     l818:
  6567  00229A  90D8               	bcf	status,0,c
  6568  00229C  3644               	rlcf	___ftdiv@f3,f,c
  6569  00229E  3645               	rlcf	___ftdiv@f3+1,f,c
  6570  0022A0  3646               	rlcf	___ftdiv@f3+2,f,c
  6571  0022A2  503D               	movf	___ftdiv@f2,w,c
  6572  0022A4  5C3A               	subwf	___ftdiv@f1,w,c
  6573  0022A6  503E               	movf	___ftdiv@f2+1,w,c
  6574  0022A8  583B               	subwfb	___ftdiv@f1+1,w,c
  6575  0022AA  503F               	movf	___ftdiv@f2+2,w,c
  6576  0022AC  583C               	subwfb	___ftdiv@f1+2,w,c
  6577  0022AE  A0D8               	btfss	status,0,c
  6578  0022B0  D007               	goto	l819
  6579  0022B2  503D               	movf	___ftdiv@f2,w,c
  6580  0022B4  5E3A               	subwf	___ftdiv@f1,f,c
  6581  0022B6  503E               	movf	___ftdiv@f2+1,w,c
  6582  0022B8  5A3B               	subwfb	___ftdiv@f1+1,f,c
  6583  0022BA  503F               	movf	___ftdiv@f2+2,w,c
  6584  0022BC  5A3C               	subwfb	___ftdiv@f1+2,f,c
  6585  0022BE  8044               	bsf	___ftdiv@f3,0,c
  6586  0022C0                     l819:
  6587  0022C0  90D8               	bcf	status,0,c
  6588  0022C2  363A               	rlcf	___ftdiv@f1,f,c
  6589  0022C4  363B               	rlcf	___ftdiv@f1+1,f,c
  6590  0022C6  363C               	rlcf	___ftdiv@f1+2,f,c
  6591  0022C8  2E43               	decfsz	___ftdiv@cntr,f,c
  6592  0022CA  D7E7               	goto	l818
  6593  0022CC  C044  F015         	movff	___ftdiv@f3,___ftpack@arg
  6594  0022D0  C045  F016         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6595  0022D4  C046  F017         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6596  0022D8  C047  F018         	movff	___ftdiv@exp,___ftpack@exp
  6597  0022DC  C048  F019         	movff	___ftdiv@sign,___ftpack@sign
  6598  0022E0  ECD1  F011         	call	___ftpack	;wreg free
  6599  0022E4  C015  F03A         	movff	?___ftpack,?___ftdiv
  6600  0022E8  C016  F03B         	movff	?___ftpack+1,?___ftdiv+1
  6601  0022EC  C017  F03C         	movff	?___ftpack+2,?___ftdiv+2
  6602  0022F0                     l816:
  6603  0022F0  0012               	return	
  6604  0022F2                     __end_of___ftdiv:
  6605                           	opt stack 0
  6606                           tblptru	equ	0xFF8
  6607                           tblptrh	equ	0xFF7
  6608                           tblptrl	equ	0xFF6
  6609                           tablat	equ	0xFF5
  6610                           prodh	equ	0xFF4
  6611                           prodl	equ	0xFF3
  6612                           intcon	equ	0xFF2
  6613                           indf0	equ	0xFEF
  6614                           fsr0h	equ	0xFEA
  6615                           fsr0l	equ	0xFE9
  6616                           wreg	equ	0xFE8
  6617                           postinc1	equ	0xFE6
  6618                           indf2	equ	0xFDF
  6619                           postinc2	equ	0xFDE
  6620                           postdec2	equ	0xFDD
  6621                           fsr2h	equ	0xFDA
  6622                           fsr2l	equ	0xFD9
  6623                           status	equ	0xFD8
  6624                           
  6625 ;; *************** function _ReadADC *****************
  6626 ;; Defined at:
  6627 ;;		line 24 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;		None
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;		None
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  2   20[COMRAM] int 
  6634 ;; Registers used:
  6635 ;;		wreg, status,2
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6641 ;;      Params:         2       0       0       0       0       0       0       0       0
  6642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6644 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6645 ;;Total ram usage:        2 bytes
  6646 ;; Hardware stack levels used:    1
  6647 ;; Hardware stack levels required when called:    3
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_main
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655                           	psect	text28
  6656  002DC4                     __ptext28:
  6657                           	opt stack 0
  6658  002DC4                     _ReadADC:
  6659                           	opt stack 27
  6660                           
  6661                           ;incstack = 0
  6662  002DC4  50C4               	movf	4036,w,c	;volatile
  6663  002DC6  6E16               	movwf	?_ReadADC+1,c
  6664  002DC8  50C3               	movf	4035,w,c	;volatile
  6665  002DCA  6E15               	movwf	?_ReadADC,c
  6666  002DCC  0012               	return	
  6667  002DCE                     __end_of_ReadADC:
  6668                           	opt stack 0
  6669                           tblptru	equ	0xFF8
  6670                           tblptrh	equ	0xFF7
  6671                           tblptrl	equ	0xFF6
  6672                           tablat	equ	0xFF5
  6673                           prodh	equ	0xFF4
  6674                           prodl	equ	0xFF3
  6675                           intcon	equ	0xFF2
  6676                           indf0	equ	0xFEF
  6677                           fsr0h	equ	0xFEA
  6678                           fsr0l	equ	0xFE9
  6679                           wreg	equ	0xFE8
  6680                           postinc1	equ	0xFE6
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           postdec2	equ	0xFDD
  6684                           fsr2h	equ	0xFDA
  6685                           fsr2l	equ	0xFD9
  6686                           status	equ	0xFD8
  6687                           
  6688 ;; *************** function _OpenXLCD *****************
  6689 ;; Defined at:
  6690 ;;		line 19 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/openxlcd.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  lcdtype         1    wreg     unsigned char 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  lcdtype         1   24[COMRAM] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;		None               void
  6697 ;; Registers used:
  6698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6704 ;;      Params:         0       0       0       0       0       0       0       0       0
  6705 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6707 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6708 ;;Total ram usage:        1 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    5
  6711 ;; This function calls:
  6712 ;;		_BusyXLCD
  6713 ;;		_Delay10KTCYx
  6714 ;;		_DelayPORXLCD
  6715 ;;		_SetDDRamAddr
  6716 ;;		_WriteCmdXLCD
  6717 ;; This function is called by:
  6718 ;;		_main
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722                           	psect	text29
  6723  00244A                     __ptext29:
  6724                           	opt stack 0
  6725  00244A                     _OpenXLCD:
  6726                           	opt stack 25
  6727                           
  6728                           ;incstack = 0
  6729                           ;OpenXLCD@lcdtype stored from wreg
  6730  00244A  CFE8 F019          	movff	wreg,OpenXLCD@lcdtype
  6731  00244E  0EF0               	movlw	240
  6732  002450  1681               	andwf	3969,f,c	;volatile
  6733  002452  0EF0               	movlw	240
  6734  002454  1693               	andwf	3987,f,c	;volatile
  6735  002456  9C93               	bcf	3987,6,c	;volatile
  6736  002458  9A93               	bcf	3987,5,c	;volatile
  6737  00245A  9893               	bcf	3987,4,c	;volatile
  6738  00245C  9C8A               	bcf	3978,6,c	;volatile
  6739  00245E  9A8A               	bcf	3978,5,c	;volatile
  6740  002460  988A               	bcf	3978,4,c	;volatile
  6741  002462  ECE7  F016         	call	_DelayPORXLCD	;wreg free
  6742  002466  0E30               	movlw	48
  6743  002468  EC42  F015         	call	_WriteCmdXLCD
  6744  00246C  0E05               	movlw	5
  6745  00246E  ECAA  F016         	call	_Delay10KTCYx
  6746  002472  0E30               	movlw	48
  6747  002474  EC42  F015         	call	_WriteCmdXLCD
  6748  002478  0E01               	movlw	1
  6749  00247A  ECAA  F016         	call	_Delay10KTCYx
  6750  00247E  0E32               	movlw	50
  6751  002480  EC42  F015         	call	_WriteCmdXLCD
  6752  002484                     l3789:
  6753  002484  ECD9  F015         	call	_BusyXLCD	;wreg free
  6754  002488  0900               	iorlw	0
  6755  00248A  A4D8               	btfss	status,2,c
  6756  00248C  D7FB               	goto	l3789
  6757  00248E                     l3791:
  6758  00248E  ECD9  F015         	call	_BusyXLCD	;wreg free
  6759  002492  0900               	iorlw	0
  6760  002494  A4D8               	btfss	status,2,c
  6761  002496  D7FB               	goto	l3791
  6762  002498  5019               	movf	OpenXLCD@lcdtype,w,c
  6763  00249A  EC42  F015         	call	_WriteCmdXLCD
  6764  00249E                     l3795:
  6765  00249E  ECD9  F015         	call	_BusyXLCD	;wreg free
  6766  0024A2  0900               	iorlw	0
  6767  0024A4  A4D8               	btfss	status,2,c
  6768  0024A6  D7FB               	goto	l3795
  6769  0024A8  0E08               	movlw	8
  6770  0024AA  EC42  F015         	call	_WriteCmdXLCD
  6771  0024AE                     l3799:
  6772  0024AE  ECD9  F015         	call	_BusyXLCD	;wreg free
  6773  0024B2  0900               	iorlw	0
  6774  0024B4  A4D8               	btfss	status,2,c
  6775  0024B6  D7FB               	goto	l3799
  6776  0024B8  0E0F               	movlw	15
  6777  0024BA  EC42  F015         	call	_WriteCmdXLCD
  6778  0024BE                     l3803:
  6779  0024BE  ECD9  F015         	call	_BusyXLCD	;wreg free
  6780  0024C2  0900               	iorlw	0
  6781  0024C4  A4D8               	btfss	status,2,c
  6782  0024C6  D7FB               	goto	l3803
  6783  0024C8  0E01               	movlw	1
  6784  0024CA  EC42  F015         	call	_WriteCmdXLCD
  6785  0024CE                     l3807:
  6786  0024CE  ECD9  F015         	call	_BusyXLCD	;wreg free
  6787  0024D2  0900               	iorlw	0
  6788  0024D4  A4D8               	btfss	status,2,c
  6789  0024D6  D7FB               	goto	l3807
  6790  0024D8  0E04               	movlw	4
  6791  0024DA  EC42  F015         	call	_WriteCmdXLCD
  6792  0024DE                     l3811:
  6793  0024DE  ECD9  F015         	call	_BusyXLCD	;wreg free
  6794  0024E2  0900               	iorlw	0
  6795  0024E4  A4D8               	btfss	status,2,c
  6796  0024E6  D7FB               	goto	l3811
  6797  0024E8  0E80               	movlw	128
  6798  0024EA  ECF5  F014         	call	_SetDDRamAddr
  6799  0024EE  0012               	return	
  6800  0024F0                     __end_of_OpenXLCD:
  6801                           	opt stack 0
  6802                           tblptru	equ	0xFF8
  6803                           tblptrh	equ	0xFF7
  6804                           tblptrl	equ	0xFF6
  6805                           tablat	equ	0xFF5
  6806                           prodh	equ	0xFF4
  6807                           prodl	equ	0xFF3
  6808                           intcon	equ	0xFF2
  6809                           indf0	equ	0xFEF
  6810                           fsr0h	equ	0xFEA
  6811                           fsr0l	equ	0xFE9
  6812                           wreg	equ	0xFE8
  6813                           postinc1	equ	0xFE6
  6814                           indf2	equ	0xFDF
  6815                           postinc2	equ	0xFDE
  6816                           postdec2	equ	0xFDD
  6817                           fsr2h	equ	0xFDA
  6818                           fsr2l	equ	0xFD9
  6819                           status	equ	0xFD8
  6820                           
  6821 ;; *************** function _WriteCmdXLCD *****************
  6822 ;; Defined at:
  6823 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/wcmdxlcd.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;  cmd             1    wreg     unsigned char 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  cmd             1   20[COMRAM] unsigned char 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;		None               void
  6830 ;; Registers used:
  6831 ;;		wreg, status,2, status,0, cstack
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6837 ;;      Params:         0       0       0       0       0       0       0       0       0
  6838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6840 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6841 ;;Total ram usage:        1 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    4
  6844 ;; This function calls:
  6845 ;;		_DelayFor18TCY
  6846 ;; This function is called by:
  6847 ;;		_main
  6848 ;;		_OpenXLCD
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text30
  6853  002A84                     __ptext30:
  6854                           	opt stack 0
  6855  002A84                     _WriteCmdXLCD:
  6856                           	opt stack 26
  6857                           
  6858                           ;incstack = 0
  6859                           ;WriteCmdXLCD@cmd stored from wreg
  6860  002A84  CFE8 F015          	movff	wreg,WriteCmdXLCD@cmd
  6861  002A88  0EF0               	movlw	240
  6862  002A8A  1693               	andwf	3987,f,c	;volatile
  6863  002A8C  0EF0               	movlw	240
  6864  002A8E  1681               	andwf	3969,f,c	;volatile
  6865  002A90  3815               	swapf	WriteCmdXLCD@cmd,w,c
  6866  002A92  0B0F               	andlw	15
  6867  002A94  0B0F               	andlw	15
  6868  002A96  1281               	iorwf	3969,f,c	;volatile
  6869  002A98  9C8A               	bcf	3978,6,c	;volatile
  6870  002A9A  9A8A               	bcf	3978,5,c	;volatile
  6871  002A9C  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6872  002AA0  888A               	bsf	3978,4,c	;volatile
  6873  002AA2  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6874  002AA6  988A               	bcf	3978,4,c	;volatile
  6875  002AA8  0EF0               	movlw	240
  6876  002AAA  1681               	andwf	3969,f,c	;volatile
  6877  002AAC  5015               	movf	WriteCmdXLCD@cmd,w,c
  6878  002AAE  0B0F               	andlw	15
  6879  002AB0  1281               	iorwf	3969,f,c	;volatile
  6880  002AB2  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6881  002AB6  888A               	bsf	3978,4,c	;volatile
  6882  002AB8  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6883  002ABC  988A               	bcf	3978,4,c	;volatile
  6884  002ABE  0E0F               	movlw	15
  6885  002AC0  1293               	iorwf	3987,f,c	;volatile
  6886  002AC2  0012               	return	
  6887  002AC4                     __end_of_WriteCmdXLCD:
  6888                           	opt stack 0
  6889                           tblptru	equ	0xFF8
  6890                           tblptrh	equ	0xFF7
  6891                           tblptrl	equ	0xFF6
  6892                           tablat	equ	0xFF5
  6893                           prodh	equ	0xFF4
  6894                           prodl	equ	0xFF3
  6895                           intcon	equ	0xFF2
  6896                           indf0	equ	0xFEF
  6897                           fsr0h	equ	0xFEA
  6898                           fsr0l	equ	0xFE9
  6899                           wreg	equ	0xFE8
  6900                           postinc1	equ	0xFE6
  6901                           indf2	equ	0xFDF
  6902                           postinc2	equ	0xFDE
  6903                           postdec2	equ	0xFDD
  6904                           fsr2h	equ	0xFDA
  6905                           fsr2l	equ	0xFD9
  6906                           status	equ	0xFD8
  6907                           
  6908 ;; *************** function _SetDDRamAddr *****************
  6909 ;; Defined at:
  6910 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/setddram.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  DDaddr          1    wreg     unsigned char 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  DDaddr          1   23[COMRAM] unsigned char 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;		None               void
  6917 ;; Registers used:
  6918 ;;		wreg, status,2, status,0, cstack
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6924 ;;      Params:         0       0       0       0       0       0       0       0       0
  6925 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6926 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6927 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6928 ;;Total ram usage:        4 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    4
  6931 ;; This function calls:
  6932 ;;		_DelayFor18TCY
  6933 ;; This function is called by:
  6934 ;;		_main
  6935 ;;		_OpenXLCD
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text31
  6940  0029EA                     __ptext31:
  6941                           	opt stack 0
  6942  0029EA                     _SetDDRamAddr:
  6943                           	opt stack 26
  6944                           
  6945                           ;incstack = 0
  6946                           ;SetDDRamAddr@DDaddr stored from wreg
  6947  0029EA  CFE8 F018          	movff	wreg,SetDDRamAddr@DDaddr
  6948  0029EE  0EF0               	movlw	240
  6949  0029F0  1693               	andwf	3987,f,c	;volatile
  6950  0029F2  0EF0               	movlw	240
  6951  0029F4  1681               	andwf	3969,f,c	;volatile
  6952  0029F6  5018               	movf	SetDDRamAddr@DDaddr,w,c
  6953  0029F8  6E15               	movwf	??_SetDDRamAddr& (0+255),c
  6954  0029FA  6A16               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  6955  0029FC  0E80               	movlw	128
  6956  0029FE  1215               	iorwf	??_SetDDRamAddr,f,c
  6957  002A00  0E00               	movlw	0
  6958  002A02  1216               	iorwf	??_SetDDRamAddr+1,f,c
  6959  002A04  0E04               	movlw	4
  6960  002A06  6E17               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  6961  002A08                     u2225:
  6962  002A08  3416               	rlcf	??_SetDDRamAddr+1,w,c
  6963  002A0A  3216               	rrcf	??_SetDDRamAddr+1,f,c
  6964  002A0C  3215               	rrcf	??_SetDDRamAddr,f,c
  6965  002A0E  2E17               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  6966  002A10  D7FB               	goto	u2225
  6967  002A12  5015               	movf	??_SetDDRamAddr,w,c
  6968  002A14  0B0F               	andlw	15
  6969  002A16  1281               	iorwf	3969,f,c	;volatile
  6970  002A18  9C8A               	bcf	3978,6,c	;volatile
  6971  002A1A  9A8A               	bcf	3978,5,c	;volatile
  6972  002A1C  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6973  002A20  888A               	bsf	3978,4,c	;volatile
  6974  002A22  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6975  002A26  988A               	bcf	3978,4,c	;volatile
  6976  002A28  0EF0               	movlw	240
  6977  002A2A  1681               	andwf	3969,f,c	;volatile
  6978  002A2C  5018               	movf	SetDDRamAddr@DDaddr,w,c
  6979  002A2E  0B0F               	andlw	15
  6980  002A30  1281               	iorwf	3969,f,c	;volatile
  6981  002A32  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6982  002A36  888A               	bsf	3978,4,c	;volatile
  6983  002A38  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  6984  002A3C  988A               	bcf	3978,4,c	;volatile
  6985  002A3E  0E0F               	movlw	15
  6986  002A40  1293               	iorwf	3987,f,c	;volatile
  6987  002A42  0012               	return	
  6988  002A44                     __end_of_SetDDRamAddr:
  6989                           	opt stack 0
  6990                           tblptru	equ	0xFF8
  6991                           tblptrh	equ	0xFF7
  6992                           tblptrl	equ	0xFF6
  6993                           tablat	equ	0xFF5
  6994                           prodh	equ	0xFF4
  6995                           prodl	equ	0xFF3
  6996                           intcon	equ	0xFF2
  6997                           indf0	equ	0xFEF
  6998                           fsr0h	equ	0xFEA
  6999                           fsr0l	equ	0xFE9
  7000                           wreg	equ	0xFE8
  7001                           postinc1	equ	0xFE6
  7002                           indf2	equ	0xFDF
  7003                           postinc2	equ	0xFDE
  7004                           postdec2	equ	0xFDD
  7005                           fsr2h	equ	0xFDA
  7006                           fsr2l	equ	0xFD9
  7007                           status	equ	0xFD8
  7008                           
  7009 ;; *************** function _DelayPORXLCD *****************
  7010 ;; Defined at:
  7011 ;;		line 195 in file "sensor_temp_adc_comm_main.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;		None
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;		None
  7016 ;; Return value:  Size  Location     Type
  7017 ;;		None               void
  7018 ;; Registers used:
  7019 ;;		wreg, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7025 ;;      Params:         0       0       0       0       0       0       0       0       0
  7026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7028 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7029 ;;Total ram usage:        0 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    4
  7032 ;; This function calls:
  7033 ;;		_Delay1KTCYx
  7034 ;; This function is called by:
  7035 ;;		_OpenXLCD
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text32
  7040  002DCE                     __ptext32:
  7041                           	opt stack 0
  7042  002DCE                     _DelayPORXLCD:
  7043                           	opt stack 25
  7044                           
  7045                           ;sensor_temp_adc_comm_main.c: 201: Delay1KTCYx(110);
  7046                           
  7047                           ;incstack = 0
  7048  002DCE  0E6E               	movlw	110
  7049  002DD0  ECCA  F016         	call	_Delay1KTCYx
  7050                           
  7051                           ;sensor_temp_adc_comm_main.c: 203: return;
  7052  002DD4  0012               	return	
  7053  002DD6                     __end_of_DelayPORXLCD:
  7054                           	opt stack 0
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           prodh	equ	0xFF4
  7060                           prodl	equ	0xFF3
  7061                           intcon	equ	0xFF2
  7062                           indf0	equ	0xFEF
  7063                           fsr0h	equ	0xFEA
  7064                           fsr0l	equ	0xFE9
  7065                           wreg	equ	0xFE8
  7066                           postinc1	equ	0xFE6
  7067                           indf2	equ	0xFDF
  7068                           postinc2	equ	0xFDE
  7069                           postdec2	equ	0xFDD
  7070                           fsr2h	equ	0xFDA
  7071                           fsr2l	equ	0xFD9
  7072                           status	equ	0xFD8
  7073                           
  7074 ;; *************** function _Delay1KTCYx *****************
  7075 ;; Defined at:
  7076 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  unit            1    wreg     unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  unit            1   20[COMRAM] unsigned char 
  7081 ;; Return value:  Size  Location     Type
  7082 ;;		None               void
  7083 ;; Registers used:
  7084 ;;		wreg
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7090 ;;      Params:         0       0       0       0       0       0       0       0       0
  7091 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7093 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7094 ;;Total ram usage:        1 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    3
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_DelayPORXLCD
  7101 ;;		_DelayXLCD
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text33
  7106  002D94                     __ptext33:
  7107                           	opt stack 0
  7108  002D94                     _Delay1KTCYx:
  7109                           	opt stack 25
  7110                           
  7111                           ;incstack = 0
  7112                           ;Delay1KTCYx@unit stored from wreg
  7113  002D94  CFE8 F015          	movff	wreg,Delay1KTCYx@unit
  7114  002D98                     l640:
  7115  002D98  0EFA               	movlw	250
  7116  002D9A                     u5017:
  7117  002D9A  F000               	nop	
  7118  002D9C  2EE8               	decfsz	wreg,f,c
  7119  002D9E  D7FD               	goto	u5017
  7120  002DA0  2E15               	decfsz	Delay1KTCYx@unit,f,c
  7121  002DA2  D7FA               	goto	l640
  7122  002DA4  0012               	return	
  7123  002DA6                     __end_of_Delay1KTCYx:
  7124                           	opt stack 0
  7125                           tblptru	equ	0xFF8
  7126                           tblptrh	equ	0xFF7
  7127                           tblptrl	equ	0xFF6
  7128                           tablat	equ	0xFF5
  7129                           prodh	equ	0xFF4
  7130                           prodl	equ	0xFF3
  7131                           intcon	equ	0xFF2
  7132                           indf0	equ	0xFEF
  7133                           fsr0h	equ	0xFEA
  7134                           fsr0l	equ	0xFE9
  7135                           wreg	equ	0xFE8
  7136                           postinc1	equ	0xFE6
  7137                           indf2	equ	0xFDF
  7138                           postinc2	equ	0xFDE
  7139                           postdec2	equ	0xFDD
  7140                           fsr2h	equ	0xFDA
  7141                           fsr2l	equ	0xFD9
  7142                           status	equ	0xFD8
  7143                           
  7144 ;; *************** function _Delay10KTCYx *****************
  7145 ;; Defined at:
  7146 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/pic18/d10ktcyx.c"
  7147 ;; Parameters:    Size  Location     Type
  7148 ;;  unit            1    wreg     unsigned char 
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;  unit            1   21[COMRAM] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;		None               void
  7153 ;; Registers used:
  7154 ;;		wreg
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7160 ;;      Params:         0       0       0       0       0       0       0       0       0
  7161 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7162 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7163 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7164 ;;Total ram usage:        2 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    3
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_OpenXLCD
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           	psect	text34
  7175  002D54                     __ptext34:
  7176                           	opt stack 0
  7177  002D54                     _Delay10KTCYx:
  7178                           	opt stack 26
  7179                           
  7180                           ;incstack = 0
  7181                           ;Delay10KTCYx@unit stored from wreg
  7182  002D54  CFE8 F016          	movff	wreg,Delay10KTCYx@unit
  7183  002D58                     l626:
  7184  002D58  0E0D               	movlw	13
  7185  002D5A  6E15               	movwf	??_Delay10KTCYx& (0+255),c
  7186  002D5C  0EFC               	movlw	252
  7187  002D5E                     u5027:
  7188  002D5E  2EE8               	decfsz	wreg,f,c
  7189  002D60  D7FE               	goto	u5027
  7190  002D62  2E15               	decfsz	??_Delay10KTCYx& (0+255),f,c
  7191  002D64  D7FC               	goto	u5027
  7192  002D66  2E16               	decfsz	Delay10KTCYx@unit,f,c
  7193  002D68  D7F7               	goto	l626
  7194  002D6A  0012               	return	
  7195  002D6C                     __end_of_Delay10KTCYx:
  7196                           	opt stack 0
  7197                           tblptru	equ	0xFF8
  7198                           tblptrh	equ	0xFF7
  7199                           tblptrl	equ	0xFF6
  7200                           tablat	equ	0xFF5
  7201                           prodh	equ	0xFF4
  7202                           prodl	equ	0xFF3
  7203                           intcon	equ	0xFF2
  7204                           indf0	equ	0xFEF
  7205                           fsr0h	equ	0xFEA
  7206                           fsr0l	equ	0xFE9
  7207                           wreg	equ	0xFE8
  7208                           postinc1	equ	0xFE6
  7209                           indf2	equ	0xFDF
  7210                           postinc2	equ	0xFDE
  7211                           postdec2	equ	0xFDD
  7212                           fsr2h	equ	0xFDA
  7213                           fsr2l	equ	0xFD9
  7214                           status	equ	0xFD8
  7215                           
  7216 ;; *************** function _BusyXLCD *****************
  7217 ;; Defined at:
  7218 ;;		line 11 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/XLCD/busyxlcd.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      unsigned char 
  7225 ;; Registers used:
  7226 ;;		wreg, cstack
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7232 ;;      Params:         0       0       0       0       0       0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7235 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7236 ;;Total ram usage:        0 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:    4
  7239 ;; This function calls:
  7240 ;;		_DelayFor18TCY
  7241 ;; This function is called by:
  7242 ;;		_main
  7243 ;;		_OpenXLCD
  7244 ;;		_putrsXLCD
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text35
  7249  002BB2                     __ptext35:
  7250                           	opt stack 0
  7251  002BB2                     _BusyXLCD:
  7252                           	opt stack 25
  7253                           
  7254                           ;incstack = 0
  7255  002BB2  8C8A               	bsf	3978,6,c	;volatile
  7256  002BB4  9A8A               	bcf	3978,5,c	;volatile
  7257  002BB6  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  7258  002BBA  888A               	bsf	3978,4,c	;volatile
  7259  002BBC  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  7260  002BC0  A681               	btfss	3969,3,c	;volatile
  7261  002BC2  D00A               	goto	l325
  7262  002BC4  988A               	bcf	3978,4,c	;volatile
  7263  002BC6  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  7264  002BCA  888A               	bsf	3978,4,c	;volatile
  7265  002BCC  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  7266  002BD0  988A               	bcf	3978,4,c	;volatile
  7267  002BD2  9C8A               	bcf	3978,6,c	;volatile
  7268  002BD4  0E01               	movlw	1
  7269  002BD6  D009               	goto	l326
  7270  002BD8                     l325:
  7271  002BD8  988A               	bcf	3978,4,c	;volatile
  7272  002BDA  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  7273  002BDE  888A               	bsf	3978,4,c	;volatile
  7274  002BE0  EC7B  F016         	call	_DelayFor18TCY	;wreg free
  7275  002BE4  988A               	bcf	3978,4,c	;volatile
  7276  002BE6  9C8A               	bcf	3978,6,c	;volatile
  7277  002BE8  0E00               	movlw	0
  7278  002BEA                     l326:
  7279  002BEA  0012               	return	
  7280  002BEC                     __end_of_BusyXLCD:
  7281                           	opt stack 0
  7282                           tblptru	equ	0xFF8
  7283                           tblptrh	equ	0xFF7
  7284                           tblptrl	equ	0xFF6
  7285                           tablat	equ	0xFF5
  7286                           prodh	equ	0xFF4
  7287                           prodl	equ	0xFF3
  7288                           intcon	equ	0xFF2
  7289                           indf0	equ	0xFEF
  7290                           fsr0h	equ	0xFEA
  7291                           fsr0l	equ	0xFE9
  7292                           wreg	equ	0xFE8
  7293                           postinc1	equ	0xFE6
  7294                           indf2	equ	0xFDF
  7295                           postinc2	equ	0xFDE
  7296                           postdec2	equ	0xFDD
  7297                           fsr2h	equ	0xFDA
  7298                           fsr2l	equ	0xFD9
  7299                           status	equ	0xFD8
  7300                           
  7301 ;; *************** function _DelayFor18TCY *****************
  7302 ;; Defined at:
  7303 ;;		line 173 in file "sensor_temp_adc_comm_main.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;		None
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;		None               void
  7310 ;; Registers used:
  7311 ;;		None
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7317 ;;      Params:         0       0       0       0       0       0       0       0       0
  7318 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7320 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7321 ;;Total ram usage:        0 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; Hardware stack levels required when called:    3
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_BusyXLCD
  7328 ;;		_SetDDRamAddr
  7329 ;;		_WriteCmdXLCD
  7330 ;;		_WriteDataXLCD
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text36
  7335  002CF6                     __ptext36:
  7336                           	opt stack 0
  7337  002CF6                     _DelayFor18TCY:
  7338                           	opt stack 25
  7339                           
  7340                           ;sensor_temp_adc_comm_main.c: 175: __nop();
  7341                           
  7342                           ;incstack = 0
  7343  002CF6  F000               	nop	
  7344                           
  7345                           ;sensor_temp_adc_comm_main.c: 176: __nop();
  7346  002CF8  F000               	nop	
  7347                           
  7348                           ;sensor_temp_adc_comm_main.c: 177: __nop();
  7349  002CFA  F000               	nop	
  7350                           
  7351                           ;sensor_temp_adc_comm_main.c: 178: __nop();
  7352  002CFC  F000               	nop	
  7353                           
  7354                           ;sensor_temp_adc_comm_main.c: 179: __nop();
  7355  002CFE  F000               	nop	
  7356                           
  7357                           ;sensor_temp_adc_comm_main.c: 180: __nop();
  7358  002D00  F000               	nop	
  7359                           
  7360                           ;sensor_temp_adc_comm_main.c: 181: __nop();
  7361  002D02  F000               	nop	
  7362                           
  7363                           ;sensor_temp_adc_comm_main.c: 182: __nop();
  7364  002D04  F000               	nop	
  7365                           
  7366                           ;sensor_temp_adc_comm_main.c: 183: __nop();
  7367  002D06  F000               	nop	
  7368                           
  7369                           ;sensor_temp_adc_comm_main.c: 184: __nop();
  7370  002D08  F000               	nop	
  7371                           
  7372                           ;sensor_temp_adc_comm_main.c: 185: __nop();
  7373  002D0A  F000               	nop	
  7374                           
  7375                           ;sensor_temp_adc_comm_main.c: 186: __nop();
  7376  002D0C  F000               	nop	
  7377                           
  7378                           ;sensor_temp_adc_comm_main.c: 187: __nop();
  7379  002D0E  F000               	nop	
  7380                           
  7381                           ;sensor_temp_adc_comm_main.c: 188: __nop();
  7382  002D10  F000               	nop	
  7383                           
  7384                           ;sensor_temp_adc_comm_main.c: 189: __nop();
  7385  002D12  F000               	nop	
  7386                           
  7387                           ;sensor_temp_adc_comm_main.c: 190: __nop();
  7388  002D14  F000               	nop	
  7389                           
  7390                           ;sensor_temp_adc_comm_main.c: 191: __nop();
  7391  002D16  F000               	nop	
  7392                           
  7393                           ;sensor_temp_adc_comm_main.c: 192: __nop();
  7394  002D18  F000               	nop	
  7395  002D1A  0012               	return	
  7396  002D1C                     __end_of_DelayFor18TCY:
  7397                           	opt stack 0
  7398                           tblptru	equ	0xFF8
  7399                           tblptrh	equ	0xFF7
  7400                           tblptrl	equ	0xFF6
  7401                           tablat	equ	0xFF5
  7402                           prodh	equ	0xFF4
  7403                           prodl	equ	0xFF3
  7404                           intcon	equ	0xFF2
  7405                           indf0	equ	0xFEF
  7406                           fsr0h	equ	0xFEA
  7407                           fsr0l	equ	0xFE9
  7408                           wreg	equ	0xFE8
  7409                           postinc1	equ	0xFE6
  7410                           indf2	equ	0xFDF
  7411                           postinc2	equ	0xFDE
  7412                           postdec2	equ	0xFDD
  7413                           fsr2h	equ	0xFDA
  7414                           fsr2l	equ	0xFD9
  7415                           status	equ	0xFD8
  7416                           
  7417 ;; *************** function _OpenUSART *****************
  7418 ;; Defined at:
  7419 ;;		line 73 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  config          1    wreg     unsigned char 
  7422 ;;  spbrg           2   20[COMRAM] unsigned int 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  config          1   25[COMRAM] unsigned char 
  7425 ;; Return value:  Size  Location     Type
  7426 ;;		None               void
  7427 ;; Registers used:
  7428 ;;		wreg, status,2
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7434 ;;      Params:         2       0       0       0       0       0       0       0       0
  7435 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7436 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7437 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7438 ;;Total ram usage:        6 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:    3
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_main
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text37
  7449  0027A8                     __ptext37:
  7450                           	opt stack 0
  7451  0027A8                     _OpenUSART:
  7452                           	opt stack 27
  7453                           
  7454                           ;incstack = 0
  7455                           ;OpenUSART@config stored from wreg
  7456  0027A8  CFE8 F01A          	movff	wreg,OpenUSART@config
  7457  0027AC  0E00               	movlw	0
  7458  0027AE  6EAC               	movwf	4012,c	;volatile
  7459  0027B0  0E00               	movlw	0
  7460  0027B2  6EAB               	movwf	4011,c	;volatile
  7461  0027B4  B01A               	btfsc	OpenUSART@config,0,c
  7462  0027B6  88AC               	bsf	4012,4,c	;volatile
  7463  0027B8  A21A               	btfss	OpenUSART@config,1,c
  7464  0027BA  D002               	goto	l3703
  7465  0027BC  8CAC               	bsf	4012,6,c	;volatile
  7466  0027BE  8CAB               	bsf	4011,6,c	;volatile
  7467  0027C0                     l3703:
  7468  0027C0  B41A               	btfsc	OpenUSART@config,2,c
  7469  0027C2  8EAC               	bsf	4012,7,c	;volatile
  7470  0027C4  A61A               	btfss	OpenUSART@config,3,c
  7471  0027C6  D002               	goto	l271
  7472  0027C8  88AB               	bsf	4011,4,c	;volatile
  7473  0027CA  D001               	goto	l3711
  7474  0027CC                     l271:
  7475  0027CC  8AAB               	bsf	4011,5,c	;volatile
  7476  0027CE                     l3711:
  7477  0027CE  B81A               	btfsc	OpenUSART@config,4,c
  7478  0027D0  84AC               	bsf	4012,2,c	;volatile
  7479  0027D2  989E               	bcf	3998,4,c	;volatile
  7480  0027D4  BA1A               	btfsc	OpenUSART@config,5,c
  7481  0027D6  86AB               	bsf	4011,3,c	;volatile
  7482  0027D8  AC1A               	btfss	OpenUSART@config,6,c
  7483  0027DA  D002               	goto	l275
  7484  0027DC  8A9D               	bsf	3997,5,c	;volatile
  7485  0027DE  D001               	goto	l276
  7486  0027E0                     l275:
  7487  0027E0  9A9D               	bcf	3997,5,c	;volatile
  7488  0027E2                     l276:
  7489  0027E2  9A9E               	bcf	3998,5,c	;volatile
  7490  0027E4  AE1A               	btfss	OpenUSART@config,7,c
  7491  0027E6  D002               	goto	l277
  7492  0027E8  889D               	bsf	3997,4,c	;volatile
  7493  0027EA  D001               	goto	l278
  7494  0027EC                     l277:
  7495  0027EC  989D               	bcf	3997,4,c	;volatile
  7496  0027EE                     l278:
  7497  0027EE  C015  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  7498  0027F2  C016  F017         	movff	OpenUSART@spbrg+1,??_OpenUSART
  7499  0027F6  C017  F018         	movff	??_OpenUSART,??_OpenUSART+1
  7500  0027FA  6A19               	clrf	(??_OpenUSART+2)& (0+255),c
  7501  0027FC  5018               	movf	??_OpenUSART+1,w,c
  7502  0027FE  6EB0               	movwf	4016,c	;volatile
  7503  002800  8AAC               	bsf	4012,5,c	;volatile
  7504  002802  8EAB               	bsf	4011,7,c	;volatile
  7505  002804  9C94               	bcf	3988,6,c	;volatile
  7506  002806  8E94               	bsf	3988,7,c	;volatile
  7507  002808  B8AC               	btfsc	4012,4,c	;volatile
  7508  00280A  BEAC               	btfsc	4012,7,c	;volatile
  7509  00280C  D001               	goto	l280
  7510  00280E  8C94               	bsf	3988,6,c	;volatile
  7511  002810                     l280:
  7512  002810  0012               	return	
  7513  002812                     __end_of_OpenUSART:
  7514                           	opt stack 0
  7515                           tblptru	equ	0xFF8
  7516                           tblptrh	equ	0xFF7
  7517                           tblptrl	equ	0xFF6
  7518                           tablat	equ	0xFF5
  7519                           prodh	equ	0xFF4
  7520                           prodl	equ	0xFF3
  7521                           intcon	equ	0xFF2
  7522                           indf0	equ	0xFEF
  7523                           fsr0h	equ	0xFEA
  7524                           fsr0l	equ	0xFE9
  7525                           wreg	equ	0xFE8
  7526                           postinc1	equ	0xFE6
  7527                           indf2	equ	0xFDF
  7528                           postinc2	equ	0xFDE
  7529                           postdec2	equ	0xFDD
  7530                           fsr2h	equ	0xFDA
  7531                           fsr2l	equ	0xFD9
  7532                           status	equ	0xFD8
  7533                           
  7534 ;; *************** function _OpenADC *****************
  7535 ;; Defined at:
  7536 ;;		line 68 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;  config          1    wreg     unsigned char 
  7539 ;;  config2         1   20[COMRAM] unsigned char 
  7540 ;;  portconfig      1   21[COMRAM] unsigned char 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  config          1   24[COMRAM] unsigned char 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;		None               void
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7552 ;;      Params:         2       0       0       0       0       0       0       0       0
  7553 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7554 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7555 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7556 ;;Total ram usage:        5 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    3
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_main
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           	psect	text38
  7567  002876                     __ptext38:
  7568                           	opt stack 0
  7569  002876                     _OpenADC:
  7570                           	opt stack 27
  7571                           
  7572                           ;incstack = 0
  7573                           ;OpenADC@config stored from wreg
  7574  002876  CFE8 F019          	movff	wreg,OpenADC@config
  7575  00287A  0E00               	movlw	0
  7576  00287C  6EC2               	movwf	4034,c	;volatile
  7577  00287E  0E00               	movlw	0
  7578  002880  6EC0               	movwf	4032,c	;volatile
  7579  002882  90D8               	bcf	status,0,c
  7580  002884  3015               	rrcf	OpenADC@config2,w,c
  7581  002886  0B3C               	andlw	60
  7582  002888  6EC2               	movwf	4034,c	;volatile
  7583  00288A  C015  F017         	movff	OpenADC@config2,??_OpenADC
  7584  00288E  3A17               	swapf	??_OpenADC,f,c
  7585  002890  0EF0               	movlw	240
  7586  002892  1617               	andwf	??_OpenADC,f,c
  7587  002894  0E30               	movlw	48
  7588  002896  1617               	andwf	??_OpenADC,f,c
  7589  002898  5016               	movf	OpenADC@portconfig,w,c
  7590  00289A  0B0F               	andlw	15
  7591  00289C  1017               	iorwf	??_OpenADC,w,c
  7592  00289E  6EC1               	movwf	4033,c	;volatile
  7593  0028A0  C019  F017         	movff	OpenADC@config,??_OpenADC
  7594  0028A4  90D8               	bcf	status,0,c
  7595  0028A6  3617               	rlcf	??_OpenADC,f,c
  7596  0028A8  90D8               	bcf	status,0,c
  7597  0028AA  3617               	rlcf	??_OpenADC,f,c
  7598  0028AC  0E38               	movlw	56
  7599  0028AE  1617               	andwf	??_OpenADC,f,c
  7600  0028B0  C019  F018         	movff	OpenADC@config,??_OpenADC+1
  7601  0028B4  3A18               	swapf	??_OpenADC+1,f,c
  7602  0028B6  0E0F               	movlw	15
  7603  0028B8  1618               	andwf	??_OpenADC+1,f,c
  7604  0028BA  0E07               	movlw	7
  7605  0028BC  1618               	andwf	??_OpenADC+1,f,c
  7606  0028BE  5019               	movf	OpenADC@config,w,c
  7607  0028C0  0B80               	andlw	128
  7608  0028C2  1018               	iorwf	??_OpenADC+1,w,c
  7609  0028C4  1017               	iorwf	??_OpenADC,w,c
  7610  0028C6  6EC0               	movwf	4032,c	;volatile
  7611  0028C8  AE15               	btfss	OpenADC@config2,7,c
  7612  0028CA  D003               	goto	l239
  7613  0028CC  9C9E               	bcf	3998,6,c	;volatile
  7614  0028CE  8C9D               	bsf	3997,6,c	;volatile
  7615  0028D0  8CF2               	bsf	intcon,6,c	;volatile
  7616  0028D2                     l239:
  7617  0028D2  80C2               	bsf	4034,0,c	;volatile
  7618  0028D4  0012               	return	
  7619  0028D6                     __end_of_OpenADC:
  7620                           	opt stack 0
  7621                           tblptru	equ	0xFF8
  7622                           tblptrh	equ	0xFF7
  7623                           tblptrl	equ	0xFF6
  7624                           tablat	equ	0xFF5
  7625                           prodh	equ	0xFF4
  7626                           prodl	equ	0xFF3
  7627                           intcon	equ	0xFF2
  7628                           indf0	equ	0xFEF
  7629                           fsr0h	equ	0xFEA
  7630                           fsr0l	equ	0xFE9
  7631                           wreg	equ	0xFE8
  7632                           postinc1	equ	0xFE6
  7633                           indf2	equ	0xFDF
  7634                           postinc2	equ	0xFDE
  7635                           postdec2	equ	0xFDD
  7636                           fsr2h	equ	0xFDA
  7637                           fsr2l	equ	0xFD9
  7638                           status	equ	0xFD8
  7639                           
  7640 ;; *************** function _Delay_ms *****************
  7641 ;; Defined at:
  7642 ;;		line 217 in file "sensor_temp_adc_comm_main.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  ms              2   20[COMRAM] unsigned int 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;  i               2   23[COMRAM] unsigned int 
  7647 ;; Return value:  Size  Location     Type
  7648 ;;		None               void
  7649 ;; Registers used:
  7650 ;;		wreg, status,2, status,0
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7656 ;;      Params:         2       0       0       0       0       0       0       0       0
  7657 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7658 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7659 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7660 ;;Total ram usage:        5 bytes
  7661 ;; Hardware stack levels used:    1
  7662 ;; Hardware stack levels required when called:    3
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		_main
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text39
  7671  002C7A                     __ptext39:
  7672                           	opt stack 0
  7673  002C7A                     _Delay_ms:
  7674                           	opt stack 27
  7675                           
  7676                           ;sensor_temp_adc_comm_main.c: 219: for (unsigned int i=0; i<ms; i++)
  7677                           
  7678                           ;incstack = 0
  7679  002C7A  0E00               	movlw	0
  7680  002C7C  6E19               	movwf	Delay_ms@i+1,c
  7681  002C7E  0E00               	movlw	0
  7682  002C80  6E18               	movwf	Delay_ms@i,c
  7683  002C82  D00A               	goto	l99
  7684  002C84                     l3689:
  7685                           
  7686                           ;sensor_temp_adc_comm_main.c: 220: _delay((unsigned long)((1)*(20000000/4000.0)));
  7687  002C84  0E07               	movlw	7
  7688  002C86  6E17               	movwf	??_Delay_ms& (0+255),c
  7689  002C88  0E7D               	movlw	125
  7690  002C8A                     u5037:
  7691  002C8A  2EE8               	decfsz	wreg,f,c
  7692  002C8C  D7FE               	goto	u5037
  7693  002C8E  2E17               	decfsz	??_Delay_ms& (0+255),f,c
  7694  002C90  D7FC               	goto	u5037
  7695  002C92  F000               	nop	
  7696  002C94  4A18               	infsnz	Delay_ms@i,f,c
  7697  002C96  2A19               	incf	Delay_ms@i+1,f,c
  7698  002C98                     l99:
  7699  002C98  5015               	movf	Delay_ms@ms,w,c
  7700  002C9A  5C18               	subwf	Delay_ms@i,w,c
  7701  002C9C  5016               	movf	Delay_ms@ms+1,w,c
  7702  002C9E  5819               	subwfb	Delay_ms@i+1,w,c
  7703  002CA0  B0D8               	btfsc	status,0,c
  7704  002CA2  0012               	return	
  7705  002CA4  D7EF               	goto	l3689
  7706  002CA6                     __end_of_Delay_ms:
  7707                           	opt stack 0
  7708                           tblptru	equ	0xFF8
  7709                           tblptrh	equ	0xFF7
  7710                           tblptrl	equ	0xFF6
  7711                           tablat	equ	0xFF5
  7712                           prodh	equ	0xFF4
  7713                           prodl	equ	0xFF3
  7714                           intcon	equ	0xFF2
  7715                           indf0	equ	0xFEF
  7716                           fsr0h	equ	0xFEA
  7717                           fsr0l	equ	0xFE9
  7718                           wreg	equ	0xFE8
  7719                           postinc1	equ	0xFE6
  7720                           indf2	equ	0xFDF
  7721                           postinc2	equ	0xFDE
  7722                           postdec2	equ	0xFDD
  7723                           fsr2h	equ	0xFDA
  7724                           fsr2l	equ	0xFD9
  7725                           status	equ	0xFD8
  7726                           
  7727 ;; *************** function _Delay10TCYx *****************
  7728 ;; Defined at:
  7729 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/pic18/d10tcyx.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  unit            1    wreg     unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  unit            1   20[COMRAM] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;		None               void
  7736 ;; Registers used:
  7737 ;;		wreg
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0
  7744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7746 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7747 ;;Total ram usage:        1 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    3
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_main
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text40
  7758  002DA6                     __ptext40:
  7759                           	opt stack 0
  7760  002DA6                     _Delay10TCYx:
  7761                           	opt stack 27
  7762                           
  7763                           ;incstack = 0
  7764                           ;Delay10TCYx@unit stored from wreg
  7765  002DA6  CFE8 F015          	movff	wreg,Delay10TCYx@unit
  7766  002DAA                     l633:
  7767  002DAA  0E03               	movlw	3
  7768  002DAC                     u5047:
  7769  002DAC  2EE8               	decfsz	wreg,f,c
  7770  002DAE  D7FE               	goto	u5047
  7771  002DB0  F000               	nop	
  7772  002DB2  2E15               	decfsz	Delay10TCYx@unit,f,c
  7773  002DB4  D7FA               	goto	l633
  7774  002DB6  0012               	return	
  7775  002DB8                     __end_of_Delay10TCYx:
  7776                           	opt stack 0
  7777                           tblptru	equ	0xFF8
  7778                           tblptrh	equ	0xFF7
  7779                           tblptrl	equ	0xFF6
  7780                           tablat	equ	0xFF5
  7781                           prodh	equ	0xFF4
  7782                           prodl	equ	0xFF3
  7783                           intcon	equ	0xFF2
  7784                           indf0	equ	0xFEF
  7785                           fsr0h	equ	0xFEA
  7786                           fsr0l	equ	0xFE9
  7787                           wreg	equ	0xFE8
  7788                           postinc1	equ	0xFE6
  7789                           indf2	equ	0xFDF
  7790                           postinc2	equ	0xFDE
  7791                           postdec2	equ	0xFDD
  7792                           fsr2h	equ	0xFDA
  7793                           fsr2l	equ	0xFD9
  7794                           status	equ	0xFD8
  7795                           
  7796 ;; *************** function _ConvertADC *****************
  7797 ;; Defined at:
  7798 ;;		line 22 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;		None               void
  7805 ;; Registers used:
  7806 ;;		None
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7812 ;;      Params:         0       0       0       0       0       0       0       0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7815 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7816 ;;Total ram usage:        0 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; Hardware stack levels required when called:    3
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_main
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text41
  7827  002DD6                     __ptext41:
  7828                           	opt stack 0
  7829  002DD6                     _ConvertADC:
  7830                           	opt stack 27
  7831                           
  7832                           ;incstack = 0
  7833  002DD6  82C2               	bsf	4034,1,c	;volatile
  7834  002DD8  0012               	return	
  7835  002DDA                     __end_of_ConvertADC:
  7836                           	opt stack 0
  7837                           tblptru	equ	0xFF8
  7838                           tblptrh	equ	0xFF7
  7839                           tblptrl	equ	0xFF6
  7840                           tablat	equ	0xFF5
  7841                           prodh	equ	0xFF4
  7842                           prodl	equ	0xFF3
  7843                           intcon	equ	0xFF2
  7844                           indf0	equ	0xFEF
  7845                           fsr0h	equ	0xFEA
  7846                           fsr0l	equ	0xFE9
  7847                           wreg	equ	0xFE8
  7848                           postinc1	equ	0xFE6
  7849                           indf2	equ	0xFDF
  7850                           postinc2	equ	0xFDE
  7851                           postdec2	equ	0xFDD
  7852                           fsr2h	equ	0xFDA
  7853                           fsr2l	equ	0xFD9
  7854                           status	equ	0xFD8
  7855                           
  7856 ;; *************** function _BusyADC *****************
  7857 ;; Defined at:
  7858 ;;		line 26 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcbusy.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;		None
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      unsigned char 
  7865 ;; Registers used:
  7866 ;;		wreg
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7872 ;;      Params:         0       0       0       0       0       0       0       0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7876 ;;Total ram usage:        0 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    3
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_main
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text42
  7887  002DB8                     __ptext42:
  7888                           	opt stack 0
  7889  002DB8                     _BusyADC:
  7890                           	opt stack 27
  7891                           
  7892                           ;incstack = 0
  7893  002DB8  A2C2               	btfss	4034,1,c	;volatile
  7894  002DBA  D002               	goto	u2270
  7895  002DBC  0E01               	movlw	1
  7896  002DBE  D001               	goto	l217
  7897  002DC0                     u2270:
  7898  002DC0  0E00               	movlw	0
  7899  002DC2                     l217:
  7900  002DC2  0012               	return	
  7901  002DC4                     __end_of_BusyADC:
  7902                           	opt stack 0
  7903                           tblptru	equ	0xFF8
  7904                           tblptrh	equ	0xFF7
  7905                           tblptrl	equ	0xFF6
  7906                           tablat	equ	0xFF5
  7907                           prodh	equ	0xFF4
  7908                           prodl	equ	0xFF3
  7909                           intcon	equ	0xFF2
  7910                           indf0	equ	0xFEF
  7911                           fsr0h	equ	0xFEA
  7912                           fsr0l	equ	0xFE9
  7913                           wreg	equ	0xFE8
  7914                           postinc1	equ	0xFE6
  7915                           indf2	equ	0xFDF
  7916                           postinc2	equ	0xFDE
  7917                           postdec2	equ	0xFDD
  7918                           fsr2h	equ	0xFDA
  7919                           fsr2l	equ	0xFD9
  7920                           status	equ	0xFD8
  7921                           
  7922 ;; *************** function ___ftmul *****************
  7923 ;; Defined at:
  7924 ;;		line 51 in file "/opt/microchip/xc8/v1.30/sources/common/ftmul.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  f1              3   42[COMRAM] float 
  7927 ;;  f2              3   45[COMRAM] float 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  f3_as_produc    3   52[COMRAM] unsigned um
  7930 ;;  sign            1   56[COMRAM] unsigned char 
  7931 ;;  cntr            1   55[COMRAM] unsigned char 
  7932 ;;  exp             1   51[COMRAM] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  3   42[COMRAM] float 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2, status,0, cstack
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7942 ;;      Params:         6       0       0       0       0       0       0       0       0
  7943 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7944 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7945 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7946 ;;Total ram usage:       15 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    4
  7949 ;; This function calls:
  7950 ;;		___ftpack
  7951 ;; This function is called by:
  7952 ;;		_main
  7953 ;;		_fround
  7954 ;;		_scale
  7955 ;;		_sprintf
  7956 ;;		___asftmul
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           	psect	text43
  7961  00212C                     __ptext43:
  7962                           	opt stack 0
  7963  00212C                     ___ftmul:
  7964                           	opt stack 24
  7965                           
  7966                           ;incstack = 0
  7967  00212C  C02D  F031         	movff	___ftmul@f1+2,??___ftmul
  7968  002130  6A32               	clrf	(??___ftmul+1)& (0+255),c
  7969  002132  6A33               	clrf	(??___ftmul+2)& (0+255),c
  7970  002134  342C               	rlcf	___ftmul@f1+1,w,c
  7971  002136  3631               	rlcf	??___ftmul& (0+255),f,c
  7972  002138  E301               	bnc	u3391
  7973  00213A  8032               	bsf	(??___ftmul+1)& (0+255),0,c
  7974  00213C                     u3391:
  7975  00213C  5031               	movf	??___ftmul,w,c
  7976  00213E  6E34               	movwf	___ftmul@exp,c
  7977  002140  6634               	tstfsz	___ftmul@exp& (0+255),c
  7978  002142  D001               	goto	l4599
  7979  002144  D00C               	goto	u3420
  7980  002146                     l4599:
  7981  002146  C030  F031         	movff	___ftmul@f2+2,??___ftmul
  7982  00214A  6A32               	clrf	(??___ftmul+1)& (0+255),c
  7983  00214C  6A33               	clrf	(??___ftmul+2)& (0+255),c
  7984  00214E  342F               	rlcf	___ftmul@f2+1,w,c
  7985  002150  3631               	rlcf	??___ftmul& (0+255),f,c
  7986  002152  E301               	bnc	u3411
  7987  002154  8032               	bsf	(??___ftmul+1)& (0+255),0,c
  7988  002156                     u3411:
  7989  002156  5031               	movf	??___ftmul,w,c
  7990  002158  6E39               	movwf	___ftmul@sign,c
  7991  00215A  6639               	tstfsz	___ftmul@sign& (0+255),c
  7992  00215C  D007               	goto	l4605
  7993  00215E                     u3420:
  7994  00215E  0E00               	movlw	0
  7995  002160  6E2B               	movwf	?___ftmul,c
  7996  002162  0E00               	movlw	0
  7997  002164  6E2C               	movwf	?___ftmul+1,c
  7998  002166  0E00               	movlw	0
  7999  002168  6E2D               	movwf	?___ftmul+2,c
  8000  00216A  D055               	goto	l848
  8001  00216C                     l4605:
  8002  00216C  5039               	movf	___ftmul@sign,w,c
  8003  00216E  0F7B               	addlw	123
  8004  002170  2634               	addwf	___ftmul@exp,f,c
  8005  002172  C02D  F039         	movff	___ftmul@f1+2,___ftmul@sign
  8006  002176  5030               	movf	___ftmul@f2+2,w,c
  8007  002178  1A39               	xorwf	___ftmul@sign,f,c
  8008  00217A  0E80               	movlw	128
  8009  00217C  1639               	andwf	___ftmul@sign,f,c
  8010  00217E  8E2C               	bsf	___ftmul@f1+1,7,c
  8011  002180  8E2F               	bsf	___ftmul@f2+1,7,c
  8012  002182  0EFF               	movlw	255
  8013  002184  162E               	andwf	___ftmul@f2,f,c
  8014  002186  0EFF               	movlw	255
  8015  002188  162F               	andwf	___ftmul@f2+1,f,c
  8016  00218A  0E00               	movlw	0
  8017  00218C  1630               	andwf	___ftmul@f2+2,f,c
  8018  00218E  0E00               	movlw	0
  8019  002190  6E35               	movwf	___ftmul@f3_as_product,c
  8020  002192  0E00               	movlw	0
  8021  002194  6E36               	movwf	___ftmul@f3_as_product+1,c
  8022  002196  0E00               	movlw	0
  8023  002198  6E37               	movwf	___ftmul@f3_as_product+2,c
  8024  00219A  6E31               	movwf	??___ftmul& (0+255),c
  8025  00219C  0E07               	movlw	7
  8026  00219E  6E38               	movwf	___ftmul@cntr,c
  8027  0021A0  5031               	movf	??___ftmul& (0+255),w,c
  8028  0021A2                     l4619:
  8029  0021A2  A02B               	btfss	___ftmul@f1,0,c
  8030  0021A4  D006               	goto	l4623
  8031  0021A6  502E               	movf	___ftmul@f2,w,c
  8032  0021A8  2635               	addwf	___ftmul@f3_as_product,f,c
  8033  0021AA  502F               	movf	___ftmul@f2+1,w,c
  8034  0021AC  2236               	addwfc	___ftmul@f3_as_product+1,f,c
  8035  0021AE  5030               	movf	___ftmul@f2+2,w,c
  8036  0021B0  2237               	addwfc	___ftmul@f3_as_product+2,f,c
  8037  0021B2                     l4623:
  8038  0021B2  90D8               	bcf	status,0,c
  8039  0021B4  322D               	rrcf	___ftmul@f1+2,f,c
  8040  0021B6  322C               	rrcf	___ftmul@f1+1,f,c
  8041  0021B8  322B               	rrcf	___ftmul@f1,f,c
  8042  0021BA  90D8               	bcf	status,0,c
  8043  0021BC  362E               	rlcf	___ftmul@f2,f,c
  8044  0021BE  362F               	rlcf	___ftmul@f2+1,f,c
  8045  0021C0  3630               	rlcf	___ftmul@f2+2,f,c
  8046  0021C2  2E38               	decfsz	___ftmul@cntr,f,c
  8047  0021C4  D7EE               	goto	l4619
  8048  0021C6  6E31               	movwf	??___ftmul& (0+255),c
  8049  0021C8  0E09               	movlw	9
  8050  0021CA  6E38               	movwf	___ftmul@cntr,c
  8051  0021CC  5031               	movf	??___ftmul& (0+255),w,c
  8052  0021CE                     l4629:
  8053  0021CE  A02B               	btfss	___ftmul@f1,0,c
  8054  0021D0  D006               	goto	l4633
  8055  0021D2  502E               	movf	___ftmul@f2,w,c
  8056  0021D4  2635               	addwf	___ftmul@f3_as_product,f,c
  8057  0021D6  502F               	movf	___ftmul@f2+1,w,c
  8058  0021D8  2236               	addwfc	___ftmul@f3_as_product+1,f,c
  8059  0021DA  5030               	movf	___ftmul@f2+2,w,c
  8060  0021DC  2237               	addwfc	___ftmul@f3_as_product+2,f,c
  8061  0021DE                     l4633:
  8062  0021DE  90D8               	bcf	status,0,c
  8063  0021E0  322D               	rrcf	___ftmul@f1+2,f,c
  8064  0021E2  322C               	rrcf	___ftmul@f1+1,f,c
  8065  0021E4  322B               	rrcf	___ftmul@f1,f,c
  8066  0021E6  90D8               	bcf	status,0,c
  8067  0021E8  3237               	rrcf	___ftmul@f3_as_product+2,f,c
  8068  0021EA  3236               	rrcf	___ftmul@f3_as_product+1,f,c
  8069  0021EC  3235               	rrcf	___ftmul@f3_as_product,f,c
  8070  0021EE  2E38               	decfsz	___ftmul@cntr,f,c
  8071  0021F0  D7EE               	goto	l4629
  8072  0021F2  C035  F015         	movff	___ftmul@f3_as_product,___ftpack@arg
  8073  0021F6  C036  F016         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8074  0021FA  C037  F017         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8075  0021FE  C034  F018         	movff	___ftmul@exp,___ftpack@exp
  8076  002202  C039  F019         	movff	___ftmul@sign,___ftpack@sign
  8077  002206  ECD1  F011         	call	___ftpack	;wreg free
  8078  00220A  C015  F02B         	movff	?___ftpack,?___ftmul
  8079  00220E  C016  F02C         	movff	?___ftpack+1,?___ftmul+1
  8080  002212  C017  F02D         	movff	?___ftpack+2,?___ftmul+2
  8081  002216                     l848:
  8082  002216  0012               	return	
  8083  002218                     __end_of___ftmul:
  8084                           	opt stack 0
  8085                           tblptru	equ	0xFF8
  8086                           tblptrh	equ	0xFF7
  8087                           tblptrl	equ	0xFF6
  8088                           tablat	equ	0xFF5
  8089                           prodh	equ	0xFF4
  8090                           prodl	equ	0xFF3
  8091                           intcon	equ	0xFF2
  8092                           indf0	equ	0xFEF
  8093                           fsr0h	equ	0xFEA
  8094                           fsr0l	equ	0xFE9
  8095                           wreg	equ	0xFE8
  8096                           postinc1	equ	0xFE6
  8097                           indf2	equ	0xFDF
  8098                           postinc2	equ	0xFDE
  8099                           postdec2	equ	0xFDD
  8100                           fsr2h	equ	0xFDA
  8101                           fsr2l	equ	0xFD9
  8102                           status	equ	0xFD8
  8103                           
  8104 ;; *************** function ___ftpack *****************
  8105 ;; Defined at:
  8106 ;;		line 62 in file "/opt/microchip/xc8/v1.30/sources/common/float.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;  arg             3   20[COMRAM] unsigned um
  8109 ;;  exp             1   23[COMRAM] unsigned char 
  8110 ;;  sign            1   24[COMRAM] unsigned char 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  3   20[COMRAM] float 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8122 ;;      Params:         5       0       0       0       0       0       0       0       0
  8123 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8124 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8125 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8126 ;;Total ram usage:        8 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:    3
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		___ftadd
  8133 ;;		___ftdiv
  8134 ;;		___ftmul
  8135 ;;		___lltoft
  8136 ;;		___lwtoft
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text44
  8141  0023A2                     __ptext44:
  8142                           	opt stack 0
  8143  0023A2                     ___ftpack:
  8144                           	opt stack 24
  8145                           
  8146                           ;incstack = 0
  8147  0023A2  5018               	movf	___ftpack@exp,w,c
  8148  0023A4  B4D8               	btfsc	status,2,c
  8149  0023A6  D005               	goto	l4441
  8150  0023A8  5015               	movf	___ftpack@arg,w,c
  8151  0023AA  1016               	iorwf	___ftpack@arg+1,w,c
  8152  0023AC  1017               	iorwf	___ftpack@arg+2,w,c
  8153  0023AE  A4D8               	btfss	status,2,c
  8154  0023B0  D00C               	goto	l4447
  8155  0023B2                     l4441:
  8156  0023B2  0E00               	movlw	0
  8157  0023B4  6E15               	movwf	?___ftpack,c
  8158  0023B6  0E00               	movlw	0
  8159  0023B8  6E16               	movwf	?___ftpack+1,c
  8160  0023BA  0E00               	movlw	0
  8161  0023BC  6E17               	movwf	?___ftpack+2,c
  8162  0023BE  D044               	goto	l747
  8163  0023C0                     l4445:
  8164  0023C0  2A18               	incf	___ftpack@exp,f,c
  8165  0023C2  90D8               	bcf	status,0,c
  8166  0023C4  3217               	rrcf	___ftpack@arg+2,f,c
  8167  0023C6  3216               	rrcf	___ftpack@arg+1,f,c
  8168  0023C8  3215               	rrcf	___ftpack@arg,f,c
  8169  0023CA                     l4447:
  8170  0023CA  0E00               	movlw	0
  8171  0023CC  1415               	andwf	___ftpack@arg,w,c
  8172  0023CE  6E1A               	movwf	??___ftpack& (0+255),c
  8173  0023D0  0E00               	movlw	0
  8174  0023D2  1416               	andwf	___ftpack@arg+1,w,c
  8175  0023D4  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  8176  0023D6  0EFE               	movlw	254
  8177  0023D8  1417               	andwf	___ftpack@arg+2,w,c
  8178  0023DA  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  8179  0023DC  501A               	movf	??___ftpack,w,c
  8180  0023DE  101B               	iorwf	??___ftpack+1,w,c
  8181  0023E0  101C               	iorwf	??___ftpack+2,w,c
  8182  0023E2  B4D8               	btfsc	status,2,c
  8183  0023E4  D00C               	goto	l4453
  8184  0023E6  D7EC               	goto	l4445
  8185  0023E8                     l4449:
  8186  0023E8  2A18               	incf	___ftpack@exp,f,c
  8187  0023EA  0E01               	movlw	1
  8188  0023EC  2615               	addwf	___ftpack@arg,f,c
  8189  0023EE  0E00               	movlw	0
  8190  0023F0  2216               	addwfc	___ftpack@arg+1,f,c
  8191  0023F2  0E00               	movlw	0
  8192  0023F4  2217               	addwfc	___ftpack@arg+2,f,c
  8193  0023F6  90D8               	bcf	status,0,c
  8194  0023F8  3217               	rrcf	___ftpack@arg+2,f,c
  8195  0023FA  3216               	rrcf	___ftpack@arg+1,f,c
  8196  0023FC  3215               	rrcf	___ftpack@arg,f,c
  8197  0023FE                     l4453:
  8198  0023FE  0E00               	movlw	0
  8199  002400  1415               	andwf	___ftpack@arg,w,c
  8200  002402  6E1A               	movwf	??___ftpack& (0+255),c
  8201  002404  0E00               	movlw	0
  8202  002406  1416               	andwf	___ftpack@arg+1,w,c
  8203  002408  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  8204  00240A  0EFF               	movlw	255
  8205  00240C  1417               	andwf	___ftpack@arg+2,w,c
  8206  00240E  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  8207  002410  501A               	movf	??___ftpack,w,c
  8208  002412  101B               	iorwf	??___ftpack+1,w,c
  8209  002414  101C               	iorwf	??___ftpack+2,w,c
  8210  002416  B4D8               	btfsc	status,2,c
  8211  002418  D006               	goto	l4457
  8212  00241A  D7E6               	goto	l4449
  8213  00241C                     l4455:
  8214  00241C  0618               	decf	___ftpack@exp,f,c
  8215  00241E  90D8               	bcf	status,0,c
  8216  002420  3615               	rlcf	___ftpack@arg,f,c
  8217  002422  3616               	rlcf	___ftpack@arg+1,f,c
  8218  002424  3617               	rlcf	___ftpack@arg+2,f,c
  8219  002426                     l4457:
  8220  002426  AE16               	btfss	___ftpack@arg+1,7,c
  8221  002428  D7F9               	goto	l4455
  8222  00242A  A018               	btfss	___ftpack@exp,0,c
  8223  00242C  9E16               	bcf	___ftpack@arg+1,7,c
  8224  00242E  90D8               	bcf	status,0,c
  8225  002430  3218               	rrcf	___ftpack@exp,f,c
  8226  002432  5018               	movf	___ftpack@exp,w,c
  8227  002434  1217               	iorwf	___ftpack@arg+2,f,c
  8228  002436  5019               	movf	___ftpack@sign,w,c
  8229  002438  A4D8               	btfss	status,2,c
  8230  00243A  8E17               	bsf	___ftpack@arg+2,7,c
  8231  00243C  C015  F015         	movff	___ftpack@arg,?___ftpack
  8232  002440  C016  F016         	movff	___ftpack@arg+1,?___ftpack+1
  8233  002444  C017  F017         	movff	___ftpack@arg+2,?___ftpack+2
  8234  002448                     l747:
  8235  002448  0012               	return	
  8236  00244A                     __end_of___ftpack:
  8237                           	opt stack 0
  8238                           tblptru	equ	0xFF8
  8239                           tblptrh	equ	0xFF7
  8240                           tblptrl	equ	0xFF6
  8241                           tablat	equ	0xFF5
  8242                           prodh	equ	0xFF4
  8243                           prodl	equ	0xFF3
  8244                           intcon	equ	0xFF2
  8245                           indf0	equ	0xFEF
  8246                           fsr0h	equ	0xFEA
  8247                           fsr0l	equ	0xFE9
  8248                           wreg	equ	0xFE8
  8249                           postinc1	equ	0xFE6
  8250                           indf2	equ	0xFDF
  8251                           postinc2	equ	0xFDE
  8252                           postdec2	equ	0xFDD
  8253                           fsr2h	equ	0xFDA
  8254                           fsr2l	equ	0xFD9
  8255                           status	equ	0xFD8
  8256                           
  8257 ;; *************** function _SerialRxPinInterrupt *****************
  8258 ;; Defined at:
  8259 ;;		line 156 in file "sensor_temp_adc_comm_main.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  rx              1   19[COMRAM] unsigned char 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;		None               void
  8266 ;; Registers used:
  8267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8273 ;;      Params:         0       0       0       0       0       0       0       0       0
  8274 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8275 ;;      Temps:         14       0       0       0       0       0       0       0       0
  8276 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8277 ;;Total ram usage:       15 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    2
  8280 ;; This function calls:
  8281 ;;		_ReadUSART
  8282 ;;		i2_putsUSART
  8283 ;; This function is called by:
  8284 ;;		Interrupt level 2
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	intcode
  8289  000008                     __pintcode:
  8290                           	opt stack 0
  8291  000008                     _SerialRxPinInterrupt:
  8292                           	opt stack 23
  8293                           
  8294                           ;incstack = 0
  8295  000008  CFFA F006          	movff	pclath,??_SerialRxPinInterrupt
  8296  00000C  CFFB F007          	movff	pclatu,??_SerialRxPinInterrupt+1
  8297  000010  EDC6  F012         	call	int_func,f	;refresh shadow registers
  8298                           pclatu	equ	0xFFB
  8299                           pclath	equ	0xFFA
  8300                           tblptru	equ	0xFF8
  8301                           tblptrh	equ	0xFF7
  8302                           tblptrl	equ	0xFF6
  8303                           tablat	equ	0xFF5
  8304                           prodh	equ	0xFF4
  8305                           prodl	equ	0xFF3
  8306                           intcon	equ	0xFF2
  8307                           indf0	equ	0xFEF
  8308                           fsr0h	equ	0xFEA
  8309                           fsr0l	equ	0xFE9
  8310                           wreg	equ	0xFE8
  8311                           postinc1	equ	0xFE6
  8312                           indf2	equ	0xFDF
  8313                           postinc2	equ	0xFDE
  8314                           postdec2	equ	0xFDD
  8315                           fsr2h	equ	0xFDA
  8316                           fsr2l	equ	0xFD9
  8317                           status	equ	0xFD8
  8318                           
  8319                           	psect	intcode_body
  8320  00258C                     __pintcode_body:
  8321                           	opt stack 23
  8322  00258C                     int_func:
  8323                           	opt stack 23
  8324  00258C  0006               	pop		; remove dummy address from shadow register refresh
  8325  00258E  CFE9 F008          	movff	fsr0l,??_SerialRxPinInterrupt+2
  8326  002592  CFEA F009          	movff	fsr0h,??_SerialRxPinInterrupt+3
  8327  002596  CFE1 F00A          	movff	fsr1l,??_SerialRxPinInterrupt+4
  8328  00259A  CFE2 F00B          	movff	fsr1h,??_SerialRxPinInterrupt+5
  8329  00259E  CFD9 F00C          	movff	fsr2l,??_SerialRxPinInterrupt+6
  8330  0025A2  CFDA F00D          	movff	fsr2h,??_SerialRxPinInterrupt+7
  8331  0025A6  CFF3 F00E          	movff	prodl,??_SerialRxPinInterrupt+8
  8332  0025AA  CFF4 F00F          	movff	prodh,??_SerialRxPinInterrupt+9
  8333  0025AE  CFF6 F010          	movff	tblptrl,??_SerialRxPinInterrupt+10
  8334  0025B2  CFF7 F011          	movff	tblptrh,??_SerialRxPinInterrupt+11
  8335  0025B6  CFF8 F012          	movff	tblptru,??_SerialRxPinInterrupt+12
  8336  0025BA  CFF5 F013          	movff	tablat,??_SerialRxPinInterrupt+13
  8337                           
  8338                           ;sensor_temp_adc_comm_main.c: 158: char rx;
  8339                           ;sensor_temp_adc_comm_main.c: 159: if ( PIR1bits.RCIF == 1)
  8340  0025BE  AA9E               	btfss	3998,5,c	;volatile
  8341  0025C0  D016               	goto	i2l87
  8342                           
  8343                           ;sensor_temp_adc_comm_main.c: 160: {
  8344                           ;sensor_temp_adc_comm_main.c: 161: rx = ReadUSART();
  8345  0025C2  EC8E  F016         	call	_ReadUSART	;wreg free
  8346  0025C6  6E14               	movwf	SerialRxPinInterrupt@rx,c
  8347                           
  8348                           ;sensor_temp_adc_comm_main.c: 163: _delay((unsigned long)((200)*(20000000/4000000.0)));
  8349  0025C8  0EFA               	movlw	250
  8350  0025CA                     i2u505_47:
  8351  0025CA  F000               	nop	
  8352  0025CC  2EE8               	decfsz	wreg,f,c
  8353  0025CE  D7FD               	goto	i2u505_47
  8354                           
  8355                           ;sensor_temp_adc_comm_main.c: 164: putsUSART(pBuffer);
  8356  0025D0  0100               	movlb	0	; () banked
  8357  0025D2  C0AF  F003         	movff	_pBuffer+1,i2putsUSART@data+1
  8358  0025D6  0100               	movlb	0	; () banked
  8359  0025D8  C0AE  F002         	movff	_pBuffer,i2putsUSART@data
  8360  0025DC  ECC7  F014         	call	i2_putsUSART	;wreg free
  8361                           
  8362                           ;sensor_temp_adc_comm_main.c: 165: putsUSART("\n\r");
  8363  0025E0  0E08               	movlw	high (STR_1+6)
  8364  0025E2  6E03               	movwf	i2putsUSART@data+1,c
  8365  0025E4  0E7D               	movlw	low (STR_1+6)
  8366  0025E6  6E02               	movwf	i2putsUSART@data,c
  8367  0025E8  ECC7  F014         	call	i2_putsUSART	;wreg free
  8368                           
  8369                           ;sensor_temp_adc_comm_main.c: 169: PIR1bits.RCIF = 0;
  8370  0025EC  9A9E               	bcf	3998,5,c	;volatile
  8371  0025EE                     i2l87:
  8372  0025EE  C013  FFF5         	movff	??_SerialRxPinInterrupt+13,tablat
  8373  0025F2  C012  FFF8         	movff	??_SerialRxPinInterrupt+12,tblptru
  8374  0025F6  C011  FFF7         	movff	??_SerialRxPinInterrupt+11,tblptrh
  8375  0025FA  C010  FFF6         	movff	??_SerialRxPinInterrupt+10,tblptrl
  8376  0025FE  C00F  FFF4         	movff	??_SerialRxPinInterrupt+9,prodh
  8377  002602  C00E  FFF3         	movff	??_SerialRxPinInterrupt+8,prodl
  8378  002606  C00D  FFDA         	movff	??_SerialRxPinInterrupt+7,fsr2h
  8379  00260A  C00C  FFD9         	movff	??_SerialRxPinInterrupt+6,fsr2l
  8380  00260E  C00B  FFE2         	movff	??_SerialRxPinInterrupt+5,fsr1h
  8381  002612  C00A  FFE1         	movff	??_SerialRxPinInterrupt+4,fsr1l
  8382  002616  C009  FFEA         	movff	??_SerialRxPinInterrupt+3,fsr0h
  8383  00261A  C008  FFE9         	movff	??_SerialRxPinInterrupt+2,fsr0l
  8384  00261E  C007  FFFB         	movff	??_SerialRxPinInterrupt+1,pclatu
  8385  002622  C006  FFFA         	movff	??_SerialRxPinInterrupt,pclath
  8386  002626  0011               	retfie		f
  8387  002628                     __end_of_SerialRxPinInterrupt:
  8388                           	opt stack 0
  8389                           pclatu	equ	0xFFB
  8390                           pclath	equ	0xFFA
  8391                           tblptru	equ	0xFF8
  8392                           tblptrh	equ	0xFF7
  8393                           tblptrl	equ	0xFF6
  8394                           tablat	equ	0xFF5
  8395                           prodh	equ	0xFF4
  8396                           prodl	equ	0xFF3
  8397                           intcon	equ	0xFF2
  8398                           indf0	equ	0xFEF
  8399                           fsr0h	equ	0xFEA
  8400                           fsr0l	equ	0xFE9
  8401                           wreg	equ	0xFE8
  8402                           postinc1	equ	0xFE6
  8403                           fsr1h	equ	0xFE2
  8404                           fsr1l	equ	0xFE1
  8405                           indf2	equ	0xFDF
  8406                           postinc2	equ	0xFDE
  8407                           postdec2	equ	0xFDD
  8408                           fsr2h	equ	0xFDA
  8409                           fsr2l	equ	0xFD9
  8410                           status	equ	0xFD8
  8411                           
  8412 ;; *************** function i2_putsUSART *****************
  8413 ;; Defined at:
  8414 ;;		line 14 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uputs.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  data            2    1[COMRAM] PTR unsigned char 
  8417 ;;		 -> NULL(0), STR_5(3), STR_1(9), main@buffer(6), 
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;		None               void
  8422 ;; Registers used:
  8423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8429 ;;      Params:         2       0       0       0       0       0       0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8431 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8432 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8433 ;;Total ram usage:        4 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    1
  8436 ;; This function calls:
  8437 ;;		i2_WriteUSART
  8438 ;; This function is called by:
  8439 ;;		_SerialRxPinInterrupt
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text46
  8444  00298E                     __ptext46:
  8445                           	opt stack 0
  8446  00298E                     i2_putsUSART:
  8447                           	opt stack 23
  8448  00298E                     i2l288:
  8449  00298E  A2AC               	btfss	4012,1,c	;volatile
  8450  002990  D7FE               	goto	i2l288
  8451  002992  C002  FFF6         	movff	i2putsUSART@data,tblptrl
  8452  002996  C003  FFF7         	movff	i2putsUSART@data+1,tblptrh
  8453  00299A  6AF8               	clrf	tblptru,c
  8454  00299C  0E07               	movlw	(high __ramtop+-1)
  8455  00299E  64F7               	cpfsgt	tblptrh,c
  8456  0029A0  D003               	bra	i2u379_47
  8457  0029A2  0008               	tblrd		*
  8458  0029A4  50F5               	movf	tablat,w,c
  8459  0029A6  D005               	bra	i2u379_40
  8460  0029A8                     i2u379_47:
  8461  0029A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  8462  0029AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  8463  0029B0  50EF               	movf	indf0,w,c
  8464  0029B2                     i2u379_40:
  8465  0029B2  ECC0  F016         	call	i2_WriteUSART
  8466  0029B6  5002               	movf	i2putsUSART@data,w,c
  8467  0029B8  6E04               	movwf	??i2_putsUSART& (0+255),c
  8468  0029BA  5003               	movf	i2putsUSART@data+1,w,c
  8469  0029BC  6E05               	movwf	(??i2_putsUSART+1)& (0+255),c
  8470  0029BE  4A02               	infsnz	i2putsUSART@data,f,c
  8471  0029C0  2A03               	incf	i2putsUSART@data+1,f,c
  8472  0029C2  C004  FFF6         	movff	??i2_putsUSART,tblptrl
  8473  0029C6  C005  FFF7         	movff	??i2_putsUSART+1,tblptrh
  8474  0029CA  6AF8               	clrf	tblptru,c
  8475  0029CC  0E07               	movlw	(high __ramtop+-1)
  8476  0029CE  64F7               	cpfsgt	tblptrh,c
  8477  0029D0  D003               	bra	i2u380_47
  8478  0029D2  0008               	tblrd		*
  8479  0029D4  50F5               	movf	tablat,w,c
  8480  0029D6  D005               	bra	i2u380_40
  8481  0029D8                     i2u380_47:
  8482  0029D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  8483  0029DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  8484  0029E0  50EF               	movf	indf0,w,c
  8485  0029E2                     i2u380_40:
  8486  0029E2  0900               	iorlw	0
  8487  0029E4  B4D8               	btfsc	status,2,c
  8488  0029E6  0012               	return	
  8489  0029E8  D7D2               	goto	i2l288
  8490  0029EA                     __end_ofi2_putsUSART:
  8491                           	opt stack 0
  8492                           pclatu	equ	0xFFB
  8493                           pclath	equ	0xFFA
  8494                           tblptru	equ	0xFF8
  8495                           tblptrh	equ	0xFF7
  8496                           tblptrl	equ	0xFF6
  8497                           tablat	equ	0xFF5
  8498                           prodh	equ	0xFF4
  8499                           prodl	equ	0xFF3
  8500                           intcon	equ	0xFF2
  8501                           indf0	equ	0xFEF
  8502                           fsr0h	equ	0xFEA
  8503                           fsr0l	equ	0xFE9
  8504                           wreg	equ	0xFE8
  8505                           postinc1	equ	0xFE6
  8506                           fsr1h	equ	0xFE2
  8507                           fsr1l	equ	0xFE1
  8508                           indf2	equ	0xFDF
  8509                           postinc2	equ	0xFDE
  8510                           postdec2	equ	0xFDD
  8511                           fsr2h	equ	0xFDA
  8512                           fsr2l	equ	0xFD9
  8513                           status	equ	0xFD8
  8514                           
  8515 ;; *************** function i2_WriteUSART *****************
  8516 ;; Defined at:
  8517 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  data            1    wreg     unsigned char 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  data            1    0[COMRAM] unsigned char 
  8522 ;; Return value:  Size  Location     Type
  8523 ;;		None               void
  8524 ;; Registers used:
  8525 ;;		wreg
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/0
  8528 ;;		On exit  : 0/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8531 ;;      Params:         0       0       0       0       0       0       0       0       0
  8532 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8534 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8535 ;;Total ram usage:        1 bytes
  8536 ;; Hardware stack levels used:    1
  8537 ;; This function calls:
  8538 ;;		Nothing
  8539 ;; This function is called by:
  8540 ;;		i2_putsUSART
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text47
  8545  002D80                     __ptext47:
  8546                           	opt stack 0
  8547  002D80                     i2_WriteUSART:
  8548                           	opt stack 23
  8549                           
  8550                           ;incstack = 0
  8551                           ;i2WriteUSART@data stored from wreg
  8552  002D80  CFE8 F001          	movff	wreg,i2WriteUSART@data
  8553  002D84  ACAC               	btfss	4012,6,c	;volatile
  8554  002D86  D003               	goto	i2l4863
  8555  002D88  90AC               	bcf	4012,0,c	;volatile
  8556  002D8A  B24A               	btfsc	_USART_Status,1,c
  8557  002D8C  80AC               	bsf	4012,0,c	;volatile
  8558  002D8E                     i2l4863:
  8559  002D8E  C001  FFAD         	movff	i2WriteUSART@data,4013	;volatile
  8560  002D92  0012               	return	
  8561  002D94                     __end_ofi2_WriteUSART:
  8562                           	opt stack 0
  8563                           pclatu	equ	0xFFB
  8564                           pclath	equ	0xFFA
  8565                           tblptru	equ	0xFF8
  8566                           tblptrh	equ	0xFF7
  8567                           tblptrl	equ	0xFF6
  8568                           tablat	equ	0xFF5
  8569                           prodh	equ	0xFF4
  8570                           prodl	equ	0xFF3
  8571                           intcon	equ	0xFF2
  8572                           indf0	equ	0xFEF
  8573                           fsr0h	equ	0xFEA
  8574                           fsr0l	equ	0xFE9
  8575                           wreg	equ	0xFE8
  8576                           postinc1	equ	0xFE6
  8577                           fsr1h	equ	0xFE2
  8578                           fsr1l	equ	0xFE1
  8579                           indf2	equ	0xFDF
  8580                           postinc2	equ	0xFDE
  8581                           postdec2	equ	0xFDD
  8582                           fsr2h	equ	0xFDA
  8583                           fsr2l	equ	0xFD9
  8584                           status	equ	0xFD8
  8585                           
  8586 ;; *************** function _ReadUSART *****************
  8587 ;; Defined at:
  8588 ;;		line 15 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;		None
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;  data            1    0[COMRAM] unsigned char 
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      unsigned char 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8602 ;;      Params:         0       0       0       0       0       0       0       0       0
  8603 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8605 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8606 ;;Total ram usage:        1 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_SerialRxPinInterrupt
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text48
  8616  002D1C                     __ptext48:
  8617                           	opt stack 0
  8618  002D1C                     _ReadUSART:
  8619                           	opt stack 24
  8620                           
  8621                           ;incstack = 0
  8622  002D1C  0EF2               	movlw	242
  8623  002D1E  164A               	andwf	_USART_Status,f,c
  8624  002D20  ACAB               	btfss	4011,6,c	;volatile
  8625  002D22  D003               	goto	i2l301
  8626  002D24  904A               	bcf	_USART_Status,0,c
  8627  002D26  B0AB               	btfsc	4011,0,c	;volatile
  8628  002D28  804A               	bsf	_USART_Status,0,c
  8629  002D2A                     i2l301:
  8630  002D2A  B4AB               	btfsc	4011,2,c	;volatile
  8631  002D2C  844A               	bsf	_USART_Status,2,c
  8632  002D2E  B2AB               	btfsc	4011,1,c	;volatile
  8633  002D30  864A               	bsf	_USART_Status,3,c
  8634  002D32  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  8635  002D36  5001               	movf	ReadUSART@data,w,c
  8636  002D38  0012               	return	
  8637  002D3A                     __end_of_ReadUSART:
  8638                           	opt stack 0
  8639                           pclatu	equ	0xFFB
  8640                           pclath	equ	0xFFA
  8641                           tblptru	equ	0xFF8
  8642                           tblptrh	equ	0xFF7
  8643                           tblptrl	equ	0xFF6
  8644                           tablat	equ	0xFF5
  8645                           prodh	equ	0xFF4
  8646                           prodl	equ	0xFF3
  8647                           intcon	equ	0xFF2
  8648                           indf0	equ	0xFEF
  8649                           fsr0h	equ	0xFEA
  8650                           fsr0l	equ	0xFE9
  8651                           wreg	equ	0xFE8
  8652                           postinc1	equ	0xFE6
  8653                           fsr1h	equ	0xFE2
  8654                           fsr1l	equ	0xFE1
  8655                           indf2	equ	0xFDF
  8656                           postinc2	equ	0xFDE
  8657                           postdec2	equ	0xFDD
  8658                           fsr2h	equ	0xFDA
  8659                           fsr2l	equ	0xFD9
  8660                           status	equ	0xFD8
  8661                           pclatu	equ	0xFFB
  8662                           pclath	equ	0xFFA
  8663                           tblptru	equ	0xFF8
  8664                           tblptrh	equ	0xFF7
  8665                           tblptrl	equ	0xFF6
  8666                           tablat	equ	0xFF5
  8667                           prodh	equ	0xFF4
  8668                           prodl	equ	0xFF3
  8669                           intcon	equ	0xFF2
  8670                           indf0	equ	0xFEF
  8671                           fsr0h	equ	0xFEA
  8672                           fsr0l	equ	0xFE9
  8673                           wreg	equ	0xFE8
  8674                           postinc1	equ	0xFE6
  8675                           fsr1h	equ	0xFE2
  8676                           fsr1l	equ	0xFE1
  8677                           indf2	equ	0xFDF
  8678                           postinc2	equ	0xFDE
  8679                           postdec2	equ	0xFDD
  8680                           fsr2h	equ	0xFDA
  8681                           fsr2l	equ	0xFD9
  8682                           status	equ	0xFD8
  8683                           
  8684                           	psect	rparam
  8685  0000                     pclatu	equ	0xFFB
  8686                           pclath	equ	0xFFA
  8687                           tblptru	equ	0xFF8
  8688                           tblptrh	equ	0xFF7
  8689                           tblptrl	equ	0xFF6
  8690                           tablat	equ	0xFF5
  8691                           prodh	equ	0xFF4
  8692                           prodl	equ	0xFF3
  8693                           intcon	equ	0xFF2
  8694                           indf0	equ	0xFEF
  8695                           fsr0h	equ	0xFEA
  8696                           fsr0l	equ	0xFE9
  8697                           wreg	equ	0xFE8
  8698                           postinc1	equ	0xFE6
  8699                           fsr1h	equ	0xFE2
  8700                           fsr1l	equ	0xFE1
  8701                           indf2	equ	0xFDF
  8702                           postinc2	equ	0xFDE
  8703                           postdec2	equ	0xFDD
  8704                           fsr2h	equ	0xFDA
  8705                           fsr2l	equ	0xFD9
  8706                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    118
    Data        0
    BSS         7
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      74
    BANK0           160     72      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK0[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 7
		 -> NULL(NULL[0]), STR_3(CODE[2]), STR_2(CODE[7]), main@buffer(BANK0[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), STR_5(CODE[3]), STR_1(CODE[9]), main@buffer(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 6
		 -> NULL(NULL[0]), main@buffer(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S595$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    pBuffer	PTR unsigned char  size(2) Largest target is 6
		 -> NULL(NULL[0]), main@buffer(BANK0[6]), 


Critical Paths under _main in COMRAM

    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___asftadd->_fround
    ___ftadd->___ftpack
    _putsUSART->_WriteUSART
    _putrsXLCD->_WriteDataXLCD
    ___lwtoft->___ftpack
    ___ftdiv->___ftmul
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    ___ftmul->___wmul

Critical Paths under _SerialRxPinInterrupt in COMRAM

    _SerialRxPinInterrupt->i2_putsUSART
    i2_putsUSART->i2_WriteUSART

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fttol

Critical Paths under _SerialRxPinInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SerialRxPinInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SerialRxPinInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SerialRxPinInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SerialRxPinInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SerialRxPinInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SerialRxPinInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SerialRxPinInterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   54579
                                             56 BANK0     16    16      0
                            _BusyADC
                           _BusyXLCD
                         _ConvertADC
                        _Delay10TCYx
                           _Delay_ms
                            _OpenADC
                          _OpenUSART
                           _OpenXLCD
                            _ReadADC
                       _SetDDRamAddr
                       _WriteCmdXLCD
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                          _putrsXLCD
                          _putsUSART
                           _setupMCU
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             54    47      7   44968
                                              6 BANK0     50    43      7
                          ___asftadd
                          ___asftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8912
                                             57 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8714
                                             57 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2067
                                             36 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                             20 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                             27 COMRAM     9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                             20 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          16    10      6     552
                                             20 COMRAM    16    10      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1846
                                             28 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                             20 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                             20 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     759
                                             64 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                             20 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___asftsub                                            5     0      5    3099
                                             46 COMRAM     5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    2927
                                             40 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5    3918
                                             57 COMRAM     5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___asftadd                                            5     0      5    2948
                                             67 COMRAM     5     0      5
                            ___ftadd
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    2776
                                             28 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _setupMCU                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            4     2      2     173
                                             21 COMRAM     4     2      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     248
                                             21 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                             20 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             5     2      3    1799
                                             28 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2190
                                             57 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     154
                                             24 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                             20 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _SetDDRamAddr                                         4     4      0      44
                                             20 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      22
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             5     3      2     152
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delay10TCYx                                          1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3746
                                             42 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                             20 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                             20 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SerialRxPinInterrupt                                15    15      0     333
                                              5 COMRAM    15    15      0
                          _ReadUSART
                        i2_putsUSART
 ---------------------------------------------------------------------------------
 (7) i2_putsUSART                                          4     2      2     309
                                              1 COMRAM     4     2      2
                       i2_WriteUSART
 ---------------------------------------------------------------------------------
 (8) i2_WriteUSART                                         1     1      0      73
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _BusyXLCD
     _DelayFor18TCY
   _ConvertADC
   _Delay10TCYx
   _Delay_ms
   _OpenADC
   _OpenUSART
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _Delay10KTCYx
     _DelayPORXLCD
       _Delay1KTCYx
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _ReadADC
   _SetDDRamAddr
     _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   ___ftdiv
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     ___ftpack
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _putsUSART
     _WriteUSART
   _setupMCU
   _sprintf
     ___asftadd
       ___ftadd
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___asftmul
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___asftsub
       ___ftsub
         ___ftadd
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___awdiv
       ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _SerialRxPinInterrupt (ROOT)
   _ReadUSART
   i2_putsUSART
     i2_WriteUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      50       5       50.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      4A       1       77.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9A      20        0.0%
DATA                 0      0      9A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Sep 26 02:07:57 2014

                 ___asftadd@f2 0046                  ___asftadd@f1p 0044                             l99 2C98  
                 ___awdiv@sign 0022            ___wmul@multiplicand 0027                   ___asftmul@f2 003C  
                 ___asftsub@f2 0031                   ___ftadd@exp1 0028                   ___ftadd@exp2 0027  
                 ___ftadd@sign 0026          __size_ofi2_WriteUSART 0014                            l217 2DC2  
                          l129 17E4                            l325 2BD8                            l326 2BEA  
                          l239 28D2                            l271 27CC                            l280 2810  
                          l275 27E0                            l276 27E2                            l188 104C  
                          l277 27EC                            l278 27EE                            l640 2D98  
                          l288 28D6                            l633 2DAA                            l626 2D58  
                          l706 1EFA                            l715 1EEA                            l708 1E60  
                          l816 22F0                            l808 1D48                            l912 272C  
                          l824 212A                            l833 211A                            l818 229A  
                          l842 26B6                            l922 2796                            l747 2448  
                          l819 22C0                            l827 20C2                            l848 2216  
                          l784 1C50                            l785 1DC0                            l858 2CE8  
                          l788 1C7C                            l868 2026                            l799 1D2C  
                 __CFG_BOR$OFF 000000          __size_of_WriteCmdXLCD 0040                   ___awmod@sign 001B  
                          wreg 000FE8                   __CFG_FOSC$HS 000000                  ___asftmul@f1p 003A  
                  _sprintf$606 0076                  ___asftsub@f1p 002F            __end_ofi2_putsUSART 29EA  
                 __CFG_LVP$OFF 000000                   ___ftdiv@cntr 0043                   ___ftdiv@sign 0048  
                 __CFG_WDT$OFF 000000                           l4301 205C                           l4331 20E2  
                         l4315 209A                           l4235 19E2                           l4227 1922  
                         l4341 210A                           l3711 27CE                           l3703 27C0  
                         l4407 2D7A                           l4511 1CE0                           l4351 1DEE  
                         l4343 2116                           l4335 20F2                           l4255 15E4  
                         l4441 23B2                           l4513 1CEA                           l4505 1CBE  
                         l4273 17C2                           l4249 1540                           l3811 24DE  
                         l3803 24BE                           l4531 1D64                           l4523 1D1C  
                         l4515 1CF2                           l4267 1712                           l4259 15F2  
                         l4453 23FE                           l4445 23C0                           l4605 216C  
                         l4541 1D9C                           l4525 1D26                           l4517 1CFA  
                         l4357 1E1A                           l4285 2CC8                           l4455 241C  
                         l4447 23CA                           l4623 21B2                           l3807 24CE  
                         l4551 2232                           l3903 2934                           l4391 1EC2  
                         l4295 2042                           l4711 254A                           l4703 251C  
                         l5503 09BC                           l4457 2426                           l4449 23E8  
                         l4633 21DE                           l4377 1E90                           l4713 2552  
                         l5513 0A30                           l5441 1AC8                           l4619 21A2  
                         l4483 1C5E                           l4387 1EB2                           l4715 2556  
                         l4723 2574                           l4707 2538                           l5611 0E5A  
                         l5507 0A00                           l4629 21CE                           l4557 2258  
                         l3909 2966                           l4805 26DE                           l4397 1EDA  
                         l5701 1298                           l5525 0A8C                           l5517 0A38  
                         l5509 0A1A                           l3791 248E                           l4735 2658  
                         l4807 26EA                           l4399 1EE6                           l4671 2358  
                         l4727 2582                           l4719 256A                           l5615 0EBA  
                         l5551 0BCA                           l5535 0AF6                           l5519 0A6A  
                         l3689 2C84                           l4489 1C8A                           l4745 26B4  
                         l4817 271E                           l4809 26EE                           l4833 2788  
                         l4825 2754                           l4841 2828                           l4673 2360  
                         l4665 233E                           l5721 137A                           l5713 131A  
                         l5633 0F42                           l5641 0FE0                           l5625 0EFC  
                         l5457 1B24                           l3795 249E                           l4739 2688  
                         l4827 2760                           l4691 2398                           l4683 2380  
                         l4675 2364                           l4659 231E                           l5723 1386  
                         l5715 1328                           l5707 12D0                           l5643 0FF0  
                         l5619 0EDE                           l5563 0C52                           l5483 08C6  
                         l5459 1B28                           l3789 2484                           l4829 2764  
                         l5477 08A8                           l4599 2146                           l3799 24AE  
                         l4839 281C                           l4687 238A                           l5719 136C  
                         l5663 1088                           l5655 1050                           l5591 0D9E  
                         l5575 0CFE                           l5567 0C90                           l5559 0C2A  
                         l5735 13E4                           l5729 13AE                           l5649 100E  
                         l5737 1408                           l5489 0908                           l5497 0988  
                         l5747 1F1C                           l5667 10DC                           l5579 0D24  
                         l5765 1F90                           l5693 122A                           l5685 11F8  
                         l5677 11CA                           l5597 0DFC                           l5783 2016  
                         l5775 1FCA                           l5679 11DA                           l5687 1206  
                         l5777 1FE4                           l5769 1FAE                           l5697 1258  
                         l5779 1FEC                           STR_1 0877                           STR_2 0880  
                         STR_3 088D                           STR_4 0887                           STR_5 087D  
                         u2100 28FA                           u2110 292A                           u2107 28F0  
                         u3020 1EC8                           u2117 2920                           u2240 295E  
                         u2225 2A08                           u2250 2986                           u3131 1C1A  
                         u3141 1C2E                           u2270 2DC0                           u2247 2954  
                         u2257 297C                           u3411 2156                           u3420 215E  
                         u3341 2228                           u5007 1B0C                           u5017 2D9A  
                         u3361 2242                           u3370 224A                           u5027 2D5E  
                         u5037 2C8A                           u4421 1A56                           u3391 213C  
                         u5047 2DAC                           u2930 20F8                           _PEIE 007F96  
                         u4540 0B4A                           u2861 2038                           u4525 0ACE  
                         u2950 1DE0                           u2881 2052                           u4545 0B3E  
                         u2970 1E0C                           u2955 1DD6                           _RCIE 007CED  
                         _RCIF 007CF5                           u4901 1F0C                           u2975 1E02  
                         u4920 1F3A                           u4925 1F32                           u4950 1FB8  
                         _RCIP 007CFD                           i2l87 25EE                           u4987 1AE6  
                         u4997 1AF8                           _main 1A22                   ___ftpack@arg 0015  
                 ___ftpack@exp 0018                           fsr0h 000FEA                           fsr1h 000FE2  
                         indf0 000FEF                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         pclat 000FFA         __size_of_WriteDataXLCD 0040                           prodh 000FF4  
                         prodl 000FF3                           start 0014                  __CFG_IESO$OFF 000000  
                 _sprintf$2197 0073                  __CFG_MCLRE$ON 000000                   ___ftmul@cntr 0038  
                 ___ftmul@sign 0039                __end_of_BusyADC 2DC4                __end_of_ReadADC 2DCE  
                 i2_WriteUSART 2D80                    _Delay10TCYx 2DA6                __end_of_OpenADC 28D6  
                 ___fttol@exp1 0065                   ___fttol@lval 0061                   _WriteCmdXLCD 2A84  
                  _Delay1KTCYx 2D94                  __CFG_PLLDIV$1 000000                  ?_SetDDRamAddr 0001  
                        ?_main 0001                __end_of___awdiv 23A2                __end_of___ftadd 1DC2  
              __end_of___awmod 258C                __end_of___ftdiv 22F2                __end_of___ftneg 2CF6  
              __end_of___lldiv 273E                __end_of___ftmul 2218                ___awdiv@divisor 001E  
              __end_of___llmod 27A8                __end_of___ftsub 2C22                __end_of___fttol 2028  
                        i2l301 2D2A                          i2l288 298E                ___awdiv@counter 0021  
                        _RCREG 000FAE                          _RCSTA 000FAB                          _SPBRG 000FAF  
                        _PORTB 000F81                  __CFG_USBDIV$1 000000                          _TRISB 000F93  
                        _TXREG 000FAD          __size_of_Delay10KTCYx 0018                          _TXSTA 000FAC  
                __CFG_PWRT$OFF 000000                   ___lltoft@exp 0025                 __CFG_FCMEN$OFF 000000  
       SerialRxPinInterrupt@rx 0014                __end_of_dpowers 0829                          _scale 1416  
              __end_of_isdigit 2CD0                  ___ftpack@sign 0019                     _ConvertADC 2DD6  
                        tablat 000FF5                          status 000FD8                __end_of_sprintf 1416  
             __end_of_Delay_ms 2CA6                 WriteUSART@data 0015                __initialization 2D3A  
                 __end_of_main 1C0A               __end_of_BusyXLCD 2BEC                   _Delay10KTCYx 2D54  
        __size_of_DelayPORXLCD 0008                 ??_SetDDRamAddr 0015               __end_of_OpenXLCD 24F0  
                       ??_main 0098                  ___fttol@sign1 0060                    i2_putsUSART 298E  
                __activetblptr 000002                  _WriteDataXLCD 2A44           __size_of__tdiv_to_l_ 0104  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
             ___llmod@dividend 0015                         ?_scale 003A                         _ADRESH 000FC4  
                       _ADRESL 000FC3               ___awdiv@dividend 001C               __end_of___ftpack 244A  
             __end_of___lltoft 2876                         i2l4863 2D8E               __end_of___lwtoft 2C7A  
           __size_of_ReadUSART 001E                         _SPBRGH 000FB0                      ??_BusyADC 0015  
                    ??_ReadADC 0017                      ??_OpenADC 0017                   _DelayPORXLCD 2DCE  
               __CFG_XINST$OFF 000000               __end_of__powers_ 0877             __size_of_OpenUSART 006A  
                       ___ftge 2628                         ___wmul 2B78                      ??___awdiv 0020  
                    ??___ftadd 0023                 __CFG_STVREN$ON 000000                      ??___awmod 0019  
                    ??___ftdiv 0040                      ??___ftneg 0018                      ??___lldiv 001D  
                    ??___ftmul 0031                      ??___llmod 001D                      ??___ftsub 002F  
                    ??___fttol 0045                         _fround 17E6               ___awdiv@quotient 0023  
              ___awmod@divisor 0017                ___awmod@counter 001A                 ?_WriteDataXLCD 0001  
        ___ftmul@f3_as_product 0035                      ??_isdigit 0015               __end_of_setupMCU 2C4E  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                      ??_sprintf 006D                    ?_ConvertADC 0001  
           __size_of___asftadd 003C             __size_of___asftmul 003C             __size_of___asftsub 003C  
                   __accesstop 0060        __end_of__initialization 2D4A                __CFG_PBADEN$OFF 000000  
                   ___ftadd@f1 001D                     ___ftadd@f2 0020                     ___ftge@ff1 0015  
                   ___ftge@ff2 0018                     ___ftdiv@f1 003A                     ___ftdiv@f2 003D  
                   ___ftdiv@f3 0044  __size_of_SerialRxPinInterrupt 2620                     ___ftneg@f1 0015  
                   ___ftmul@f1 002B                     ___ftmul@f2 002E                     ___ftsub@f1 0029  
                   ___ftsub@f2 002C                     ___fttol@f1 0041                     _WriteUSART 2D6C  
               __pcstackCOMRAM 0001                     ___lltoft@c 001D                  __end_of_scale 17E6  
            __end_of_ReadUSART 2D3A                     ___lwtoft@c 001D                     __div_to_l_ 1DC2  
                    ?_Delay_ms 0015                  ReadUSART@data 0001              __end_of_OpenUSART 2812  
              __div_to_l_@exp1 0024                __div_to_l_@cntr 0023                   sprintf@integ 0084  
                      ??_scale 003D         __size_of_DelayFor18TCY 0026                __div_to_l_@quot 001F  
                 sprintf@width 008E                     __pbssBANK0 00A8                      ?_BusyXLCD 0001  
              WriteCmdXLCD@cmd 0015           __end_of_SetDDRamAddr 2A44                      ?_OpenXLCD 0001  
                __div_to_l_@f1 0015                  __div_to_l_@f2 0018                        ?___ftge 0015  
            WriteDataXLCD@data 0015                   ?_Delay10TCYx 0001                        ?___wmul 0025  
              ??_WriteDataXLCD 0015                   ?_Delay1KTCYx 0001                  putsUSART@data 0016  
            __end_of___asftadd 2B78                        ?_fround 003A              __end_of___asftmul 2B3C  
            __end_of___asftsub 2B00            __size_of_ConvertADC 0004                      ?___ftpack 0015  
                    ?___lltoft 001D                      ?___lwtoft 001D                     ??_Delay_ms 0017  
           __size_of_putsUSART 005C             __size_of_putrsXLCD 005C                     ??_BusyXLCD 0015  
              __CFG_VREGEN$OFF 000000                        _BusyADC 2DB8                        _ReadADC 2DC4  
                   ??_OpenXLCD 0019                        _OpenADC 2876              __end_of__npowers_ 0850  
                      __Hparam 0000                     _scale$2196 003D                        __Lparam 0000  
                  ?_WriteUSART 0001                      ?_setupMCU 0001                __size_of___ftge 0090  
                      ___awdiv 22F2                  _DelayFor18TCY 2CF6                        ___ftadd 1C0A  
                      ___awmod 24F0                        ___ftdiv 2218                        ___ftneg 2CD0  
                      ___lldiv 26B8                __size_of___wmul 003A                        ___ftmul 212C  
                      ___llmod 273E                        ___ftsub 2BEC                        ___fttol 1EFC  
                    _CMCONbits 000FB4                   __psmallconst 0800                        _pBuffer 00AE  
                      __pcinit 2D3A                     ??___ftpack 001A                putrsXLCD@buffer 0016  
              __size_of_fround 023C                Delay10TCYx@unit 0015                        __ramtop 0800  
                   ??___lltoft 0021                        __ptext0 1A22                        __ptext1 0890  
                      __ptext2 1416                        __ptext3 2CA6                        __ptext4 17E6  
                      __ptext5 2B78                        __ptext6 24F0                        __ptext7 22F2  
                      __ptext8 2028                        __ptext9 1DC2                   ?i2_putsUSART 0002  
                   ??___lwtoft 0020                    ?__div_to_l_ 0015                        _dpowers 0801  
                      _isdigit 2CA6               ___awmod@dividend 0015                 OpenADC@config2 0015  
                      _sprintf 0890                 __pintcode_body 258C           end_of_initialization 2D4A  
                    Delay_ms@i 0018                  __Lmediumconst 0000                        int_func 258C  
              ___lldiv@divisor 0019                ___lldiv@counter 0022                     ??_setupMCU 0015  
                    _RCSTAbits 000FAB                 ?_DelayFor18TCY 0001                        postdec2 000FDD  
                      postinc1 000FE6                        postinc2 000FDE              __end_of_putsUSART 2932  
               __tdiv_to_l_@f1 0015                 __tdiv_to_l_@f2 0018              __end_of_putrsXLCD 298E  
                ??__tdiv_to_l_ 001B                      _TRISAbits 000F92                      _TRISBbits 000F93  
                    _TRISCbits 000F94          __size_of_SetDDRamAddr 005A            __size_of_WriteUSART 0014  
                 ??_ConvertADC 0015                    ___ftdiv@exp 0047                     main@buffer 009D  
                    _TXSTAbits 000FAC                     main@result 00A6            __size_of__div_to_l_ 013A  
                  ___ftmul@exp 0034                 __end_of___ftge 26B8                 __end_of___wmul 2BB2  
         __size_of_Delay10TCYx 0012             __end_of_ConvertADC 2DDA                 __end_of_fround 1A22  
                 _SetDDRamAddr 29EA           __size_of_Delay1KTCYx 0012   __end_of_SerialRxPinInterrupt 2628  
           SetDDRamAddr@DDaddr 0018            start_initialization 2D3A                      _ReadUSART 2D1C  
          __end_of__tdiv_to_l_ 212C              __size_of_Delay_ms 002C                      _OpenUSART 27A8  
              ___llmod@divisor 0019              __size_of_BusyXLCD 003A                ___llmod@counter 001E  
              ??_DelayFor18TCY 0015              __size_of_OpenXLCD 00A6                  ?i2_WriteUSART 0001  
                     ??___ftge 001B                       ??___wmul 0029                  sprintf@vd_608 0080  
                ?_WriteCmdXLCD 0001               __CFG_LPT1OSC$OFF 000000                       ??_fround 003D  
                   fround@prec 0043              __size_of___ftpack 00A8                      ___asftadd 2B3C  
                    ___asftmul 2B00                      ___asftsub 2AC4              __size_of___lltoft 0064  
                  __pbssCOMRAM 004A           __size_ofi2_putsUSART 005C                     ?_ReadUSART 0001  
            __size_of___lwtoft 002C                  __pcstackBANK0 0060            __end_of__stringdata 088F  
                 _isdigit$1861 0016                Delay1KTCYx@unit 0015                     ?_OpenUSART 0015  
                  sprintf@_val 0087                    sprintf@flag 008C                    sprintf@fval 0092  
                  sprintf@prec 0095                       ?_BusyADC 0001                       ?_ReadADC 0015  
                    __pnvBANK0 00AE              OpenADC@portconfig 0016                       ?_OpenADC 0015  
                    _main$2193 009A                 ??i2_WriteUSART 0001                   ??_WriteUSART 0015  
                    __pintcode 0008                 ??_WriteCmdXLCD 0015                       ?___awdiv 001C  
                     ?___ftadd 001D                       ?___awmod 0015                       ?___ftdiv 003A  
                     ?___ftneg 0015                       ?___lldiv 0015                       ?___ftmul 002B  
                     ?___llmod 0015                       ?___ftsub 0029                      __npowers_ 0829  
                     ?___fttol 0041                  ?_Delay10KTCYx 0001              __size_of_setupMCU 002C  
                  __tdiv_to_l_ 2028          __end_of_WriteDataXLCD 2A84                   ??__div_to_l_ 001B  
                  __smallconst 0800                     ?___asftadd 0044                       ?_isdigit 0001  
                   ?___asftmul 003A                     ?___asftsub 002F                       ?_sprintf 0066  
               __size_of_scale 03D0             __end_of_WriteUSART 2D80                 ___wmul@product 0029  
                OpenADC@config 0019                       _LATBbits 000F8A                       _PIE1bits 000F9D  
                ?_DelayPORXLCD 0001           _SerialRxPinInterrupt 0008                       _PIR1bits 000F9E  
              OpenXLCD@lcdtype 0019                       i2u505_47 25CA             __end_of__div_to_l_ 1EFC  
                     i2u380_40 29E2                       i2u380_47 29D8                       i2u379_40 29B2  
                     i2u379_47 29A8               __CFG_WDTPS$32768 000000                 ??_Delay10KTCYx 0015  
                    main@F4969 00A8                     _ADCON0bits 000FC2                      _putsUSART 28D6  
                  __stringdata 0877              ___wmul@multiplier 0025                      _putrsXLCD 2932  
                  ??_ReadUSART 0001                i2putsUSART@data 0002                       _Delay_ms 2C7A  
             Delay10KTCYx@unit 0016                       _BusyXLCD 2BB2                    ??_OpenUSART 0017  
              OpenUSART@config 001A                 ??_DelayPORXLCD 0016          ?_SerialRxPinInterrupt 0001  
                     _OpenXLCD 244A               __size_of_BusyADC 000C               __size_of_ReadADC 000A  
                     __Hrparam 0000               __size_of_OpenADC 0060                       __Lrparam 0000  
             __size_of___awdiv 00B0               __size_of___ftadd 01B8               __size_of___awmod 009C  
             __size_of___ftdiv 00DA               __size_of___ftneg 0026               __size_of___lldiv 0086  
             __size_of___ftmul 00EC               __size_of___llmod 006A               __size_of___ftsub 0036  
             __size_of___fttol 012C                       ___ftpack 23A2                    _fround$2194 0040  
                  _fround$2195 003D                       ___lltoft 2812                     ?_putsUSART 0016  
                     ___lwtoft 2C4E                    ??___asftadd 0049                     sprintf@exp 0090  
                  ??___asftmul 003F                    ??___asftsub 0034                     ?_putrsXLCD 0016  
             __size_of_isdigit 002A           __end_ofi2_WriteUSART 2D94                       __ptext10 2812  
                     __ptext11 273E                       __ptext20 1C0A                       __ptext12 26B8  
                     __ptext21 2C22                       __ptext13 1EFC                       __ptext30 2A84  
                     __ptext22 28D6                       __ptext14 2CD0                       __ptext31 29EA  
                     __ptext23 2D6C                       __ptext15 2628                       __ptext40 2DA6  
                     __ptext32 2DCE                       __ptext24 2932                       __ptext16 2AC4  
                     __ptext41 2DD6                       __ptext33 2D94                       __ptext25 2A44  
                     __ptext17 2BEC                       __ptext42 2DB8                       __ptext34 2D54  
                     __ptext26 2C4E                       __ptext18 2B00                       __ptext43 212C  
                     __ptext35 2BB2                       __ptext27 2218                       __ptext19 2B3C  
                     __ptext44 23A2                       __ptext36 2CF6                       __ptext28 2DC4  
                     __ptext37 27A8                       __ptext29 244A                       __ptext46 298E  
                     __ptext38 2876                       __ptext47 2D80                       __ptext39 2C7A  
                     __ptext48 2D1C                       __powers_ 0850           __end_of_WriteCmdXLCD 2AC4  
             __size_of_sprintf 0B86                  __size_of_main 01E8                       _setupMCU 2C22  
                ??_Delay10TCYx 0015                  ??_Delay1KTCYx 0015                       main@temp 00A3  
        __CFG_CPUDIV$OSC1_PLL2 000000                     _INTCONbits 000FF2                 OpenUSART@spbrg 0015  
                   Delay_ms@ms 0015                       isdigit@c 0017                       scale@scl 0040  
         __end_of_Delay10KTCYx 2D6C                       intlevel2 0000                      sprintf@ap 007A  
             __tdiv_to_l_@exp1 0023                      sprintf@vd 007C               __tdiv_to_l_@cntr 0022  
                    sprintf@sp 0066               __tdiv_to_l_@quot 001E         ??_SerialRxPinInterrupt 0006  
             ___lldiv@dividend 0015          __end_of_DelayFor18TCY 2D1C                   ?__tdiv_to_l_ 0015  
                ??i2_putsUSART 0004                    ??_putsUSART 0018            __end_of_Delay10TCYx 2DB8  
                     sprintf@c 0097                       sprintf@f 0068           __end_of_DelayPORXLCD 2DD6  
                  ??_putrsXLCD 0018               ___lldiv@quotient 001E            __end_of_Delay1KTCYx 2DA6  
             i2WriteUSART@data 0001                   _USART_Status 004A  
